package org.eclipse.xtend.core.idea.parser.antlr.internal;

import org.eclipse.xtext.idea.parser.AbstractPsiAntlrParser;
import org.eclipse.xtend.core.idea.lang.XtendElementTypeProvider;
import org.eclipse.xtext.idea.parser.TokenTypeProvider;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtend.core.services.XtendGrammarAccess;

import com.intellij.lang.PsiBuilder;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
/*******************************************************************************
 * Copyright (c) 2010, 2018 itemis AG (http://www.itemis.eu) and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *******************************************************************************/
@SuppressWarnings("all")
public class PsiInternalXtendParser extends AbstractPsiAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "KW_Package", "KW_Semicolon", "KW_Class", "KW_LessThanSign", "KW_Comma", "KW_GreaterThanSign", "KW_Extends", "KW_Implements", "KW_LeftCurlyBracket", "KW_RightCurlyBracket", "KW_Interface", "KW_Enum", "KW_Annotation", "KW_LeftParenthesis", "KW_RightParenthesis", "KW_EqualsSignGreaterThanSign", "KW_EqualsSign", "KW_Extension", "KW_Throws", "KW_New", "KW_FullStop", "KW_Public", "KW_Private", "KW_Protected", "KW_Abstract", "KW_Static", "KW_Dispatch", "KW_Final", "KW_Strictfp", "KW_Native", "KW_Volatile", "KW_Synchronized", "KW_Transient", "KW_Val", "KW_Var", "KW_Def", "KW_Override", "KW_Create", "KW_Colon", "KW_AFTER", "KW_BEFORE", "KW_SEPARATOR", "KW_Import", "KW_FullStopFullStopFullStop", "KW_QuestionMark", "KW_Try", "KW_Finally", "KW_VerticalLine", "KW_Switch", "KW_Default", "KW_Case", "KW_FOR", "KW_ENDFOR", "KW_IF", "KW_ELSE", "KW_ENDIF", "KW_ELSEIF", "KW_CommercialAt", "KW_NumberSign", "KW_LeftSquareBracket", "KW_RightSquareBracket", "KW_PlusSignEqualsSign", "KW_HyphenMinusEqualsSign", "KW_AsteriskEqualsSign", "KW_SolidusEqualsSign", "KW_PercentSignEqualsSign", "KW_GreaterThanSignEqualsSign", "KW_VerticalLineVerticalLine", "KW_AmpersandAmpersand", "KW_EqualsSignEqualsSign", "KW_ExclamationMarkEqualsSign", "KW_EqualsSignEqualsSignEqualsSign", "KW_ExclamationMarkEqualsSignEqualsSign", "KW_Instanceof", "KW_HyphenMinusGreaterThanSign", "KW_FullStopFullStopLessThanSign", "KW_FullStopFullStop", "KW_LessThanSignGreaterThanSign", "KW_QuestionMarkColon", "KW_PlusSign", "KW_HyphenMinus", "KW_Asterisk", "KW_AsteriskAsterisk", "KW_Solidus", "KW_PercentSign", "KW_ExclamationMark", "KW_As", "KW_PlusSignPlusSign", "KW_HyphenMinusHyphenMinus", "KW_ColonColon", "KW_QuestionMarkFullStop", "KW_If", "KW_Else", "KW_For", "KW_While", "KW_Do", "KW_Super", "KW_False", "KW_True", "KW_Null", "KW_Typeof", "KW_Throw", "KW_Return", "KW_Catch", "KW_Ampersand", "RULE_ID", "RULE_STRING", "RULE_RICH_TEXT", "RULE_RICH_TEXT_START", "RULE_RICH_TEXT_INBETWEEN", "RULE_COMMENT_RICH_TEXT_INBETWEEN", "RULE_RICH_TEXT_END", "RULE_COMMENT_RICH_TEXT_END", "RULE_HEX", "RULE_INT", "RULE_DECIMAL", "RULE_IDENTIFIER_START", "RULE_UNICODE_ESCAPE", "RULE_IDENTIFIER_PART", "RULE_HEX_DIGIT", "RULE_IN_RICH_STRING", "RULE_IDENTIFIER_PART_IMPL", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int KW_Case=54;
    public static final int RULE_HEX=117;
    public static final int KW_SolidusEqualsSign=68;
    public static final int KW_Else=96;
    public static final int KW_Throw=105;
    public static final int KW_PlusSignEqualsSign=65;
    public static final int KW_Solidus=87;
    public static final int KW_Comma=8;
    public static final int KW_Do=99;
    public static final int KW_ExclamationMarkEqualsSignEqualsSign=76;
    public static final int KW_Extends=10;
    public static final int KW_ExclamationMarkEqualsSign=74;
    public static final int KW_Package=4;
    public static final int KW_Finally=50;
    public static final int KW_Dispatch=30;
    public static final int RULE_ID=109;
    public static final int KW_QuestionMark=48;
    public static final int KW_False=101;
    public static final int RULE_RICH_TEXT_START=112;
    public static final int KW_AmpersandAmpersand=72;
    public static final int KW_AFTER=43;
    public static final int KW_Import=46;
    public static final int KW_HyphenMinus=84;
    public static final int KW_While=98;
    public static final int KW_Return=106;
    public static final int RULE_INT=118;
    public static final int KW_Catch=107;
    public static final int RULE_ML_COMMENT=126;
    public static final int KW_BEFORE=44;
    public static final int KW_PlusSignPlusSign=91;
    public static final int KW_Var=38;
    public static final int KW_Protected=27;
    public static final int KW_As=90;
    public static final int KW_FullStop=24;
    public static final int RULE_UNICODE_ESCAPE=121;
    public static final int KW_Enum=15;
    public static final int KW_GreaterThanSign=9;
    public static final int RULE_IDENTIFIER_PART=122;
    public static final int KW_RightSquareBracket=64;
    public static final int KW_VerticalLineVerticalLine=71;
    public static final int KW_Private=26;
    public static final int KW_Val=37;
    public static final int KW_ELSEIF=60;
    public static final int KW_Implements=11;
    public static final int KW_EqualsSign=20;
    public static final int KW_Transient=36;
    public static final int KW_LessThanSignGreaterThanSign=81;
    public static final int KW_Def=39;
    public static final int KW_FullStopFullStopFullStop=47;
    public static final int KW_FullStopFullStopLessThanSign=79;
    public static final int KW_ELSE=58;
    public static final int KW_NumberSign=62;
    public static final int KW_Interface=14;
    public static final int KW_EqualsSignEqualsSign=73;
    public static final int KW_ENDFOR=56;
    public static final int KW_HyphenMinusEqualsSign=66;
    public static final int RULE_HEX_DIGIT=123;
    public static final int KW_VerticalLine=51;
    public static final int KW_EqualsSignGreaterThanSign=19;
    public static final int KW_Synchronized=35;
    public static final int KW_Create=41;
    public static final int RULE_COMMENT_RICH_TEXT_END=116;
    public static final int KW_Volatile=34;
    public static final int KW_LeftSquareBracket=63;
    public static final int KW_LeftParenthesis=17;
    public static final int RULE_IDENTIFIER_START=120;
    public static final int KW_Override=40;
    public static final int KW_Ampersand=108;
    public static final int KW_Semicolon=5;
    public static final int KW_Public=25;
    public static final int KW_IF=57;
    public static final int KW_Colon=42;
    public static final int KW_Final=31;
    public static final int KW_HyphenMinusGreaterThanSign=78;
    public static final int KW_HyphenMinusHyphenMinus=92;
    public static final int KW_FOR=55;
    public static final int KW_For=97;
    public static final int KW_CommercialAt=61;
    public static final int KW_FullStopFullStop=80;
    public static final int KW_GreaterThanSignEqualsSign=70;
    public static final int KW_PercentSign=88;
    public static final int KW_Asterisk=85;
    public static final int RULE_DECIMAL=119;
    public static final int KW_RightParenthesis=18;
    public static final int KW_AsteriskAsterisk=86;
    public static final int KW_Try=49;
    public static final int KW_If=95;
    public static final int KW_Annotation=16;
    public static final int KW_Native=33;
    public static final int KW_RightCurlyBracket=13;
    public static final int KW_ENDIF=59;
    public static final int KW_LeftCurlyBracket=12;
    public static final int KW_Strictfp=32;
    public static final int KW_Instanceof=77;
    public static final int KW_Abstract=28;
    public static final int RULE_STRING=110;
    public static final int RULE_SL_COMMENT=127;
    public static final int RULE_IN_RICH_STRING=124;
    public static final int KW_Null=103;
    public static final int KW_Super=100;
    public static final int KW_Typeof=104;
    public static final int KW_SEPARATOR=45;
    public static final int RULE_COMMENT_RICH_TEXT_INBETWEEN=114;
    public static final int KW_ExclamationMark=89;
    public static final int KW_New=23;
    public static final int EOF=-1;
    public static final int KW_AsteriskEqualsSign=67;
    public static final int KW_ColonColon=93;
    public static final int RULE_RICH_TEXT=111;
    public static final int KW_Switch=52;
    public static final int RULE_WS=128;
    public static final int KW_QuestionMarkFullStop=94;
    public static final int RULE_RICH_TEXT_END=115;
    public static final int KW_Throws=22;
    public static final int KW_LessThanSign=7;
    public static final int KW_True=102;
    public static final int RULE_ANY_OTHER=129;
    public static final int RULE_RICH_TEXT_INBETWEEN=113;
    public static final int KW_Default=53;
    public static final int RULE_IDENTIFIER_PART_IMPL=125;
    public static final int KW_Class=6;
    public static final int KW_EqualsSignEqualsSignEqualsSign=75;
    public static final int KW_Static=29;
    public static final int KW_QuestionMarkColon=82;
    public static final int KW_PlusSign=83;
    public static final int KW_Extension=21;
    public static final int KW_PercentSignEqualsSign=69;


        public PsiInternalXtendParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public PsiInternalXtendParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return PsiInternalXtendParser.tokenNames; }
    public String getGrammarFileName() { return "PsiInternalXtend.g"; }



    	protected XtendGrammarAccess grammarAccess;

    	protected XtendElementTypeProvider elementTypeProvider;

    	public PsiInternalXtendParser(PsiBuilder builder, TokenStream input, XtendElementTypeProvider elementTypeProvider, XtendGrammarAccess grammarAccess) {
    		this(input);
    		setPsiBuilder(builder);
    		this.grammarAccess = grammarAccess;
    		this.elementTypeProvider = elementTypeProvider;
    	}

    	@Override
    	protected String getFirstRuleName() {
    		return "File";
    	}
    public final Boolean entryRuleFile() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleFile = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFileElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFile=ruleFile();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFile; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleFile() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Boolean lv_package_1_0 = null;

        Boolean lv_importSection_3_0 = null;

        Boolean lv_xtendTypes_4_0 = null;


        try {
            {
            {
            int alt2=2;
            int LA2_0 = input.LA(1);

            if ( (LA2_0==KW_Package) ) {
                int LA2_1 = input.LA(2);

                if ( (LA2_1==KW_Create||(LA2_1>=KW_AFTER && LA2_1<=KW_SEPARATOR)||LA2_1==RULE_ID) ) {
                    alt2=1;
                }
                else if ( (LA2_1==KW_Annotation) ) {
                    int LA2_4 = input.LA(3);

                    if ( (LA2_4==EOF||(LA2_4>=KW_Package && LA2_4<=KW_Class)||(LA2_4>=KW_Interface && LA2_4<=KW_Enum)||(LA2_4>=KW_FullStop && LA2_4<=KW_Transient)||LA2_4==KW_Import||LA2_4==KW_CommercialAt) ) {
                        alt2=1;
                    }
                    else if ( (LA2_4==KW_Annotation) ) {
                        int LA2_5 = input.LA(4);

                        if ( (LA2_5==KW_Annotation||LA2_5==KW_Create||(LA2_5>=KW_AFTER && LA2_5<=KW_SEPARATOR)||LA2_5==RULE_ID) ) {
                            alt2=1;
                        }
                    }
                }
            }
            switch (alt2) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getFile_PackageKeyword_0_0ElementType());
                      			
                    }
                    otherlv_0=(Token)match(input,KW_Package,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_0);
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getFile_PackageQualifiedNameParserRuleCall_0_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_package_1_0=ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    int alt1=2;
                    int LA1_0 = input.LA(1);

                    if ( (LA1_0==KW_Semicolon) ) {
                        alt1=1;
                    }
                    switch (alt1) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getFile_SemicolonKeyword_0_2ElementType());
                              				
                            }
                            otherlv_2=(Token)match(input,KW_Semicolon,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(otherlv_2);
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==KW_Import) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getFile_ImportSectionXImportSectionParserRuleCall_1_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_6);
                    lv_importSection_3_0=ruleXImportSection();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      					if(!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==KW_Package||LA4_0==KW_Class||(LA4_0>=KW_Interface && LA4_0<=KW_Annotation)||(LA4_0>=KW_Public && LA4_0<=KW_Transient)||LA4_0==KW_CommercialAt) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getFile_XtendTypesTypeParserRuleCall_2_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_xtendTypes_4_0=ruleType();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      					if(!current) {
            	      						associateWithSemanticElement();
            	      						current = true;
            	      					}
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleType() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleType = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getTypeElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleType=ruleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleType() throws RecognitionException {
        Boolean current = false;

        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Boolean lv_annotations_1_0 = null;

        Boolean lv_modifiers_3_0 = null;

        Boolean lv_name_5_0 = null;

        Boolean lv_typeParameters_7_0 = null;

        Boolean lv_typeParameters_9_0 = null;

        Boolean lv_extends_12_0 = null;

        Boolean lv_implements_14_0 = null;

        Boolean lv_implements_16_0 = null;

        Boolean lv_members_18_0 = null;

        Boolean lv_modifiers_21_0 = null;

        Boolean lv_name_23_0 = null;

        Boolean lv_typeParameters_25_0 = null;

        Boolean lv_typeParameters_27_0 = null;

        Boolean lv_extends_30_0 = null;

        Boolean lv_extends_32_0 = null;

        Boolean lv_members_34_0 = null;

        Boolean lv_modifiers_37_0 = null;

        Boolean lv_name_39_0 = null;

        Boolean lv_members_41_0 = null;

        Boolean lv_members_43_0 = null;

        Boolean lv_modifiers_47_0 = null;

        Boolean lv_name_49_0 = null;

        Boolean lv_members_51_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getType_XtendTypeDeclarationAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==KW_CommercialAt) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getType_AnnotationsXAnnotationParserRuleCall_1_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_annotations_1_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      					if(!current) {
            	      						associateWithSemanticElement();
            	      						current = true;
            	      					}
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);
            int alt25=4;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getType_XtendClassAnnotationInfoAction_2_0_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==KW_Package||(LA6_0>=KW_Public && LA6_0<=KW_Transient)) ) {
                            alt6=1;
                        }


                        switch (alt6) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_ModifiersCommonModifierParserRuleCall_2_0_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_modifiers_3_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_ClassKeyword_2_0_2ElementType());
                      				
                    }
                    otherlv_4=(Token)match(input,KW_Class,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_4);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getType_NameValidIDParserRuleCall_2_0_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_9);
                    lv_name_5_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( (LA8_0==KW_LessThanSign) ) {
                        alt8=1;
                    }
                    switch (alt8) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_LessThanSignKeyword_2_0_4_0ElementType());
                              					
                            }
                            otherlv_6=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_6);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_TypeParametersJvmTypeParameterParserRuleCall_2_0_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_7_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop7:
                            do {
                                int alt7=2;
                                int LA7_0 = input.LA(1);

                                if ( (LA7_0==KW_Comma) ) {
                                    alt7=1;
                                }


                                switch (alt7) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_0_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_8=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_8);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_TypeParametersJvmTypeParameterParserRuleCall_2_0_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_9_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop7;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_GreaterThanSignKeyword_2_0_4_3ElementType());
                              					
                            }
                            otherlv_10=(Token)match(input,KW_GreaterThanSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_10);
                              					
                            }

                            }
                            break;

                    }
                    int alt9=2;
                    int LA9_0 = input.LA(1);

                    if ( (LA9_0==KW_Extends) ) {
                        alt9=1;
                    }
                    switch (alt9) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_ExtendsKeyword_2_0_5_0ElementType());
                              					
                            }
                            otherlv_11=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_11);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_0_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            lv_extends_12_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }


                            }
                            break;

                    }
                    int alt11=2;
                    int LA11_0 = input.LA(1);

                    if ( (LA11_0==KW_Implements) ) {
                        alt11=1;
                    }
                    switch (alt11) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_ImplementsKeyword_2_0_6_0ElementType());
                              					
                            }
                            otherlv_13=(Token)match(input,KW_Implements,FOLLOW_13); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_13);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_ImplementsJvmSuperTypeReferenceParserRuleCall_2_0_6_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            lv_implements_14_0=ruleJvmSuperTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop10:
                            do {
                                int alt10=2;
                                int LA10_0 = input.LA(1);

                                if ( (LA10_0==KW_Comma) ) {
                                    alt10=1;
                                }


                                switch (alt10) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_0_6_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_15=(Token)match(input,KW_Comma,FOLLOW_13); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_15);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_ImplementsJvmSuperTypeReferenceParserRuleCall_2_0_6_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_implements_16_0=ruleJvmSuperTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop10;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_LeftCurlyBracketKeyword_2_0_7ElementType());
                      				
                    }
                    otherlv_17=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_17);
                      				
                    }
                    loop12:
                    do {
                        int alt12=2;
                        int LA12_0 = input.LA(1);

                        if ( (LA12_0==KW_Package||LA12_0==KW_Class||(LA12_0>=KW_Interface && LA12_0<=KW_LeftParenthesis)||LA12_0==KW_EqualsSignGreaterThanSign||LA12_0==KW_Extension||LA12_0==KW_New||(LA12_0>=KW_Public && LA12_0<=KW_Create)||(LA12_0>=KW_AFTER && LA12_0<=KW_SEPARATOR)||LA12_0==KW_CommercialAt||LA12_0==RULE_ID) ) {
                            alt12=1;
                        }


                        switch (alt12) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_MembersMemberParserRuleCall_2_0_8_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_18_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop12;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_RightCurlyBracketKeyword_2_0_9ElementType());
                      				
                    }
                    otherlv_19=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_19);
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getType_XtendInterfaceAnnotationInfoAction_2_1_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==KW_Package||(LA13_0>=KW_Public && LA13_0<=KW_Transient)) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_ModifiersCommonModifierParserRuleCall_2_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_modifiers_21_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_InterfaceKeyword_2_1_2ElementType());
                      				
                    }
                    otherlv_22=(Token)match(input,KW_Interface,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_22);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getType_NameValidIDParserRuleCall_2_1_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    lv_name_23_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt15=2;
                    int LA15_0 = input.LA(1);

                    if ( (LA15_0==KW_LessThanSign) ) {
                        alt15=1;
                    }
                    switch (alt15) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_LessThanSignKeyword_2_1_4_0ElementType());
                              					
                            }
                            otherlv_24=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_24);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_25_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop14:
                            do {
                                int alt14=2;
                                int LA14_0 = input.LA(1);

                                if ( (LA14_0==KW_Comma) ) {
                                    alt14=1;
                                }


                                switch (alt14) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_1_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_26=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_26);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_27_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop14;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_GreaterThanSignKeyword_2_1_4_3ElementType());
                              					
                            }
                            otherlv_28=(Token)match(input,KW_GreaterThanSign,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_28);
                              					
                            }

                            }
                            break;

                    }
                    int alt17=2;
                    int LA17_0 = input.LA(1);

                    if ( (LA17_0==KW_Extends) ) {
                        alt17=1;
                    }
                    switch (alt17) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_ExtendsKeyword_2_1_5_0ElementType());
                              					
                            }
                            otherlv_29=(Token)match(input,KW_Extends,FOLLOW_13); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_29);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_ExtendsJvmSuperTypeReferenceParserRuleCall_2_1_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            lv_extends_30_0=ruleJvmSuperTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop16:
                            do {
                                int alt16=2;
                                int LA16_0 = input.LA(1);

                                if ( (LA16_0==KW_Comma) ) {
                                    alt16=1;
                                }


                                switch (alt16) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_1_5_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_31=(Token)match(input,KW_Comma,FOLLOW_13); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_31);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_ExtendsJvmSuperTypeReferenceParserRuleCall_2_1_5_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_extends_32_0=ruleJvmSuperTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop16;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_LeftCurlyBracketKeyword_2_1_6ElementType());
                      				
                    }
                    otherlv_33=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_33);
                      				
                    }
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==KW_Package||LA18_0==KW_Class||(LA18_0>=KW_Interface && LA18_0<=KW_LeftParenthesis)||LA18_0==KW_EqualsSignGreaterThanSign||LA18_0==KW_Extension||LA18_0==KW_New||(LA18_0>=KW_Public && LA18_0<=KW_Create)||(LA18_0>=KW_AFTER && LA18_0<=KW_SEPARATOR)||LA18_0==KW_CommercialAt||LA18_0==RULE_ID) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_MembersMemberParserRuleCall_2_1_7_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_34_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_RightCurlyBracketKeyword_2_1_8ElementType());
                      				
                    }
                    otherlv_35=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_35);
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getType_XtendEnumAnnotationInfoAction_2_2_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==KW_Package||(LA19_0>=KW_Public && LA19_0<=KW_Transient)) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_ModifiersCommonModifierParserRuleCall_2_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_modifiers_37_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_EnumKeyword_2_2_2ElementType());
                      				
                    }
                    otherlv_38=(Token)match(input,KW_Enum,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_38);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getType_NameValidIDParserRuleCall_2_2_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_39_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_LeftCurlyBracketKeyword_2_2_4ElementType());
                      				
                    }
                    otherlv_40=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_40);
                      				
                    }
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==KW_Annotation||LA21_0==KW_Create||(LA21_0>=KW_AFTER && LA21_0<=KW_SEPARATOR)||LA21_0==KW_CommercialAt||LA21_0==RULE_ID) ) {
                        alt21=1;
                    }
                    switch (alt21) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getType_MembersXtendEnumLiteralParserRuleCall_2_2_5_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_22);
                            lv_members_41_0=ruleXtendEnumLiteral();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop20:
                            do {
                                int alt20=2;
                                int LA20_0 = input.LA(1);

                                if ( (LA20_0==KW_Comma) ) {
                                    alt20=1;
                                }


                                switch (alt20) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getType_CommaKeyword_2_2_5_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_42=(Token)match(input,KW_Comma,FOLLOW_23); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_42);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getType_MembersXtendEnumLiteralParserRuleCall_2_2_5_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_22);
                            	    lv_members_43_0=ruleXtendEnumLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop20;
                                }
                            } while (true);


                            }
                            break;

                    }
                    int alt22=2;
                    int LA22_0 = input.LA(1);

                    if ( (LA22_0==KW_Semicolon) ) {
                        alt22=1;
                    }
                    switch (alt22) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getType_SemicolonKeyword_2_2_6ElementType());
                              					
                            }
                            otherlv_44=(Token)match(input,KW_Semicolon,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_44);
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_RightCurlyBracketKeyword_2_2_7ElementType());
                      				
                    }
                    otherlv_45=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_45);
                      				
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getType_XtendAnnotationTypeAnnotationInfoAction_2_3_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==KW_Package||(LA23_0>=KW_Public && LA23_0<=KW_Transient)) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_ModifiersCommonModifierParserRuleCall_2_3_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_modifiers_47_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_AnnotationKeyword_2_3_2ElementType());
                      				
                    }
                    otherlv_48=(Token)match(input,KW_Annotation,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_48);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getType_NameValidIDParserRuleCall_2_3_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_49_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_LeftCurlyBracketKeyword_2_3_4ElementType());
                      				
                    }
                    otherlv_50=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_50);
                      				
                    }
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==KW_Package||LA24_0==KW_Class||(LA24_0>=KW_Interface && LA24_0<=KW_LeftParenthesis)||LA24_0==KW_EqualsSignGreaterThanSign||(LA24_0>=KW_Public && LA24_0<=KW_Var)||LA24_0==KW_Create||(LA24_0>=KW_AFTER && LA24_0<=KW_SEPARATOR)||LA24_0==KW_CommercialAt||LA24_0==RULE_ID) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getType_MembersAnnotationFieldParserRuleCall_2_3_5_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_26);
                    	    lv_members_51_0=ruleAnnotationField();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getType_RightCurlyBracketKeyword_2_3_6ElementType());
                      				
                    }
                    otherlv_52=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_52);
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmSuperTypeReference() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmSuperTypeReference = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmSuperTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmSuperTypeReference=ruleJvmSuperTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmSuperTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmSuperTypeReference() throws RecognitionException {
        Boolean current = false;

        Boolean this_JvmParameterizedTypeReference_0 = null;

        Boolean this_XFunctionSuperTypeRef_1 = null;


        try {
            {
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==KW_Annotation||LA26_0==KW_Create||(LA26_0>=KW_AFTER && LA26_0<=KW_SEPARATOR)||LA26_0==RULE_ID) ) {
                alt26=1;
            }
            else if ( (LA26_0==KW_LeftParenthesis||LA26_0==KW_EqualsSignGreaterThanSign) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmSuperTypeReference_JvmParameterizedTypeReferenceParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmParameterizedTypeReference_0;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmSuperTypeReference_XFunctionSuperTypeRefParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionSuperTypeRef_1=ruleXFunctionSuperTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionSuperTypeRef_1;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXFunctionSuperTypeRef() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXFunctionSuperTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXFunctionSuperTypeRefElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionSuperTypeRef=ruleXFunctionSuperTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionSuperTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXFunctionSuperTypeRef() throws RecognitionException {
        Boolean current = false;

        Token lv_instanceContext_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Boolean lv_paramTypes_1_0 = null;

        Boolean lv_paramTypes_3_0 = null;

        Boolean lv_returnType_6_0 = null;


        try {
            {
            {
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==KW_LeftParenthesis) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXFunctionSuperTypeRef_InstanceContextLeftParenthesisKeyword_0_0_0ElementType());
                      					
                    }
                    lv_instanceContext_0_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_instanceContext_0_0);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( ((LA28_0>=KW_Annotation && LA28_0<=KW_LeftParenthesis)||LA28_0==KW_EqualsSignGreaterThanSign||LA28_0==KW_Create||(LA28_0>=KW_AFTER && LA28_0<=KW_SEPARATOR)||LA28_0==RULE_ID) ) {
                        alt28=1;
                    }
                    switch (alt28) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXFunctionSuperTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_28);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }
                            loop27:
                            do {
                                int alt27=2;
                                int LA27_0 = input.LA(1);

                                if ( (LA27_0==KW_Comma) ) {
                                    alt27=1;
                                }


                                switch (alt27) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXFunctionSuperTypeRef_CommaKeyword_0_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_2=(Token)match(input,KW_Comma,FOLLOW_29); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_2);
                            	      					
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXFunctionSuperTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      								if(!current) {
                            	      									associateWithSemanticElement();
                            	      									current = true;
                            	      								}
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop27;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFunctionSuperTypeRef_RightParenthesisKeyword_0_2ElementType());
                      			
                    }
                    otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_4);
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXFunctionSuperTypeRef_EqualsSignGreaterThanSignKeyword_1ElementType());
              		
            }
            otherlv_5=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_5);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXFunctionSuperTypeRef_ReturnTypeJvmTypeReferenceParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleAnnotationField() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleAnnotationField = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getAnnotationFieldElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotationField=ruleAnnotationField();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotationField; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleAnnotationField() throws RecognitionException {
        Boolean current = false;

        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        Token otherlv_32=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_55=null;
        Token otherlv_57=null;
        Token otherlv_58=null;
        Token otherlv_61=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        Boolean lv_annotations_1_0 = null;

        Boolean lv_modifiers_3_0 = null;

        Boolean lv_modifiers_4_0 = null;

        Boolean lv_modifiers_5_0 = null;

        Boolean lv_type_6_0 = null;

        Boolean lv_name_7_0 = null;

        Boolean lv_modifiers_9_0 = null;

        Boolean lv_type_10_0 = null;

        Boolean lv_name_11_0 = null;

        Boolean lv_initialValue_13_0 = null;

        Boolean lv_modifiers_16_0 = null;

        Boolean lv_name_18_0 = null;

        Boolean lv_typeParameters_20_0 = null;

        Boolean lv_typeParameters_22_0 = null;

        Boolean lv_extends_25_0 = null;

        Boolean lv_implements_27_0 = null;

        Boolean lv_implements_29_0 = null;

        Boolean lv_members_31_0 = null;

        Boolean lv_modifiers_34_0 = null;

        Boolean lv_name_36_0 = null;

        Boolean lv_typeParameters_38_0 = null;

        Boolean lv_typeParameters_40_0 = null;

        Boolean lv_extends_43_0 = null;

        Boolean lv_extends_45_0 = null;

        Boolean lv_members_47_0 = null;

        Boolean lv_modifiers_50_0 = null;

        Boolean lv_name_52_0 = null;

        Boolean lv_members_54_0 = null;

        Boolean lv_members_56_0 = null;

        Boolean lv_modifiers_60_0 = null;

        Boolean lv_name_62_0 = null;

        Boolean lv_members_64_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getAnnotationField_XtendMemberAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==KW_CommercialAt) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getAnnotationField_AnnotationsXAnnotationParserRuleCall_1_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_31);
            	    lv_annotations_1_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      					if(!current) {
            	      						associateWithSemanticElement();
            	      						current = true;
            	      					}
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);
            int alt57=5;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    {
                    {
                    int alt35=2;
                    alt35 = dfa35.predict(input);
                    switch (alt35) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								precedeComposite(elementTypeProvider.getAnnotationField_XtendFieldAnnotationInfoAction_2_0_0_0_0ElementType());
                              								doneComposite();
                              								associateWithSemanticElement();
                              							
                            }

                            }
                            loop31:
                            do {
                                int alt31=2;
                                int LA31_0 = input.LA(1);

                                if ( (LA31_0==KW_Package||(LA31_0>=KW_Public && LA31_0<=KW_Transient)) ) {
                                    alt31=1;
                                }


                                switch (alt31) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_0_0_0_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_32);
                            	    lv_modifiers_3_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop31;
                                }
                            } while (true);
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getAnnotationField_ModifiersFieldModifierParserRuleCall_2_0_0_0_2_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_29);
                            lv_modifiers_4_0=ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }
                            loop32:
                            do {
                                int alt32=2;
                                int LA32_0 = input.LA(1);

                                if ( (LA32_0==KW_Package||(LA32_0>=KW_Public && LA32_0<=KW_Transient)) ) {
                                    alt32=1;
                                }


                                switch (alt32) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_0_0_0_3_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_modifiers_5_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop32;
                                }
                            } while (true);
                            int alt33=2;
                            alt33 = dfa33.predict(input);
                            switch (alt33) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {

                                      									markComposite(elementTypeProvider.getAnnotationField_TypeJvmTypeReferenceParserRuleCall_2_0_0_0_4_0ElementType());
                                      								
                                    }
                                    pushFollow(FOLLOW_3);
                                    lv_type_6_0=ruleJvmTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									doneComposite();
                                      									if(!current) {
                                      										associateWithSemanticElement();
                                      										current = true;
                                      									}
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_0_0_0_5_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_33);
                            lv_name_7_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								precedeComposite(elementTypeProvider.getAnnotationField_XtendFieldAnnotationInfoAction_2_0_0_1_0ElementType());
                              								doneComposite();
                              								associateWithSemanticElement();
                              							
                            }

                            }
                            loop34:
                            do {
                                int alt34=2;
                                int LA34_0 = input.LA(1);

                                if ( (LA34_0==KW_Package||(LA34_0>=KW_Public && LA34_0<=KW_Transient)) ) {
                                    alt34=1;
                                }


                                switch (alt34) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_0_0_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_modifiers_9_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop34;
                                }
                            } while (true);
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getAnnotationField_TypeJvmTypeReferenceParserRuleCall_2_0_0_1_2_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_3);
                            lv_type_10_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_0_0_1_3_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_33);
                            lv_name_11_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }


                            }


                            }
                            break;

                    }
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==KW_EqualsSign) ) {
                        alt36=1;
                    }
                    switch (alt36) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_EqualsSignKeyword_2_0_1_0ElementType());
                              					
                            }
                            otherlv_12=(Token)match(input,KW_EqualsSign,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_12);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_InitialValueXAnnotationElementValueParserRuleCall_2_0_1_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_35);
                            lv_initialValue_13_0=ruleXAnnotationElementValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }


                            }
                            break;

                    }
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==KW_Semicolon) ) {
                        alt37=1;
                    }
                    switch (alt37) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_SemicolonKeyword_2_0_2ElementType());
                              					
                            }
                            otherlv_14=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_14);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getAnnotationField_XtendClassAnnotationInfoAction_2_1_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==KW_Package||(LA38_0>=KW_Public && LA38_0<=KW_Transient)) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_modifiers_16_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_ClassKeyword_2_1_2ElementType());
                      				
                    }
                    otherlv_17=(Token)match(input,KW_Class,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_17);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_1_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_9);
                    lv_name_18_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==KW_LessThanSign) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_LessThanSignKeyword_2_1_4_0ElementType());
                              					
                            }
                            otherlv_19=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_19);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_20_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop39:
                            do {
                                int alt39=2;
                                int LA39_0 = input.LA(1);

                                if ( (LA39_0==KW_Comma) ) {
                                    alt39=1;
                                }


                                switch (alt39) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_1_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_21=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_21);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_22_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop39;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_GreaterThanSignKeyword_2_1_4_3ElementType());
                              					
                            }
                            otherlv_23=(Token)match(input,KW_GreaterThanSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_23);
                              					
                            }

                            }
                            break;

                    }
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==KW_Extends) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_ExtendsKeyword_2_1_5_0ElementType());
                              					
                            }
                            otherlv_24=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_24);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_1_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            lv_extends_25_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }


                            }
                            break;

                    }
                    int alt43=2;
                    int LA43_0 = input.LA(1);

                    if ( (LA43_0==KW_Implements) ) {
                        alt43=1;
                    }
                    switch (alt43) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_ImplementsKeyword_2_1_6_0ElementType());
                              					
                            }
                            otherlv_26=(Token)match(input,KW_Implements,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_26);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_ImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            lv_implements_27_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop42:
                            do {
                                int alt42=2;
                                int LA42_0 = input.LA(1);

                                if ( (LA42_0==KW_Comma) ) {
                                    alt42=1;
                                }


                                switch (alt42) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_1_6_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_28=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_28);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ImplementsJvmParameterizedTypeReferenceParserRuleCall_2_1_6_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_implements_29_0=ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop42;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_LeftCurlyBracketKeyword_2_1_7ElementType());
                      				
                    }
                    otherlv_30=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_30);
                      				
                    }
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==KW_Package||LA44_0==KW_Class||(LA44_0>=KW_Interface && LA44_0<=KW_LeftParenthesis)||LA44_0==KW_EqualsSignGreaterThanSign||LA44_0==KW_Extension||LA44_0==KW_New||(LA44_0>=KW_Public && LA44_0<=KW_Create)||(LA44_0>=KW_AFTER && LA44_0<=KW_SEPARATOR)||LA44_0==KW_CommercialAt||LA44_0==RULE_ID) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_MembersMemberParserRuleCall_2_1_8_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_31_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop44;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_RightCurlyBracketKeyword_2_1_9ElementType());
                      				
                    }
                    otherlv_32=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_32);
                      				
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getAnnotationField_XtendInterfaceAnnotationInfoAction_2_2_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==KW_Package||(LA45_0>=KW_Public && LA45_0<=KW_Transient)) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_modifiers_34_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_InterfaceKeyword_2_2_2ElementType());
                      				
                    }
                    otherlv_35=(Token)match(input,KW_Interface,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_35);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_2_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    lv_name_36_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==KW_LessThanSign) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_LessThanSignKeyword_2_2_4_0ElementType());
                              					
                            }
                            otherlv_37=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_37);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_TypeParametersJvmTypeParameterParserRuleCall_2_2_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_38_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop46:
                            do {
                                int alt46=2;
                                int LA46_0 = input.LA(1);

                                if ( (LA46_0==KW_Comma) ) {
                                    alt46=1;
                                }


                                switch (alt46) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_2_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_39=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_39);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_TypeParametersJvmTypeParameterParserRuleCall_2_2_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_40_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop46;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_GreaterThanSignKeyword_2_2_4_3ElementType());
                              					
                            }
                            otherlv_41=(Token)match(input,KW_GreaterThanSign,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_41);
                              					
                            }

                            }
                            break;

                    }
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==KW_Extends) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_ExtendsKeyword_2_2_5_0ElementType());
                              					
                            }
                            otherlv_42=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_42);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            lv_extends_43_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop48:
                            do {
                                int alt48=2;
                                int LA48_0 = input.LA(1);

                                if ( (LA48_0==KW_Comma) ) {
                                    alt48=1;
                                }


                                switch (alt48) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_2_5_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_44=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_44);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_2_5_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_extends_45_0=ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop48;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_LeftCurlyBracketKeyword_2_2_6ElementType());
                      				
                    }
                    otherlv_46=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_46);
                      				
                    }
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==KW_Package||LA50_0==KW_Class||(LA50_0>=KW_Interface && LA50_0<=KW_LeftParenthesis)||LA50_0==KW_EqualsSignGreaterThanSign||LA50_0==KW_Extension||LA50_0==KW_New||(LA50_0>=KW_Public && LA50_0<=KW_Create)||(LA50_0>=KW_AFTER && LA50_0<=KW_SEPARATOR)||LA50_0==KW_CommercialAt||LA50_0==RULE_ID) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_MembersMemberParserRuleCall_2_2_7_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_47_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_RightCurlyBracketKeyword_2_2_8ElementType());
                      				
                    }
                    otherlv_48=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_48);
                      				
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getAnnotationField_XtendEnumAnnotationInfoAction_2_3_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==KW_Package||(LA51_0>=KW_Public && LA51_0<=KW_Transient)) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_3_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_modifiers_50_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_EnumKeyword_2_3_2ElementType());
                      				
                    }
                    otherlv_51=(Token)match(input,KW_Enum,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_51);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_3_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_52_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_LeftCurlyBracketKeyword_2_3_4ElementType());
                      				
                    }
                    otherlv_53=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_53);
                      				
                    }
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==KW_Annotation||LA53_0==KW_Create||(LA53_0>=KW_AFTER && LA53_0<=KW_SEPARATOR)||LA53_0==KW_CommercialAt||LA53_0==RULE_ID) ) {
                        alt53=1;
                    }
                    switch (alt53) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getAnnotationField_MembersXtendEnumLiteralParserRuleCall_2_3_5_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_22);
                            lv_members_54_0=ruleXtendEnumLiteral();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop52:
                            do {
                                int alt52=2;
                                int LA52_0 = input.LA(1);

                                if ( (LA52_0==KW_Comma) ) {
                                    alt52=1;
                                }


                                switch (alt52) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getAnnotationField_CommaKeyword_2_3_5_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_55=(Token)match(input,KW_Comma,FOLLOW_23); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_55);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getAnnotationField_MembersXtendEnumLiteralParserRuleCall_2_3_5_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_22);
                            	    lv_members_56_0=ruleXtendEnumLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop52;
                                }
                            } while (true);


                            }
                            break;

                    }
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==KW_Semicolon) ) {
                        alt54=1;
                    }
                    switch (alt54) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getAnnotationField_SemicolonKeyword_2_3_6ElementType());
                              					
                            }
                            otherlv_57=(Token)match(input,KW_Semicolon,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_57);
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_RightCurlyBracketKeyword_2_3_7ElementType());
                      				
                    }
                    otherlv_58=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_58);
                      				
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getAnnotationField_XtendAnnotationTypeAnnotationInfoAction_2_4_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==KW_Package||(LA55_0>=KW_Public && LA55_0<=KW_Transient)) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_ModifiersCommonModifierParserRuleCall_2_4_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_modifiers_60_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_AnnotationKeyword_2_4_2ElementType());
                      				
                    }
                    otherlv_61=(Token)match(input,KW_Annotation,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_61);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getAnnotationField_NameValidIDParserRuleCall_2_4_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_62_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_LeftCurlyBracketKeyword_2_4_4ElementType());
                      				
                    }
                    otherlv_63=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_63);
                      				
                    }
                    loop56:
                    do {
                        int alt56=2;
                        int LA56_0 = input.LA(1);

                        if ( (LA56_0==KW_Package||LA56_0==KW_Class||(LA56_0>=KW_Interface && LA56_0<=KW_LeftParenthesis)||LA56_0==KW_EqualsSignGreaterThanSign||(LA56_0>=KW_Public && LA56_0<=KW_Var)||LA56_0==KW_Create||(LA56_0>=KW_AFTER && LA56_0<=KW_SEPARATOR)||LA56_0==KW_CommercialAt||LA56_0==RULE_ID) ) {
                            alt56=1;
                        }


                        switch (alt56) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getAnnotationField_MembersAnnotationFieldParserRuleCall_2_4_5_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_26);
                    	    lv_members_64_0=ruleAnnotationField();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop56;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getAnnotationField_RightCurlyBracketKeyword_2_4_6ElementType());
                      				
                    }
                    otherlv_65=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_65);
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleMember() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleMember = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getMemberElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMember=ruleMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleMember() throws RecognitionException {
        Boolean current = false;

        Token lv_modifiers_8_0=null;
        Token lv_modifiers_15_0=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_37=null;
        Token otherlv_40=null;
        Token otherlv_43=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_53=null;
        Token otherlv_55=null;
        Token otherlv_59=null;
        Token otherlv_62=null;
        Token otherlv_63=null;
        Token otherlv_65=null;
        Token otherlv_67=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_73=null;
        Token otherlv_75=null;
        Token otherlv_80=null;
        Token otherlv_82=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_87=null;
        Token otherlv_89=null;
        Token otherlv_91=null;
        Token otherlv_93=null;
        Token otherlv_95=null;
        Token otherlv_98=null;
        Token otherlv_100=null;
        Token otherlv_102=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_109=null;
        Token otherlv_111=null;
        Token otherlv_114=null;
        Token otherlv_116=null;
        Token otherlv_118=null;
        Token otherlv_120=null;
        Token otherlv_121=null;
        Token otherlv_124=null;
        Token otherlv_126=null;
        Token otherlv_128=null;
        Boolean lv_annotations_1_0 = null;

        Boolean lv_modifiers_3_0 = null;

        Boolean lv_modifiers_4_0 = null;

        Boolean lv_modifiers_5_0 = null;

        Boolean lv_type_6_0 = null;

        Boolean lv_name_7_0 = null;

        Boolean lv_modifiers_9_0 = null;

        Boolean lv_modifiers_10_0 = null;

        Boolean lv_type_11_0 = null;

        Boolean lv_name_12_0 = null;

        Boolean lv_modifiers_13_0 = null;

        Boolean lv_modifiers_14_0 = null;

        Boolean lv_modifiers_16_0 = null;

        Boolean lv_type_17_0 = null;

        Boolean lv_name_18_0 = null;

        Boolean lv_type_19_0 = null;

        Boolean lv_name_20_0 = null;

        Boolean lv_initialValue_22_0 = null;

        Boolean lv_modifiers_25_0 = null;

        Boolean lv_modifiers_26_0 = null;

        Boolean lv_modifiers_27_0 = null;

        Boolean lv_modifiers_28_0 = null;

        Boolean lv_typeParameters_30_0 = null;

        Boolean lv_typeParameters_32_0 = null;

        Boolean lv_returnType_34_0 = null;

        Boolean lv_createExtensionInfo_35_0 = null;

        Boolean lv_name_36_0 = null;

        Boolean lv_returnType_38_0 = null;

        Boolean lv_name_39_0 = null;

        Boolean lv_returnType_41_0 = null;

        Boolean lv_name_42_0 = null;

        Boolean lv_createExtensionInfo_44_0 = null;

        Boolean lv_name_45_0 = null;

        Boolean lv_name_47_0 = null;

        Boolean lv_parameters_49_0 = null;

        Boolean lv_parameters_51_0 = null;

        Boolean lv_exceptions_54_0 = null;

        Boolean lv_exceptions_56_0 = null;

        Boolean lv_expression_57_0 = null;

        Boolean lv_expression_58_0 = null;

        Boolean lv_modifiers_61_0 = null;

        Boolean lv_typeParameters_64_0 = null;

        Boolean lv_typeParameters_66_0 = null;

        Boolean lv_parameters_69_0 = null;

        Boolean lv_parameters_71_0 = null;

        Boolean lv_exceptions_74_0 = null;

        Boolean lv_exceptions_76_0 = null;

        Boolean lv_expression_77_0 = null;

        Boolean lv_modifiers_79_0 = null;

        Boolean lv_name_81_0 = null;

        Boolean lv_typeParameters_83_0 = null;

        Boolean lv_typeParameters_85_0 = null;

        Boolean lv_extends_88_0 = null;

        Boolean lv_implements_90_0 = null;

        Boolean lv_implements_92_0 = null;

        Boolean lv_members_94_0 = null;

        Boolean lv_modifiers_97_0 = null;

        Boolean lv_name_99_0 = null;

        Boolean lv_typeParameters_101_0 = null;

        Boolean lv_typeParameters_103_0 = null;

        Boolean lv_extends_106_0 = null;

        Boolean lv_extends_108_0 = null;

        Boolean lv_members_110_0 = null;

        Boolean lv_modifiers_113_0 = null;

        Boolean lv_name_115_0 = null;

        Boolean lv_members_117_0 = null;

        Boolean lv_members_119_0 = null;

        Boolean lv_modifiers_123_0 = null;

        Boolean lv_name_125_0 = null;

        Boolean lv_members_127_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getMember_XtendMemberAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==KW_CommercialAt) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getMember_AnnotationsXAnnotationParserRuleCall_1_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_36);
            	    lv_annotations_1_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      					if(!current) {
            	      						associateWithSemanticElement();
            	      						current = true;
            	      					}
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);
            int alt106=7;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendFieldAnnotationInfoAction_2_0_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( (LA59_0==KW_Package||(LA59_0>=KW_Public && LA59_0<=KW_Transient)) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_modifiers_3_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop59;
                        }
                    } while (true);
                    int alt67=4;
                    alt67 = dfa67.predict(input);
                    switch (alt67) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_ModifiersFieldModifierParserRuleCall_2_0_2_0_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_29);
                            lv_modifiers_4_0=ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }
                            loop60:
                            do {
                                int alt60=2;
                                int LA60_0 = input.LA(1);

                                if ( (LA60_0==KW_Package||(LA60_0>=KW_Public && LA60_0<=KW_Transient)) ) {
                                    alt60=1;
                                }


                                switch (alt60) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_2_0_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_modifiers_5_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop60;
                                }
                            } while (true);
                            int alt61=2;
                            alt61 = dfa61.predict(input);
                            switch (alt61) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {

                                      									markComposite(elementTypeProvider.getMember_TypeJvmTypeReferenceParserRuleCall_2_0_2_0_2_0ElementType());
                                      								
                                    }
                                    pushFollow(FOLLOW_3);
                                    lv_type_6_0=ruleJvmTypeReference();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									doneComposite();
                                      									if(!current) {
                                      										associateWithSemanticElement();
                                      										current = true;
                                      									}
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_0_2_0_3_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_33);
                            lv_name_7_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markLeaf(elementTypeProvider.getMember_ModifiersExtensionKeyword_2_0_2_1_0_0ElementType());
                              								
                            }
                            lv_modifiers_8_0=(Token)match(input,KW_Extension,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneLeaf(lv_modifiers_8_0);
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }
                            loop62:
                            do {
                                int alt62=3;
                                int LA62_0 = input.LA(1);

                                if ( ((LA62_0>=KW_Val && LA62_0<=KW_Var)) ) {
                                    alt62=1;
                                }
                                else if ( (LA62_0==KW_Package||(LA62_0>=KW_Public && LA62_0<=KW_Transient)) ) {
                                    alt62=2;
                                }


                                switch (alt62) {
                            	case 1 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										markComposite(elementTypeProvider.getMember_ModifiersFieldModifierParserRuleCall_2_0_2_1_1_0_0ElementType());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_modifiers_9_0=ruleFieldModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										doneComposite();
                            	      										if(!current) {
                            	      											associateWithSemanticElement();
                            	      											current = true;
                            	      										}
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;
                            	case 2 :
                            	    {
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      										markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_2_1_1_1_0ElementType());
                            	      									
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_modifiers_10_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      										doneComposite();
                            	      										if(!current) {
                            	      											associateWithSemanticElement();
                            	      											current = true;
                            	      										}
                            	      									
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop62;
                                }
                            } while (true);
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_TypeJvmTypeReferenceParserRuleCall_2_0_2_1_2_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_37);
                            lv_type_11_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }
                            int alt63=2;
                            alt63 = dfa63.predict(input);
                            switch (alt63) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {

                                      									markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_0_2_1_3_0ElementType());
                                      								
                                    }
                                    pushFollow(FOLLOW_33);
                                    lv_name_12_0=ruleValidID();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									doneComposite();
                                      									if(!current) {
                                      										associateWithSemanticElement();
                                      										current = true;
                                      									}
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_ModifiersFieldModifierParserRuleCall_2_0_2_2_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_38);
                            lv_modifiers_13_0=ruleFieldModifier();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }
                            loop64:
                            do {
                                int alt64=2;
                                int LA64_0 = input.LA(1);

                                if ( (LA64_0==KW_Package||(LA64_0>=KW_Public && LA64_0<=KW_Transient)) ) {
                                    alt64=1;
                                }


                                switch (alt64) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_2_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_38);
                            	    lv_modifiers_14_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop64;
                                }
                            } while (true);
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markLeaf(elementTypeProvider.getMember_ModifiersExtensionKeyword_2_0_2_2_2_0ElementType());
                              								
                            }
                            lv_modifiers_15_0=(Token)match(input,KW_Extension,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneLeaf(lv_modifiers_15_0);
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }
                            loop65:
                            do {
                                int alt65=2;
                                int LA65_0 = input.LA(1);

                                if ( (LA65_0==KW_Package||(LA65_0>=KW_Public && LA65_0<=KW_Transient)) ) {
                                    alt65=1;
                                }


                                switch (alt65) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_0_2_2_3_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_modifiers_16_0=ruleCommonModifier();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop65;
                                }
                            } while (true);
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_TypeJvmTypeReferenceParserRuleCall_2_0_2_2_4_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_37);
                            lv_type_17_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }
                            int alt66=2;
                            alt66 = dfa66.predict(input);
                            switch (alt66) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {

                                      									markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_0_2_2_5_0ElementType());
                                      								
                                    }
                                    pushFollow(FOLLOW_33);
                                    lv_name_18_0=ruleValidID();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									doneComposite();
                                      									if(!current) {
                                      										associateWithSemanticElement();
                                      										current = true;
                                      									}
                                      								
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_TypeJvmTypeReferenceParserRuleCall_2_0_2_3_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_3);
                            lv_type_19_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_0_2_3_1_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_33);
                            lv_name_20_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }


                            }


                            }
                            break;

                    }
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==KW_EqualsSign) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_EqualsSignKeyword_2_0_3_0ElementType());
                              					
                            }
                            otherlv_21=(Token)match(input,KW_EqualsSign,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_21);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_InitialValueXExpressionParserRuleCall_2_0_3_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_35);
                            lv_initialValue_22_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }


                            }
                            break;

                    }
                    int alt69=2;
                    int LA69_0 = input.LA(1);

                    if ( (LA69_0==KW_Semicolon) ) {
                        alt69=1;
                    }
                    switch (alt69) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_SemicolonKeyword_2_0_4ElementType());
                              					
                            }
                            otherlv_23=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_23);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendFunctionAnnotationInfoAction_2_1_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop70:
                    do {
                        int alt70=2;
                        int LA70_0 = input.LA(1);

                        if ( (LA70_0==KW_Package||(LA70_0>=KW_Public && LA70_0<=KW_Transient)) ) {
                            alt70=1;
                        }


                        switch (alt70) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_39);
                    	    lv_modifiers_25_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop70;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_ModifiersMethodModifierParserRuleCall_2_1_2_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_40);
                    lv_modifiers_26_0=ruleMethodModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    loop71:
                    do {
                        int alt71=3;
                        int LA71_0 = input.LA(1);

                        if ( (LA71_0==KW_Package||(LA71_0>=KW_Public && LA71_0<=KW_Transient)) ) {
                            alt71=1;
                        }
                        else if ( ((LA71_0>=KW_Def && LA71_0<=KW_Override)) ) {
                            alt71=2;
                        }


                        switch (alt71) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_1_3_0_0ElementType());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_modifiers_27_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								doneComposite();
                    	      								if(!current) {
                    	      									associateWithSemanticElement();
                    	      									current = true;
                    	      								}
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								markComposite(elementTypeProvider.getMember_ModifiersMethodModifierParserRuleCall_2_1_3_1_0ElementType());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_modifiers_28_0=ruleMethodModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								doneComposite();
                    	      								if(!current) {
                    	      									associateWithSemanticElement();
                    	      									current = true;
                    	      								}
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==KW_LessThanSign) ) {
                        int LA73_1 = input.LA(2);

                        if ( (LA73_1==KW_Annotation||LA73_1==KW_Create||(LA73_1>=KW_AFTER && LA73_1<=KW_SEPARATOR)||LA73_1==RULE_ID) ) {
                            alt73=1;
                        }
                    }
                    switch (alt73) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_LessThanSignKeyword_2_1_4_0ElementType());
                              					
                            }
                            otherlv_29=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_29);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_30_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop72:
                            do {
                                int alt72=2;
                                int LA72_0 = input.LA(1);

                                if ( (LA72_0==KW_Comma) ) {
                                    alt72=1;
                                }


                                switch (alt72) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_1_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_31=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_31);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_1_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_32_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop72;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_GreaterThanSignKeyword_2_1_4_3ElementType());
                              					
                            }
                            otherlv_33=(Token)match(input,KW_GreaterThanSign,FOLLOW_40); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_33);
                              					
                            }

                            }
                            break;

                    }
                    int alt74=5;
                    alt74 = dfa74.predict(input);
                    switch (alt74) {
                        case 1 :
                            {
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_ReturnTypeJvmTypeReferenceParserRuleCall_2_1_5_0_0_0_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_41);
                            lv_returnType_34_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              										if(!current) {
                              											associateWithSemanticElement();
                              											current = true;
                              										}
                              									
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_CreateExtensionInfoCreateExtensionInfoParserRuleCall_2_1_5_0_0_1_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_3);
                            lv_createExtensionInfo_35_0=ruleCreateExtensionInfo();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              										if(!current) {
                              											associateWithSemanticElement();
                              											current = true;
                              										}
                              									
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_1_5_0_0_2_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_42);
                            lv_name_36_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              										if(!current) {
                              											associateWithSemanticElement();
                              											current = true;
                              										}
                              									
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_0_0_3ElementType());
                              							
                            }
                            otherlv_37=(Token)match(input,KW_LeftParenthesis,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_37);
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_ReturnTypeTypeReferenceWithTypeArgsParserRuleCall_2_1_5_1_0_0_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_40);
                            lv_returnType_38_0=ruleTypeReferenceWithTypeArgs();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              										if(!current) {
                              											associateWithSemanticElement();
                              											current = true;
                              										}
                              									
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_NameFunctionIDParserRuleCall_2_1_5_1_0_1_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_42);
                            lv_name_39_0=ruleFunctionID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              										if(!current) {
                              											associateWithSemanticElement();
                              											current = true;
                              										}
                              									
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_1_0_2ElementType());
                              							
                            }
                            otherlv_40=(Token)match(input,KW_LeftParenthesis,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_40);
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            {
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_ReturnTypeTypeReferenceNoTypeArgsParserRuleCall_2_1_5_2_0_0_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_40);
                            lv_returnType_41_0=ruleTypeReferenceNoTypeArgs();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              										if(!current) {
                              											associateWithSemanticElement();
                              											current = true;
                              										}
                              									
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_NameFunctionIDParserRuleCall_2_1_5_2_0_1_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_42);
                            lv_name_42_0=ruleFunctionID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              										if(!current) {
                              											associateWithSemanticElement();
                              											current = true;
                              										}
                              									
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_2_0_2ElementType());
                              							
                            }
                            otherlv_43=(Token)match(input,KW_LeftParenthesis,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_43);
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            {
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_CreateExtensionInfoCreateExtensionInfoParserRuleCall_2_1_5_3_0_0_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_3);
                            lv_createExtensionInfo_44_0=ruleCreateExtensionInfo();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              										if(!current) {
                              											associateWithSemanticElement();
                              											current = true;
                              										}
                              									
                            }

                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              										markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_1_5_3_0_1_0ElementType());
                              									
                            }
                            pushFollow(FOLLOW_42);
                            lv_name_45_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              										doneComposite();
                              										if(!current) {
                              											associateWithSemanticElement();
                              											current = true;
                              										}
                              									
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_3_0_2ElementType());
                              							
                            }
                            otherlv_46=(Token)match(input,KW_LeftParenthesis,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(otherlv_46);
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 5 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getMember_NameFunctionIDParserRuleCall_2_1_5_4_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_42);
                            lv_name_47_0=ruleFunctionID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_1_5_4_1ElementType());
                              						
                            }
                            otherlv_48=(Token)match(input,KW_LeftParenthesis,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(otherlv_48);
                              						
                            }

                            }


                            }
                            break;

                    }
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( ((LA76_0>=KW_Annotation && LA76_0<=KW_LeftParenthesis)||LA76_0==KW_EqualsSignGreaterThanSign||LA76_0==KW_Extension||LA76_0==KW_Create||(LA76_0>=KW_AFTER && LA76_0<=KW_SEPARATOR)||LA76_0==KW_CommercialAt||LA76_0==RULE_ID) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ParametersParameterParserRuleCall_2_1_6_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_28);
                            lv_parameters_49_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop75:
                            do {
                                int alt75=2;
                                int LA75_0 = input.LA(1);

                                if ( (LA75_0==KW_Comma) ) {
                                    alt75=1;
                                }


                                switch (alt75) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_1_6_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_50=(Token)match(input,KW_Comma,FOLLOW_44); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_50);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ParametersParameterParserRuleCall_2_1_6_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_parameters_51_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop75;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightParenthesisKeyword_2_1_7ElementType());
                      				
                    }
                    otherlv_52=(Token)match(input,KW_RightParenthesis,FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_52);
                      				
                    }
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==KW_Throws) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ThrowsKeyword_2_1_8_0ElementType());
                              					
                            }
                            otherlv_53=(Token)match(input,KW_Throws,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_53);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExceptionsJvmTypeReferenceParserRuleCall_2_1_8_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_46);
                            lv_exceptions_54_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop77:
                            do {
                                int alt77=2;
                                int LA77_0 = input.LA(1);

                                if ( (LA77_0==KW_Comma) ) {
                                    alt77=1;
                                }


                                switch (alt77) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_1_8_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_55=(Token)match(input,KW_Comma,FOLLOW_29); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_55);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ExceptionsJvmTypeReferenceParserRuleCall_2_1_8_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_46);
                            	    lv_exceptions_56_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop77;
                                }
                            } while (true);


                            }
                            break;

                    }
                    int alt79=4;
                    switch ( input.LA(1) ) {
                        case KW_LeftCurlyBracket:
                            {
                            alt79=1;
                            }
                            break;
                        case RULE_RICH_TEXT:
                        case RULE_RICH_TEXT_START:
                            {
                            alt79=2;
                            }
                            break;
                        case KW_Semicolon:
                            {
                            alt79=3;
                            }
                            break;
                    }

                    switch (alt79) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExpressionXBlockExpressionParserRuleCall_2_1_9_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_57_0=ruleXBlockExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExpressionRichStringParserRuleCall_2_1_9_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_expression_58_0=ruleRichString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_SemicolonKeyword_2_1_9_2ElementType());
                              					
                            }
                            otherlv_59=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_59);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendConstructorAnnotationInfoAction_2_2_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop80:
                    do {
                        int alt80=2;
                        int LA80_0 = input.LA(1);

                        if ( (LA80_0==KW_Package||(LA80_0>=KW_Public && LA80_0<=KW_Transient)) ) {
                            alt80=1;
                        }


                        switch (alt80) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_modifiers_61_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop80;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_NewKeyword_2_2_2ElementType());
                      				
                    }
                    otherlv_62=(Token)match(input,KW_New,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_62);
                      				
                    }
                    int alt82=2;
                    int LA82_0 = input.LA(1);

                    if ( (LA82_0==KW_LessThanSign) ) {
                        alt82=1;
                    }
                    switch (alt82) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_LessThanSignKeyword_2_2_3_0ElementType());
                              					
                            }
                            otherlv_63=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_63);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_2_3_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_64_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop81:
                            do {
                                int alt81=2;
                                int LA81_0 = input.LA(1);

                                if ( (LA81_0==KW_Comma) ) {
                                    alt81=1;
                                }


                                switch (alt81) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_2_3_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_65=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_65);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_2_3_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_66_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop81;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_GreaterThanSignKeyword_2_2_3_3ElementType());
                              					
                            }
                            otherlv_67=(Token)match(input,KW_GreaterThanSign,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_67);
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftParenthesisKeyword_2_2_4ElementType());
                      				
                    }
                    otherlv_68=(Token)match(input,KW_LeftParenthesis,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_68);
                      				
                    }
                    int alt84=2;
                    int LA84_0 = input.LA(1);

                    if ( ((LA84_0>=KW_Annotation && LA84_0<=KW_LeftParenthesis)||LA84_0==KW_EqualsSignGreaterThanSign||LA84_0==KW_Extension||LA84_0==KW_Create||(LA84_0>=KW_AFTER && LA84_0<=KW_SEPARATOR)||LA84_0==KW_CommercialAt||LA84_0==RULE_ID) ) {
                        alt84=1;
                    }
                    switch (alt84) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ParametersParameterParserRuleCall_2_2_5_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_28);
                            lv_parameters_69_0=ruleParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop83:
                            do {
                                int alt83=2;
                                int LA83_0 = input.LA(1);

                                if ( (LA83_0==KW_Comma) ) {
                                    alt83=1;
                                }


                                switch (alt83) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_2_5_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_70=(Token)match(input,KW_Comma,FOLLOW_44); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_70);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ParametersParameterParserRuleCall_2_2_5_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_parameters_71_0=ruleParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop83;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightParenthesisKeyword_2_2_6ElementType());
                      				
                    }
                    otherlv_72=(Token)match(input,KW_RightParenthesis,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_72);
                      				
                    }
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==KW_Throws) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ThrowsKeyword_2_2_7_0ElementType());
                              					
                            }
                            otherlv_73=(Token)match(input,KW_Throws,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_73);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExceptionsJvmTypeReferenceParserRuleCall_2_2_7_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            lv_exceptions_74_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop85:
                            do {
                                int alt85=2;
                                int LA85_0 = input.LA(1);

                                if ( (LA85_0==KW_Comma) ) {
                                    alt85=1;
                                }


                                switch (alt85) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_2_7_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_75=(Token)match(input,KW_Comma,FOLLOW_29); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_75);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ExceptionsJvmTypeReferenceParserRuleCall_2_2_7_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_exceptions_76_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop85;
                                }
                            } while (true);


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_ExpressionXBlockExpressionParserRuleCall_2_2_8_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_77_0=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendClassAnnotationInfoAction_2_3_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==KW_Package||(LA87_0>=KW_Public && LA87_0<=KW_Transient)) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_3_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_8);
                    	    lv_modifiers_79_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_ClassKeyword_2_3_2ElementType());
                      				
                    }
                    otherlv_80=(Token)match(input,KW_Class,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_80);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_3_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_9);
                    lv_name_81_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt89=2;
                    int LA89_0 = input.LA(1);

                    if ( (LA89_0==KW_LessThanSign) ) {
                        alt89=1;
                    }
                    switch (alt89) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_LessThanSignKeyword_2_3_4_0ElementType());
                              					
                            }
                            otherlv_82=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_82);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_3_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_83_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop88:
                            do {
                                int alt88=2;
                                int LA88_0 = input.LA(1);

                                if ( (LA88_0==KW_Comma) ) {
                                    alt88=1;
                                }


                                switch (alt88) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_3_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_84=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_84);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_3_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_85_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop88;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_GreaterThanSignKeyword_2_3_4_3ElementType());
                              					
                            }
                            otherlv_86=(Token)match(input,KW_GreaterThanSign,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_86);
                              					
                            }

                            }
                            break;

                    }
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( (LA90_0==KW_Extends) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ExtendsKeyword_2_3_5_0ElementType());
                              					
                            }
                            otherlv_87=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_87);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_3_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_12);
                            lv_extends_88_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }


                            }
                            break;

                    }
                    int alt92=2;
                    int LA92_0 = input.LA(1);

                    if ( (LA92_0==KW_Implements) ) {
                        alt92=1;
                    }
                    switch (alt92) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ImplementsKeyword_2_3_6_0ElementType());
                              					
                            }
                            otherlv_89=(Token)match(input,KW_Implements,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_89);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_6_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            lv_implements_90_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop91:
                            do {
                                int alt91=2;
                                int LA91_0 = input.LA(1);

                                if ( (LA91_0==KW_Comma) ) {
                                    alt91=1;
                                }


                                switch (alt91) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_3_6_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_91=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_91);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ImplementsJvmParameterizedTypeReferenceParserRuleCall_2_3_6_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_implements_92_0=ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop91;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftCurlyBracketKeyword_2_3_7ElementType());
                      				
                    }
                    otherlv_93=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_93);
                      				
                    }
                    loop93:
                    do {
                        int alt93=2;
                        int LA93_0 = input.LA(1);

                        if ( (LA93_0==KW_Package||LA93_0==KW_Class||(LA93_0>=KW_Interface && LA93_0<=KW_LeftParenthesis)||LA93_0==KW_EqualsSignGreaterThanSign||LA93_0==KW_Extension||LA93_0==KW_New||(LA93_0>=KW_Public && LA93_0<=KW_Create)||(LA93_0>=KW_AFTER && LA93_0<=KW_SEPARATOR)||LA93_0==KW_CommercialAt||LA93_0==RULE_ID) ) {
                            alt93=1;
                        }


                        switch (alt93) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_MembersMemberParserRuleCall_2_3_8_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_94_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop93;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightCurlyBracketKeyword_2_3_9ElementType());
                      				
                    }
                    otherlv_95=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_95);
                      				
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendInterfaceAnnotationInfoAction_2_4_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop94:
                    do {
                        int alt94=2;
                        int LA94_0 = input.LA(1);

                        if ( (LA94_0==KW_Package||(LA94_0>=KW_Public && LA94_0<=KW_Transient)) ) {
                            alt94=1;
                        }


                        switch (alt94) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_4_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_modifiers_97_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop94;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_InterfaceKeyword_2_4_2ElementType());
                      				
                    }
                    otherlv_98=(Token)match(input,KW_Interface,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_98);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_4_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_17);
                    lv_name_99_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt96=2;
                    int LA96_0 = input.LA(1);

                    if ( (LA96_0==KW_LessThanSign) ) {
                        alt96=1;
                    }
                    switch (alt96) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_LessThanSignKeyword_2_4_4_0ElementType());
                              					
                            }
                            otherlv_100=(Token)match(input,KW_LessThanSign,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_100);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_4_4_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_10);
                            lv_typeParameters_101_0=ruleJvmTypeParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop95:
                            do {
                                int alt95=2;
                                int LA95_0 = input.LA(1);

                                if ( (LA95_0==KW_Comma) ) {
                                    alt95=1;
                                }


                                switch (alt95) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_4_4_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_102=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_102);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_TypeParametersJvmTypeParameterParserRuleCall_2_4_4_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_10);
                            	    lv_typeParameters_103_0=ruleJvmTypeParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop95;
                                }
                            } while (true);

                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_GreaterThanSignKeyword_2_4_4_3ElementType());
                              					
                            }
                            otherlv_104=(Token)match(input,KW_GreaterThanSign,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_104);
                              					
                            }

                            }
                            break;

                    }
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( (LA98_0==KW_Extends) ) {
                        alt98=1;
                    }
                    switch (alt98) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_ExtendsKeyword_2_4_5_0ElementType());
                              					
                            }
                            otherlv_105=(Token)match(input,KW_Extends,FOLLOW_3); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_105);
                              					
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_14);
                            lv_extends_106_0=ruleJvmParameterizedTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop97:
                            do {
                                int alt97=2;
                                int LA97_0 = input.LA(1);

                                if ( (LA97_0==KW_Comma) ) {
                                    alt97=1;
                                }


                                switch (alt97) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_4_5_2_0ElementType());
                            	      						
                            	    }
                            	    otherlv_107=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_107);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_ExtendsJvmParameterizedTypeReferenceParserRuleCall_2_4_5_2_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_14);
                            	    lv_extends_108_0=ruleJvmParameterizedTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop97;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftCurlyBracketKeyword_2_4_6ElementType());
                      				
                    }
                    otherlv_109=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_109);
                      				
                    }
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==KW_Package||LA99_0==KW_Class||(LA99_0>=KW_Interface && LA99_0<=KW_LeftParenthesis)||LA99_0==KW_EqualsSignGreaterThanSign||LA99_0==KW_Extension||LA99_0==KW_New||(LA99_0>=KW_Public && LA99_0<=KW_Create)||(LA99_0>=KW_AFTER && LA99_0<=KW_SEPARATOR)||LA99_0==KW_CommercialAt||LA99_0==RULE_ID) ) {
                            alt99=1;
                        }


                        switch (alt99) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_MembersMemberParserRuleCall_2_4_7_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_110_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightCurlyBracketKeyword_2_4_8ElementType());
                      				
                    }
                    otherlv_111=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_111);
                      				
                    }

                    }


                    }
                    break;
                case 6 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendEnumAnnotationInfoAction_2_5_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop100:
                    do {
                        int alt100=2;
                        int LA100_0 = input.LA(1);

                        if ( (LA100_0==KW_Package||(LA100_0>=KW_Public && LA100_0<=KW_Transient)) ) {
                            alt100=1;
                        }


                        switch (alt100) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_5_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_modifiers_113_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop100;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_EnumKeyword_2_5_2ElementType());
                      				
                    }
                    otherlv_114=(Token)match(input,KW_Enum,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_114);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_5_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_115_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftCurlyBracketKeyword_2_5_4ElementType());
                      				
                    }
                    otherlv_116=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_116);
                      				
                    }
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==KW_Annotation||LA102_0==KW_Create||(LA102_0>=KW_AFTER && LA102_0<=KW_SEPARATOR)||LA102_0==KW_CommercialAt||LA102_0==RULE_ID) ) {
                        alt102=1;
                    }
                    switch (alt102) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getMember_MembersXtendEnumLiteralParserRuleCall_2_5_5_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_22);
                            lv_members_117_0=ruleXtendEnumLiteral();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop101:
                            do {
                                int alt101=2;
                                int LA101_0 = input.LA(1);

                                if ( (LA101_0==KW_Comma) ) {
                                    alt101=1;
                                }


                                switch (alt101) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getMember_CommaKeyword_2_5_5_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_118=(Token)match(input,KW_Comma,FOLLOW_23); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_118);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getMember_MembersXtendEnumLiteralParserRuleCall_2_5_5_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_22);
                            	    lv_members_119_0=ruleXtendEnumLiteral();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop101;
                                }
                            } while (true);


                            }
                            break;

                    }
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==KW_Semicolon) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getMember_SemicolonKeyword_2_5_6ElementType());
                              					
                            }
                            otherlv_120=(Token)match(input,KW_Semicolon,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_120);
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightCurlyBracketKeyword_2_5_7ElementType());
                      				
                    }
                    otherlv_121=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_121);
                      				
                    }

                    }


                    }
                    break;
                case 7 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getMember_XtendAnnotationTypeAnnotationInfoAction_2_6_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    loop104:
                    do {
                        int alt104=2;
                        int LA104_0 = input.LA(1);

                        if ( (LA104_0==KW_Package||(LA104_0>=KW_Public && LA104_0<=KW_Transient)) ) {
                            alt104=1;
                        }


                        switch (alt104) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_ModifiersCommonModifierParserRuleCall_2_6_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_modifiers_123_0=ruleCommonModifier();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop104;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_AnnotationKeyword_2_6_2ElementType());
                      				
                    }
                    otherlv_124=(Token)match(input,KW_Annotation,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_124);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getMember_NameValidIDParserRuleCall_2_6_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_name_125_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_LeftCurlyBracketKeyword_2_6_4ElementType());
                      				
                    }
                    otherlv_126=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_126);
                      				
                    }
                    loop105:
                    do {
                        int alt105=2;
                        int LA105_0 = input.LA(1);

                        if ( (LA105_0==KW_Package||LA105_0==KW_Class||(LA105_0>=KW_Interface && LA105_0<=KW_LeftParenthesis)||LA105_0==KW_EqualsSignGreaterThanSign||(LA105_0>=KW_Public && LA105_0<=KW_Var)||LA105_0==KW_Create||(LA105_0>=KW_AFTER && LA105_0<=KW_SEPARATOR)||LA105_0==KW_CommercialAt||LA105_0==RULE_ID) ) {
                            alt105=1;
                        }


                        switch (alt105) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMember_MembersAnnotationFieldParserRuleCall_2_6_5_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_26);
                    	    lv_members_127_0=ruleAnnotationField();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop105;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getMember_RightCurlyBracketKeyword_2_6_6ElementType());
                      				
                    }
                    otherlv_128=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_128);
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleTypeReferenceNoTypeArgs() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleTypeReferenceNoTypeArgs = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getTypeReferenceNoTypeArgsElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceNoTypeArgs=ruleTypeReferenceNoTypeArgs();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceNoTypeArgs; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleTypeReferenceNoTypeArgs() throws RecognitionException {
        Boolean current = false;

        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				if (!current) {
              					associateWithSemanticElement();
              					current = true;
              				}
              			
            }
            if ( state.backtracking==0 ) {

              				markComposite(elementTypeProvider.getTypeReferenceNoTypeArgs_TypeJvmTypeCrossReference_0ElementType());
              			
            }
            pushFollow(FOLLOW_2);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				doneComposite();
              			
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleTypeReferenceWithTypeArgs() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleTypeReferenceWithTypeArgs = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getTypeReferenceWithTypeArgsElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeReferenceWithTypeArgs=ruleTypeReferenceWithTypeArgs();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeReferenceWithTypeArgs; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleTypeReferenceWithTypeArgs() throws RecognitionException {
        Boolean current = false;

        Boolean this_ParameterizedTypeReferenceWithTypeArgs_0 = null;

        Boolean this_TypeReferenceNoTypeArgs_3 = null;

        Boolean this_XFunctionTypeRef_6 = null;


        try {
            {
            int alt109=3;
            alt109 = dfa109.predict(input);
            switch (alt109) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_ParameterizedTypeReferenceWithTypeArgsParserRuleCall_0_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_50);
                    this_ParameterizedTypeReferenceWithTypeArgs_0=ruleParameterizedTypeReferenceWithTypeArgs();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ParameterizedTypeReferenceWithTypeArgs_0;
                      				doneComposite();
                      			
                    }
                    loop107:
                    do {
                        int alt107=2;
                        int LA107_0 = input.LA(1);

                        if ( (LA107_0==KW_LeftSquareBracket) && (synpred5_PsiInternalXtend())) {
                            alt107=1;
                        }


                        switch (alt107) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							precedeComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_JvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0ElementType());
                    	      							doneComposite();
                    	      							associateWithSemanticElement();
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_ArrayBracketsParserRuleCall_0_1_0_1ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop107;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_TypeReferenceNoTypeArgsParserRuleCall_1_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_51);
                    this_TypeReferenceNoTypeArgs_3=ruleTypeReferenceNoTypeArgs();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TypeReferenceNoTypeArgs_3;
                      				doneComposite();
                      			
                    }
                    int cnt108=0;
                    loop108:
                    do {
                        int alt108=2;
                        int LA108_0 = input.LA(1);

                        if ( (LA108_0==KW_LeftSquareBracket) && (synpred6_PsiInternalXtend())) {
                            alt108=1;
                        }


                        switch (alt108) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							precedeComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_JvmGenericArrayTypeReferenceComponentTypeAction_1_1_0_0ElementType());
                    	      							doneComposite();
                    	      							associateWithSemanticElement();
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_ArrayBracketsParserRuleCall_1_1_0_1ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt108 >= 1 ) break loop108;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(108, input);
                                throw eee;
                        }
                        cnt108++;
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getTypeReferenceWithTypeArgs_XFunctionTypeRefParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_6=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_6;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleParameterizedTypeReferenceWithTypeArgs() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleParameterizedTypeReferenceWithTypeArgs = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgsElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterizedTypeReferenceWithTypeArgs=ruleParameterizedTypeReferenceWithTypeArgs();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterizedTypeReferenceWithTypeArgs; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleParameterizedTypeReferenceWithTypeArgs() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Boolean lv_arguments_2_0 = null;

        Boolean lv_arguments_4_0 = null;

        Boolean lv_arguments_10_0 = null;

        Boolean lv_arguments_12_0 = null;


        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              					if (!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_TypeJvmTypeCrossReference_0_0ElementType());
              				
            }
            pushFollow(FOLLOW_52);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }
            {
            if ( state.backtracking==0 ) {

              				markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_LessThanSignKeyword_1_0ElementType());
              			
            }
            otherlv_1=(Token)match(input,KW_LessThanSign,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				doneLeaf(otherlv_1);
              			
            }
            {
            {
            if ( state.backtracking==0 ) {

              						markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0ElementType());
              					
            }
            pushFollow(FOLLOW_10);
            lv_arguments_2_0=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						doneComposite();
              						if(!current) {
              							associateWithSemanticElement();
              							current = true;
              						}
              					
            }

            }


            }
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==KW_Comma) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_CommaKeyword_1_2_0ElementType());
            	      				
            	    }
            	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneLeaf(otherlv_3);
            	      				
            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_10);
            	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      							if(!current) {
            	      								associateWithSemanticElement();
            	      								current = true;
            	      							}
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              				markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_GreaterThanSignKeyword_1_3ElementType());
              			
            }
            otherlv_5=(Token)match(input,KW_GreaterThanSign,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				doneLeaf(otherlv_5);
              			
            }
            loop113:
            do {
                int alt113=2;
                int LA113_0 = input.LA(1);

                if ( (LA113_0==KW_FullStop) && (synpred7_PsiInternalXtend())) {
                    alt113=1;
                }


                switch (alt113) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_JvmInnerTypeReferenceOuterAction_1_4_0_0_0ElementType());
            	      								doneComposite();
            	      								associateWithSemanticElement();
            	      							
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      							markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_FullStopKeyword_1_4_0_0_1ElementType());
            	      						
            	    }
            	    otherlv_7=(Token)match(input,KW_FullStop,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneLeaf(otherlv_7);
            	      						
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (!current) {
            	      								associateWithSemanticElement();
            	      								current = true;
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_TypeJvmTypeCrossReference_1_4_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_55);
            	    ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }
            	    int alt112=2;
            	    alt112 = dfa112.predict(input);
            	    switch (alt112) {
            	        case 1 :
            	            {
            	            {
            	            if ( state.backtracking==0 ) {

            	              							markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_LessThanSignKeyword_1_4_2_0ElementType());
            	              						
            	            }
            	            otherlv_9=(Token)match(input,KW_LessThanSign,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							doneLeaf(otherlv_9);
            	              						
            	            }

            	            }
            	            {
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0ElementType());
            	              							
            	            }
            	            pushFollow(FOLLOW_10);
            	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								doneComposite();
            	              								if(!current) {
            	              									associateWithSemanticElement();
            	              									current = true;
            	              								}
            	              							
            	            }

            	            }


            	            }
            	            loop111:
            	            do {
            	                int alt111=2;
            	                int LA111_0 = input.LA(1);

            	                if ( (LA111_0==KW_Comma) ) {
            	                    alt111=1;
            	                }


            	                switch (alt111) {
            	            	case 1 :
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      							markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_CommaKeyword_1_4_2_2_0ElementType());
            	            	      						
            	            	    }
            	            	    otherlv_11=(Token)match(input,KW_Comma,FOLLOW_53); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							doneLeaf(otherlv_11);
            	            	      						
            	            	    }
            	            	    {
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									markComposite(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0ElementType());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_10);
            	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									doneComposite();
            	            	      									if(!current) {
            	            	      										associateWithSemanticElement();
            	            	      										current = true;
            	            	      									}
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop111;
            	                }
            	            } while (true);

            	            if ( state.backtracking==0 ) {

            	              						markLeaf(elementTypeProvider.getParameterizedTypeReferenceWithTypeArgs_GreaterThanSignKeyword_1_4_2_3ElementType());
            	              					
            	            }
            	            otherlv_13=(Token)match(input,KW_GreaterThanSign,FOLLOW_54); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						doneLeaf(otherlv_13);
            	              					
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop113;
                }
            } while (true);


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleFunctionID() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleFunctionID = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFunctionIDElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionID=ruleFunctionID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleFunctionID() throws RecognitionException {
        Boolean current = false;

        try {
            {
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==KW_Annotation||LA114_0==KW_Create||(LA114_0>=KW_AFTER && LA114_0<=KW_SEPARATOR)||LA114_0==RULE_ID) ) {
                alt114=1;
            }
            else if ( (LA114_0==KW_LessThanSign||LA114_0==KW_GreaterThanSign||LA114_0==KW_EqualsSignGreaterThanSign||(LA114_0>=KW_PlusSignEqualsSign && LA114_0<=KW_ExclamationMarkEqualsSignEqualsSign)||(LA114_0>=KW_HyphenMinusGreaterThanSign && LA114_0<=KW_ExclamationMark)||(LA114_0>=KW_PlusSignPlusSign && LA114_0<=KW_HyphenMinusHyphenMinus)) ) {
                alt114=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }
            switch (alt114) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getFunctionID_ValidIDParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getFunctionID_OperatorsParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOperators();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOperators() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOperators = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOperatorsElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOperators=ruleOperators();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOperators; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOperators() throws RecognitionException {
        Boolean current = false;

        try {
            {
            int alt115=9;
            alt115 = dfa115.predict(input);
            switch (alt115) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpMultiAssignParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpMultiAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpOrParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpOr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpAndParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpAnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpEqualityParserRuleCall_3ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpEquality();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpCompareParserRuleCall_4ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpCompare();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpOtherParserRuleCall_5ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpOther();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpMultiParserRuleCall_6ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpMulti();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpUnaryParserRuleCall_7ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getOperators_OpPostfixParserRuleCall_8ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXtendEnumLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXtendEnumLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXtendEnumLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXtendEnumLiteral=ruleXtendEnumLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXtendEnumLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXtendEnumLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean lv_annotations_0_0 = null;

        Boolean lv_name_1_0 = null;


        try {
            {
            {
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==KW_CommercialAt) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getXtendEnumLiteral_AnnotationsXAnnotationParserRuleCall_0_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_23);
            	    lv_annotations_0_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      					if(!current) {
            	      						associateWithSemanticElement();
            	      						current = true;
            	      					}
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXtendEnumLiteral_NameValidIDParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleCommonModifier() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleCommonModifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getCommonModifierElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCommonModifier=ruleCommonModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommonModifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleCommonModifier() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt117=13;
            switch ( input.LA(1) ) {
            case KW_Public:
                {
                alt117=1;
                }
                break;
            case KW_Private:
                {
                alt117=2;
                }
                break;
            case KW_Protected:
                {
                alt117=3;
                }
                break;
            case KW_Package:
                {
                alt117=4;
                }
                break;
            case KW_Abstract:
                {
                alt117=5;
                }
                break;
            case KW_Static:
                {
                alt117=6;
                }
                break;
            case KW_Dispatch:
                {
                alt117=7;
                }
                break;
            case KW_Final:
                {
                alt117=8;
                }
                break;
            case KW_Strictfp:
                {
                alt117=9;
                }
                break;
            case KW_Native:
                {
                alt117=10;
                }
                break;
            case KW_Volatile:
                {
                alt117=11;
                }
                break;
            case KW_Synchronized:
                {
                alt117=12;
                }
                break;
            case KW_Transient:
                {
                alt117=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }

            switch (alt117) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_PublicKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_PrivateKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_ProtectedKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_PackageKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Package,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_AbstractKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_StaticKeyword_5ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_DispatchKeyword_6ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Dispatch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_FinalKeyword_7ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Final,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_StrictfpKeyword_8ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Strictfp,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_NativeKeyword_9ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Native,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_VolatileKeyword_10ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Volatile,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_SynchronizedKeyword_11ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Synchronized,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getCommonModifier_TransientKeyword_12ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Transient,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleFieldModifier() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleFieldModifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFieldModifierElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFieldModifier=ruleFieldModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFieldModifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleFieldModifier() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==KW_Val) ) {
                alt118=1;
            }
            else if ( (LA118_0==KW_Var) ) {
                alt118=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 118, 0, input);

                throw nvae;
            }
            switch (alt118) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getFieldModifier_ValKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Val,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getFieldModifier_VarKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Var,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleMethodModifier() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleMethodModifier = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getMethodModifierElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMethodModifier=ruleMethodModifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodModifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleMethodModifier() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==KW_Def) ) {
                alt119=1;
            }
            else if ( (LA119_0==KW_Override) ) {
                alt119=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 119, 0, input);

                throw nvae;
            }
            switch (alt119) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getMethodModifier_DefKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Def,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getMethodModifier_OverrideKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Override,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleCreateExtensionInfo() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleCreateExtensionInfo = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getCreateExtensionInfoElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCreateExtensionInfo=ruleCreateExtensionInfo();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCreateExtensionInfo; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleCreateExtensionInfo() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Boolean lv_name_1_0 = null;

        Boolean lv_createExpression_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getCreateExtensionInfo_CreateKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Create,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            int alt120=2;
            switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA120_1 = input.LA(2);

                    if ( (LA120_1==KW_Colon) ) {
                        alt120=1;
                    }
                    }
                    break;
                case KW_Create:
                    {
                    int LA120_2 = input.LA(2);

                    if ( (LA120_2==KW_Colon) ) {
                        alt120=1;
                    }
                    }
                    break;
                case KW_Annotation:
                    {
                    int LA120_3 = input.LA(2);

                    if ( (LA120_3==KW_Colon) ) {
                        alt120=1;
                    }
                    }
                    break;
                case KW_AFTER:
                    {
                    int LA120_4 = input.LA(2);

                    if ( (LA120_4==KW_Colon) ) {
                        alt120=1;
                    }
                    }
                    break;
                case KW_BEFORE:
                    {
                    int LA120_5 = input.LA(2);

                    if ( (LA120_5==KW_Colon) ) {
                        alt120=1;
                    }
                    }
                    break;
                case KW_SEPARATOR:
                    {
                    int LA120_6 = input.LA(2);

                    if ( (LA120_6==KW_Colon) ) {
                        alt120=1;
                    }
                    }
                    break;
            }

            switch (alt120) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getCreateExtensionInfo_NameValidIDParserRuleCall_1_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_56);
                    lv_name_1_0=ruleValidID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getCreateExtensionInfo_ColonKeyword_1_1ElementType());
                      			
                    }
                    otherlv_2=(Token)match(input,KW_Colon,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_2);
                      			
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getCreateExtensionInfo_CreateExpressionXExpressionParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_createExpression_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleValidID() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleValidID = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getValidIDElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValidID=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValidID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleValidID() throws RecognitionException {
        Boolean current = false;

        Token this_ID_0=null;
        Token kw=null;

        try {
            {
            int alt121=6;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt121=1;
                }
                break;
            case KW_Create:
                {
                alt121=2;
                }
                break;
            case KW_Annotation:
                {
                alt121=3;
                }
                break;
            case KW_AFTER:
                {
                alt121=4;
                }
                break;
            case KW_BEFORE:
                {
                alt121=5;
                }
                break;
            case KW_SEPARATOR:
                {
                alt121=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 121, 0, input);

                throw nvae;
            }

            switch (alt121) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_IDTerminalRuleCall_0ElementType());
                      		
                    }
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(this_ID_0);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_CreateKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Create,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_AnnotationKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Annotation,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_AFTERKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_AFTER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_BEFOREKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_BEFORE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getValidID_SEPARATORKeyword_5ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_SEPARATOR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleFeatureCallID() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleFeatureCallID = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFeatureCallIDElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFeatureCallID=ruleFeatureCallID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFeatureCallID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleFeatureCallID() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==KW_Package||LA122_0==KW_Class||(LA122_0>=KW_Extends && LA122_0<=KW_Implements)||(LA122_0>=KW_Interface && LA122_0<=KW_Annotation)||LA122_0==KW_Throws||(LA122_0>=KW_Public && LA122_0<=KW_Transient)||(LA122_0>=KW_Def && LA122_0<=KW_Create)||(LA122_0>=KW_AFTER && LA122_0<=KW_Import)||LA122_0==RULE_ID) ) {
                alt122=1;
            }
            else if ( (LA122_0==KW_Extension) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getFeatureCallID_InnerVarIDParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getFeatureCallID_ExtensionKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Extension,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleInnerVarID() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleInnerVarID = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getInnerVarIDElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInnerVarID=ruleInnerVarID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInnerVarID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleInnerVarID() throws RecognitionException {
        Boolean current = false;

        Token this_ID_0=null;
        Token kw=null;

        try {
            {
            int alt123=28;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt123=1;
                }
                break;
            case KW_Abstract:
                {
                alt123=2;
                }
                break;
            case KW_Annotation:
                {
                alt123=3;
                }
                break;
            case KW_Class:
                {
                alt123=4;
                }
                break;
            case KW_Create:
                {
                alt123=5;
                }
                break;
            case KW_Def:
                {
                alt123=6;
                }
                break;
            case KW_Dispatch:
                {
                alt123=7;
                }
                break;
            case KW_Enum:
                {
                alt123=8;
                }
                break;
            case KW_Extends:
                {
                alt123=9;
                }
                break;
            case KW_Final:
                {
                alt123=10;
                }
                break;
            case KW_Implements:
                {
                alt123=11;
                }
                break;
            case KW_Import:
                {
                alt123=12;
                }
                break;
            case KW_Interface:
                {
                alt123=13;
                }
                break;
            case KW_Override:
                {
                alt123=14;
                }
                break;
            case KW_Package:
                {
                alt123=15;
                }
                break;
            case KW_Public:
                {
                alt123=16;
                }
                break;
            case KW_Private:
                {
                alt123=17;
                }
                break;
            case KW_Protected:
                {
                alt123=18;
                }
                break;
            case KW_Static:
                {
                alt123=19;
                }
                break;
            case KW_Throws:
                {
                alt123=20;
                }
                break;
            case KW_Strictfp:
                {
                alt123=21;
                }
                break;
            case KW_Native:
                {
                alt123=22;
                }
                break;
            case KW_Volatile:
                {
                alt123=23;
                }
                break;
            case KW_Synchronized:
                {
                alt123=24;
                }
                break;
            case KW_Transient:
                {
                alt123=25;
                }
                break;
            case KW_AFTER:
                {
                alt123=26;
                }
                break;
            case KW_BEFORE:
                {
                alt123=27;
                }
                break;
            case KW_SEPARATOR:
                {
                alt123=28;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 123, 0, input);

                throw nvae;
            }

            switch (alt123) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_IDTerminalRuleCall_0ElementType());
                      		
                    }
                    this_ID_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(this_ID_0);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_AbstractKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Abstract,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_AnnotationKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Annotation,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ClassKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Class,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_CreateKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Create,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_DefKeyword_5ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Def,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_DispatchKeyword_6ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Dispatch,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_EnumKeyword_7ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Enum,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ExtendsKeyword_8ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Extends,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_FinalKeyword_9ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Final,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ImplementsKeyword_10ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Implements,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ImportKeyword_11ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Import,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_InterfaceKeyword_12ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Interface,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_OverrideKeyword_13ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Override,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 15 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_PackageKeyword_14ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Package,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 16 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_PublicKeyword_15ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Public,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 17 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_PrivateKeyword_16ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Private,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 18 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ProtectedKeyword_17ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Protected,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 19 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_StaticKeyword_18ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Static,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 20 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_ThrowsKeyword_19ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Throws,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 21 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_StrictfpKeyword_20ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Strictfp,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 22 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_NativeKeyword_21ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Native,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 23 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_VolatileKeyword_22ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Volatile,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 24 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_SynchronizedKeyword_23ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Synchronized,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 25 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_TransientKeyword_24ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Transient,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 26 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_AFTERKeyword_25ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_AFTER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 27 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_BEFOREKeyword_26ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_BEFORE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 28 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getInnerVarID_SEPARATORKeyword_27ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_SEPARATOR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleParameter() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getParameterElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleParameter() throws RecognitionException {
        Boolean current = false;

        Token lv_extension_1_0=null;
        Token lv_varArg_4_0=null;
        Boolean lv_annotations_0_0 = null;

        Boolean lv_annotations_2_0 = null;

        Boolean lv_parameterType_3_0 = null;

        Boolean lv_name_5_0 = null;


        try {
            {
            {
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==KW_CommercialAt) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getParameter_AnnotationsXAnnotationParserRuleCall_0_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_annotations_0_0=ruleXAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      					if(!current) {
            	      						associateWithSemanticElement();
            	      						current = true;
            	      					}
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==KW_Extension) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getParameter_ExtensionExtensionKeyword_1_0_0ElementType());
                      					
                    }
                    lv_extension_1_0=(Token)match(input,KW_Extension,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_extension_1_0);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    loop125:
                    do {
                        int alt125=2;
                        int LA125_0 = input.LA(1);

                        if ( (LA125_0==KW_CommercialAt) ) {
                            alt125=1;
                        }


                        switch (alt125) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getParameter_AnnotationsXAnnotationParserRuleCall_1_1_0ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_44);
                    	    lv_annotations_2_0=ruleXAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      						if(!current) {
                    	      							associateWithSemanticElement();
                    	      							current = true;
                    	      						}
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop125;
                        }
                    } while (true);


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getParameter_ParameterTypeJvmTypeReferenceParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_57);
            lv_parameterType_3_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==KW_FullStopFullStopFullStop) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getParameter_VarArgFullStopFullStopFullStopKeyword_3_0ElementType());
                      				
                    }
                    lv_varArg_4_0=(Token)match(input,KW_FullStopFullStopFullStop,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(lv_varArg_4_0);
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getParameter_NameValidIDParserRuleCall_4_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_5_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXAssignment() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXAssignment = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAssignmentElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAssignment=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXAssignment() throws RecognitionException {
        Boolean current = false;

        Boolean lv_value_3_0 = null;

        Boolean this_XConditionalExpression_4 = null;

        Boolean lv_rightOperand_7_0 = null;


        try {
            {
            int alt129=2;
            alt129 = dfa129.predict(input);
            switch (alt129) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					precedeComposite(elementTypeProvider.getXAssignment_XAssignmentAction_0_0ElementType());
                      					doneComposite();
                      					associateWithSemanticElement();
                      				
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXAssignment_FeatureJvmIdentifiableElementCrossReference_0_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXAssignment_OpSingleAssignParserRuleCall_0_2ElementType());
                      			
                    }
                    pushFollow(FOLLOW_34);
                    ruleOpSingleAssign();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneComposite();
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXAssignment_ValueXAssignmentParserRuleCall_0_3_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_3_0=ruleXAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXAssignment_XConditionalExpressionParserRuleCall_1_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_59);
                    this_XConditionalExpression_4=ruleXConditionalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XConditionalExpression_4;
                      				doneComposite();
                      			
                    }
                    int alt128=2;
                    alt128 = dfa128.predict(input);
                    switch (alt128) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								precedeComposite(elementTypeProvider.getXAssignment_XBinaryOperationLeftOperandAction_1_1_0_0_0ElementType());
                              								doneComposite();
                              								associateWithSemanticElement();
                              							
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									if (!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getXAssignment_FeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_34);
                            ruleOpMultiAssign();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              								
                            }

                            }


                            }


                            }


                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXAssignment_RightOperandXAssignmentParserRuleCall_1_1_1_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_rightOperand_7_0=ruleXAssignment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXConditionalExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXConditionalExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXConditionalExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConditionalExpression=ruleXConditionalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConditionalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXConditionalExpression() throws RecognitionException {
        Boolean current = false;

        Token lv_conditionalExpression_2_0=null;
        Token otherlv_4=null;
        Boolean this_XOrExpression_0 = null;

        Boolean lv_then_3_0 = null;

        Boolean lv_else_5_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXConditionalExpression_XOrExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_60);
            this_XOrExpression_0=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOrExpression_0;
              			doneComposite();
              		
            }
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==KW_QuestionMark) ) {
                int LA131_1 = input.LA(2);

                if ( (synpred10_PsiInternalXtend()) ) {
                    alt131=1;
                }
            }
            switch (alt131) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							precedeComposite(elementTypeProvider.getXConditionalExpression_XIfExpressionIfAction_1_0_0_0ElementType());
                      							doneComposite();
                      							associateWithSemanticElement();
                      						
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      								markLeaf(elementTypeProvider.getXConditionalExpression_ConditionalExpressionQuestionMarkKeyword_1_0_0_1_0ElementType());
                      							
                    }
                    lv_conditionalExpression_2_0=(Token)match(input,KW_QuestionMark,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								doneLeaf(lv_conditionalExpression_2_0);
                      							
                    }
                    if ( state.backtracking==0 ) {

                      								if (!current) {
                      									associateWithSemanticElement();
                      									current = true;
                      								}
                      							
                    }

                    }


                    }


                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXConditionalExpression_ThenXExpressionParserRuleCall_1_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_61);
                    lv_then_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    int alt130=2;
                    int LA130_0 = input.LA(1);

                    if ( (LA130_0==KW_Colon) ) {
                        int LA130_1 = input.LA(2);

                        if ( (synpred11_PsiInternalXtend()) ) {
                            alt130=1;
                        }
                    }
                    switch (alt130) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getXConditionalExpression_ColonKeyword_1_2_0ElementType());
                              					
                            }
                            otherlv_4=(Token)match(input,KW_Colon,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_4);
                              					
                            }

                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXConditionalExpression_ElseXExpressionParserRuleCall_1_2_1_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_else_5_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXTryCatchFinallyExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXTryCatchFinallyExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXTryCatchFinallyExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTryCatchFinallyExpression=ruleXTryCatchFinallyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTryCatchFinallyExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXTryCatchFinallyExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Boolean lv_resources_3_0 = null;

        Boolean lv_resources_5_0 = null;

        Boolean lv_expression_8_0 = null;

        Boolean lv_catchClauses_9_0 = null;

        Boolean lv_finallyExpression_11_0 = null;

        Boolean lv_finallyExpression_13_0 = null;

        Boolean lv_expression_14_0 = null;

        Boolean lv_catchClauses_15_0 = null;

        Boolean lv_finallyExpression_17_0 = null;

        Boolean lv_finallyExpression_19_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXTryCatchFinallyExpression_XTryCatchFinallyExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_TryKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Try,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==KW_LeftParenthesis) ) {
                switch ( input.LA(2) ) {
                case KW_Val:
                case KW_Var:
                    {
                    alt141=1;
                    }
                    break;
                case KW_Extension:
                    {
                    int LA141_4 = input.LA(3);

                    if ( (LA141_4==KW_LessThanSign||LA141_4==KW_GreaterThanSign||(LA141_4>=KW_LeftParenthesis && LA141_4<=KW_EqualsSign)||LA141_4==KW_FullStop||LA141_4==KW_QuestionMark||LA141_4==KW_LeftSquareBracket||(LA141_4>=KW_PlusSignEqualsSign && LA141_4<=KW_PercentSign)||(LA141_4>=KW_As && LA141_4<=KW_QuestionMarkFullStop)) ) {
                        alt141=2;
                    }
                    else if ( ((LA141_4>=KW_Val && LA141_4<=KW_Var)) ) {
                        alt141=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 141, 4, input);

                        throw nvae;
                    }
                    }
                    break;
                case KW_Package:
                case KW_Class:
                case KW_LessThanSign:
                case KW_Extends:
                case KW_Implements:
                case KW_LeftCurlyBracket:
                case KW_Interface:
                case KW_Enum:
                case KW_Annotation:
                case KW_LeftParenthesis:
                case KW_Throws:
                case KW_New:
                case KW_Public:
                case KW_Private:
                case KW_Protected:
                case KW_Abstract:
                case KW_Static:
                case KW_Dispatch:
                case KW_Final:
                case KW_Strictfp:
                case KW_Native:
                case KW_Volatile:
                case KW_Synchronized:
                case KW_Transient:
                case KW_Def:
                case KW_Override:
                case KW_Create:
                case KW_AFTER:
                case KW_BEFORE:
                case KW_SEPARATOR:
                case KW_Import:
                case KW_Try:
                case KW_Switch:
                case KW_NumberSign:
                case KW_LeftSquareBracket:
                case KW_PlusSign:
                case KW_HyphenMinus:
                case KW_ExclamationMark:
                case KW_If:
                case KW_For:
                case KW_While:
                case KW_Do:
                case KW_Super:
                case KW_False:
                case KW_True:
                case KW_Null:
                case KW_Typeof:
                case KW_Throw:
                case KW_Return:
                case RULE_ID:
                case RULE_STRING:
                case RULE_RICH_TEXT:
                case RULE_RICH_TEXT_START:
                case RULE_HEX:
                case RULE_INT:
                case RULE_DECIMAL:
                    {
                    alt141=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 141, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA141_0==KW_Package||(LA141_0>=KW_Class && LA141_0<=KW_LessThanSign)||(LA141_0>=KW_Extends && LA141_0<=KW_LeftCurlyBracket)||(LA141_0>=KW_Interface && LA141_0<=KW_Annotation)||(LA141_0>=KW_Extension && LA141_0<=KW_New)||(LA141_0>=KW_Public && LA141_0<=KW_Transient)||(LA141_0>=KW_Def && LA141_0<=KW_Create)||(LA141_0>=KW_AFTER && LA141_0<=KW_Import)||LA141_0==KW_Try||LA141_0==KW_Switch||(LA141_0>=KW_NumberSign && LA141_0<=KW_LeftSquareBracket)||(LA141_0>=KW_PlusSign && LA141_0<=KW_HyphenMinus)||LA141_0==KW_ExclamationMark||LA141_0==KW_If||(LA141_0>=KW_For && LA141_0<=KW_Return)||(LA141_0>=RULE_ID && LA141_0<=RULE_RICH_TEXT_START)||(LA141_0>=RULE_HEX && LA141_0<=RULE_DECIMAL)) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_LeftParenthesisKeyword_2_0_0ElementType());
                      				
                    }
                    otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_62); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_2);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXTryCatchFinallyExpression_ResourcesInitializedVariableDeclarationParserRuleCall_2_0_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_63);
                    lv_resources_3_0=ruleInitializedVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    loop132:
                    do {
                        int alt132=2;
                        int LA132_0 = input.LA(1);

                        if ( (LA132_0==KW_Semicolon) ) {
                            int LA132_1 = input.LA(2);

                            if ( (LA132_1==KW_Extension||(LA132_1>=KW_Val && LA132_1<=KW_Var)) ) {
                                alt132=1;
                            }


                        }


                        switch (alt132) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_SemicolonKeyword_2_0_2_0ElementType());
                    	      					
                    	    }
                    	    otherlv_4=(Token)match(input,KW_Semicolon,FOLLOW_62); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						doneLeaf(otherlv_4);
                    	      					
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								markComposite(elementTypeProvider.getXTryCatchFinallyExpression_ResourcesInitializedVariableDeclarationParserRuleCall_2_0_2_1_0ElementType());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_63);
                    	    lv_resources_5_0=ruleInitializedVariableDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								doneComposite();
                    	      								if(!current) {
                    	      									associateWithSemanticElement();
                    	      									current = true;
                    	      								}
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop132;
                        }
                    } while (true);
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( (LA133_0==KW_Semicolon) ) {
                        alt133=1;
                    }
                    switch (alt133) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_SemicolonKeyword_2_0_3ElementType());
                              					
                            }
                            otherlv_6=(Token)match(input,KW_Semicolon,FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(otherlv_6);
                              					
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_RightParenthesisKeyword_2_0_4ElementType());
                      				
                    }
                    otherlv_7=(Token)match(input,KW_RightParenthesis,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_7);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXTryCatchFinallyExpression_ExpressionXExpressionParserRuleCall_2_0_5_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_65);
                    lv_expression_8_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt137=2;
                    int LA137_0 = input.LA(1);

                    if ( (LA137_0==KW_Catch) ) {
                        int LA137_1 = input.LA(2);

                        if ( (synpred12_PsiInternalXtend()) ) {
                            alt137=1;
                        }
                    }
                    else if ( (LA137_0==KW_Finally) ) {
                        int LA137_2 = input.LA(2);

                        if ( (synpred12_PsiInternalXtend()) ) {
                            alt137=1;
                        }
                    }
                    switch (alt137) {
                        case 1 :
                            {
                            int alt136=2;
                            int LA136_0 = input.LA(1);

                            if ( (LA136_0==KW_Catch) ) {
                                alt136=1;
                            }
                            else if ( (LA136_0==KW_Finally) ) {
                                alt136=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 136, 0, input);

                                throw nvae;
                            }
                            switch (alt136) {
                                case 1 :
                                    {
                                    {
                                    int cnt134=0;
                                    loop134:
                                    do {
                                        int alt134=2;
                                        int LA134_0 = input.LA(1);

                                        if ( (LA134_0==KW_Catch) ) {
                                            int LA134_2 = input.LA(2);

                                            if ( (synpred13_PsiInternalXtend()) ) {
                                                alt134=1;
                                            }


                                        }


                                        switch (alt134) {
                                    	case 1 :
                                    	    {
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      										markComposite(elementTypeProvider.getXTryCatchFinallyExpression_CatchClausesXCatchClauseParserRuleCall_2_0_6_0_0_0_0ElementType());
                                    	      									
                                    	    }
                                    	    pushFollow(FOLLOW_65);
                                    	    lv_catchClauses_9_0=ruleXCatchClause();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      										doneComposite();
                                    	      										if(!current) {
                                    	      											associateWithSemanticElement();
                                    	      											current = true;
                                    	      										}
                                    	      									
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    if ( cnt134 >= 1 ) break loop134;
                                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                                EarlyExitException eee =
                                                    new EarlyExitException(134, input);
                                                throw eee;
                                        }
                                        cnt134++;
                                    } while (true);
                                    int alt135=2;
                                    int LA135_0 = input.LA(1);

                                    if ( (LA135_0==KW_Finally) ) {
                                        int LA135_1 = input.LA(2);

                                        if ( (synpred14_PsiInternalXtend()) ) {
                                            alt135=1;
                                        }
                                    }
                                    switch (alt135) {
                                        case 1 :
                                            {
                                            {
                                            if ( state.backtracking==0 ) {

                                              										markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_FinallyKeyword_2_0_6_0_0_1_0ElementType());
                                              									
                                            }
                                            otherlv_10=(Token)match(input,KW_Finally,FOLLOW_34); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										doneLeaf(otherlv_10);
                                              									
                                            }

                                            }
                                            {
                                            {
                                            if ( state.backtracking==0 ) {

                                              											markComposite(elementTypeProvider.getXTryCatchFinallyExpression_FinallyExpressionXExpressionParserRuleCall_2_0_6_0_0_1_1_0ElementType());
                                              										
                                            }
                                            pushFollow(FOLLOW_2);
                                            lv_finallyExpression_11_0=ruleXExpression();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											doneComposite();
                                              											if(!current) {
                                              												associateWithSemanticElement();
                                              												current = true;
                                              											}
                                              										
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {

                                      								markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_FinallyKeyword_2_0_6_0_1_0ElementType());
                                      							
                                    }
                                    otherlv_12=(Token)match(input,KW_Finally,FOLLOW_34); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								doneLeaf(otherlv_12);
                                      							
                                    }
                                    {
                                    {
                                    if ( state.backtracking==0 ) {

                                      										markComposite(elementTypeProvider.getXTryCatchFinallyExpression_FinallyExpressionXExpressionParserRuleCall_2_0_6_0_1_1_0ElementType());
                                      									
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_finallyExpression_13_0=ruleXExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										doneComposite();
                                      										if(!current) {
                                      											associateWithSemanticElement();
                                      											current = true;
                                      										}
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXTryCatchFinallyExpression_ExpressionXExpressionParserRuleCall_2_1_0_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_66);
                    lv_expression_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt140=2;
                    int LA140_0 = input.LA(1);

                    if ( (LA140_0==KW_Catch) ) {
                        alt140=1;
                    }
                    else if ( (LA140_0==KW_Finally) ) {
                        alt140=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 140, 0, input);

                        throw nvae;
                    }
                    switch (alt140) {
                        case 1 :
                            {
                            {
                            int cnt138=0;
                            loop138:
                            do {
                                int alt138=2;
                                int LA138_0 = input.LA(1);

                                if ( (LA138_0==KW_Catch) ) {
                                    int LA138_2 = input.LA(2);

                                    if ( (synpred15_PsiInternalXtend()) ) {
                                        alt138=1;
                                    }


                                }


                                switch (alt138) {
                            	case 1 :
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getXTryCatchFinallyExpression_CatchClausesXCatchClauseParserRuleCall_2_1_1_0_0_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_65);
                            	    lv_catchClauses_15_0=ruleXCatchClause();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt138 >= 1 ) break loop138;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(138, input);
                                        throw eee;
                                }
                                cnt138++;
                            } while (true);
                            int alt139=2;
                            int LA139_0 = input.LA(1);

                            if ( (LA139_0==KW_Finally) ) {
                                int LA139_1 = input.LA(2);

                                if ( (synpred16_PsiInternalXtend()) ) {
                                    alt139=1;
                                }
                            }
                            switch (alt139) {
                                case 1 :
                                    {
                                    {
                                    if ( state.backtracking==0 ) {

                                      									markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_FinallyKeyword_2_1_1_0_1_0ElementType());
                                      								
                                    }
                                    otherlv_16=(Token)match(input,KW_Finally,FOLLOW_34); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									doneLeaf(otherlv_16);
                                      								
                                    }

                                    }
                                    {
                                    {
                                    if ( state.backtracking==0 ) {

                                      										markComposite(elementTypeProvider.getXTryCatchFinallyExpression_FinallyExpressionXExpressionParserRuleCall_2_1_1_0_1_1_0ElementType());
                                      									
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_finallyExpression_17_0=ruleXExpression();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										doneComposite();
                                      										if(!current) {
                                      											associateWithSemanticElement();
                                      											current = true;
                                      										}
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getXTryCatchFinallyExpression_FinallyKeyword_2_1_1_1_0ElementType());
                              						
                            }
                            otherlv_18=(Token)match(input,KW_Finally,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(otherlv_18);
                              						
                            }
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getXTryCatchFinallyExpression_FinallyExpressionXExpressionParserRuleCall_2_1_1_1_1_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_2);
                            lv_finallyExpression_19_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXVariableDeclaration() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXVariableDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXVariableDeclarationElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXVariableDeclaration=ruleXVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXVariableDeclaration() throws RecognitionException {
        Boolean current = false;

        Token otherlv_5=null;
        Boolean this_VariableModifier_1 = null;

        Boolean lv_type_2_0 = null;

        Boolean lv_name_3_0 = null;

        Boolean lv_name_4_0 = null;

        Boolean lv_right_6_0 = null;


        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXVariableDeclaration_XtendVariableDeclarationAction_0_0_0ElementType());
              						doneComposite();
              						associateWithSemanticElement();
              					
            }

            }

            if ( state.backtracking==0 ) {

              					if (!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              					markComposite(elementTypeProvider.getXVariableDeclaration_VariableModifierParserRuleCall_0_0_1ElementType());
              				
            }
            pushFollow(FOLLOW_67);
            this_VariableModifier_1=ruleVariableModifier(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					current = this_VariableModifier_1;
              					doneComposite();
              				
            }

            }


            }
            int alt142=2;
            alt142 = dfa142.predict(input);
            switch (alt142) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      								markComposite(elementTypeProvider.getXVariableDeclaration_TypeJvmTypeReferenceParserRuleCall_1_0_0_0_0ElementType());
                      							
                    }
                    pushFollow(FOLLOW_68);
                    lv_type_2_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								doneComposite();
                      								if(!current) {
                      									associateWithSemanticElement();
                      									current = true;
                      								}
                      							
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      								markComposite(elementTypeProvider.getXVariableDeclaration_NameInnerVarIDParserRuleCall_1_0_0_1_0ElementType());
                      							
                    }
                    pushFollow(FOLLOW_69);
                    lv_name_3_0=ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								doneComposite();
                      								if(!current) {
                      									associateWithSemanticElement();
                      									current = true;
                      								}
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXVariableDeclaration_NameInnerVarIDParserRuleCall_1_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_69);
                    lv_name_4_0=ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==KW_EqualsSign) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXVariableDeclaration_EqualsSignKeyword_2_0ElementType());
                      			
                    }
                    otherlv_5=(Token)match(input,KW_EqualsSign,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_5);
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXVariableDeclaration_RightXExpressionParserRuleCall_2_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_6_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleInitializedVariableDeclaration() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleInitializedVariableDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getInitializedVariableDeclarationElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInitializedVariableDeclaration=ruleInitializedVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitializedVariableDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleInitializedVariableDeclaration() throws RecognitionException {
        Boolean current = false;

        Token otherlv_5=null;
        Boolean this_VariableModifier_1 = null;

        Boolean lv_type_2_0 = null;

        Boolean lv_name_3_0 = null;

        Boolean lv_name_4_0 = null;

        Boolean lv_right_6_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getInitializedVariableDeclaration_XtendVariableDeclarationAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			if (!current) {
              				associateWithSemanticElement();
              				current = true;
              			}
              			markComposite(elementTypeProvider.getInitializedVariableDeclaration_VariableModifierParserRuleCall_1ElementType());
              		
            }
            pushFollow(FOLLOW_67);
            this_VariableModifier_1=ruleVariableModifier(current);

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_VariableModifier_1;
              			doneComposite();
              		
            }
            int alt144=2;
            alt144 = dfa144.predict(input);
            switch (alt144) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      								markComposite(elementTypeProvider.getInitializedVariableDeclaration_TypeJvmTypeReferenceParserRuleCall_2_0_0_0_0ElementType());
                      							
                    }
                    pushFollow(FOLLOW_68);
                    lv_type_2_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								doneComposite();
                      								if(!current) {
                      									associateWithSemanticElement();
                      									current = true;
                      								}
                      							
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      								markComposite(elementTypeProvider.getInitializedVariableDeclaration_NameInnerVarIDParserRuleCall_2_0_0_1_0ElementType());
                      							
                    }
                    pushFollow(FOLLOW_58);
                    lv_name_3_0=ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								doneComposite();
                      								if(!current) {
                      									associateWithSemanticElement();
                      									current = true;
                      								}
                      							
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getInitializedVariableDeclaration_NameInnerVarIDParserRuleCall_2_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    lv_name_4_0=ruleInnerVarID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getInitializedVariableDeclaration_EqualsSignKeyword_3ElementType());
              		
            }
            otherlv_5=(Token)match(input,KW_EqualsSign,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_5);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getInitializedVariableDeclaration_RightXExpressionParserRuleCall_4_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_right_6_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleVariableModifier(Boolean in_current) throws RecognitionException {
        Boolean current = in_current;

        Token lv_writeable_0_0=null;
        Token otherlv_1=null;
        Token lv_extension_2_0=null;
        Token lv_extension_3_0=null;
        Token lv_writeable_4_0=null;
        Token otherlv_5=null;

        try {
            {
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( ((LA148_0>=KW_Val && LA148_0<=KW_Var)) ) {
                alt148=1;
            }
            else if ( (LA148_0==KW_Extension) ) {
                alt148=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    {
                    {
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==KW_Var) ) {
                        alt145=1;
                    }
                    else if ( (LA145_0==KW_Val) ) {
                        alt145=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 145, 0, input);

                        throw nvae;
                    }
                    switch (alt145) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getVariableModifier_WriteableVarKeyword_0_0_0_0ElementType());
                              						
                            }
                            lv_writeable_0_0=(Token)match(input,KW_Var,FOLLOW_70); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(lv_writeable_0_0);
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getVariableModifier_ValKeyword_0_0_1ElementType());
                              				
                            }
                            otherlv_1=(Token)match(input,KW_Val,FOLLOW_70); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(otherlv_1);
                              				
                            }

                            }
                            break;

                    }
                    int alt146=2;
                    int LA146_0 = input.LA(1);

                    if ( (LA146_0==KW_Extension) ) {
                        alt146=1;
                    }
                    switch (alt146) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {

                              						markLeaf(elementTypeProvider.getVariableModifier_ExtensionExtensionKeyword_0_1_0ElementType());
                              					
                            }
                            lv_extension_2_0=(Token)match(input,KW_Extension,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						doneLeaf(lv_extension_2_0);
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (!current) {
                              							associateWithSemanticElement();
                              							current = true;
                              						}
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getVariableModifier_ExtensionExtensionKeyword_1_0_0ElementType());
                      					
                    }
                    lv_extension_3_0=(Token)match(input,KW_Extension,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_extension_3_0);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==KW_Var) ) {
                        alt147=1;
                    }
                    else if ( (LA147_0==KW_Val) ) {
                        alt147=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 147, 0, input);

                        throw nvae;
                    }
                    switch (alt147) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getVariableModifier_WriteableVarKeyword_1_1_0_0ElementType());
                              						
                            }
                            lv_writeable_4_0=(Token)match(input,KW_Var,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(lv_writeable_4_0);
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getVariableModifier_ValKeyword_1_1_1ElementType());
                              				
                            }
                            otherlv_5=(Token)match(input,KW_Val,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(otherlv_5);
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXConstructorCall() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXConstructorCall = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXConstructorCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXConstructorCall=ruleXConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXConstructorCall() throws RecognitionException {
        Boolean current = false;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Boolean this_XbaseConstructorCall_0 = null;

        Boolean lv_members_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXConstructorCall_XbaseConstructorCallParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_72);
            this_XbaseConstructorCall_0=ruleXbaseConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XbaseConstructorCall_0;
              			doneComposite();
              		
            }
            int alt150=2;
            alt150 = dfa150.predict(input);
            switch (alt150) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							precedeComposite(elementTypeProvider.getXConstructorCall_AnonymousClassConstructorCallAction_1_0_0_0ElementType());
                      							doneComposite();
                      							associateWithSemanticElement();
                      						
                    }

                    }

                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXConstructorCall_LeftCurlyBracketKeyword_1_0_0_1ElementType());
                      					
                    }
                    otherlv_2=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_2);
                      					
                    }

                    }


                    }
                    loop149:
                    do {
                        int alt149=2;
                        int LA149_0 = input.LA(1);

                        if ( (LA149_0==KW_Package||LA149_0==KW_Class||(LA149_0>=KW_Interface && LA149_0<=KW_LeftParenthesis)||LA149_0==KW_EqualsSignGreaterThanSign||LA149_0==KW_Extension||LA149_0==KW_New||(LA149_0>=KW_Public && LA149_0<=KW_Create)||(LA149_0>=KW_AFTER && LA149_0<=KW_SEPARATOR)||LA149_0==KW_CommercialAt||LA149_0==RULE_ID) ) {
                            alt149=1;
                        }


                        switch (alt149) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getXConstructorCall_MembersMemberParserRuleCall_1_1_0ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_15);
                    	    lv_members_3_0=ruleMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      						if(!current) {
                    	      							associateWithSemanticElement();
                    	      							current = true;
                    	      						}
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop149;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXConstructorCall_RightCurlyBracketKeyword_1_2ElementType());
                      			
                    }
                    otherlv_4=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_4);
                      			
                    }

                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXbaseConstructorCall() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXbaseConstructorCall = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXbaseConstructorCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXbaseConstructorCall=ruleXbaseConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXbaseConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXbaseConstructorCall() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_explicitConstructorCall_8_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Boolean lv_typeArguments_4_0 = null;

        Boolean lv_typeArguments_6_0 = null;

        Boolean lv_arguments_9_0 = null;

        Boolean lv_arguments_10_0 = null;

        Boolean lv_arguments_12_0 = null;

        Boolean lv_arguments_14_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXbaseConstructorCall_XConstructorCallAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXbaseConstructorCall_NewKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_New,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					if (!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXbaseConstructorCall_ConstructorJvmConstructorCrossReference_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_73);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }
            int alt152=2;
            alt152 = dfa152.predict(input);
            switch (alt152) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXbaseConstructorCall_LessThanSignKeyword_3_0ElementType());
                      				
                    }
                    otherlv_3=(Token)match(input,KW_LessThanSign,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_3);
                      				
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXbaseConstructorCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    loop151:
                    do {
                        int alt151=2;
                        int LA151_0 = input.LA(1);

                        if ( (LA151_0==KW_Comma) ) {
                            alt151=1;
                        }


                        switch (alt151) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXbaseConstructorCall_CommaKeyword_3_2_0ElementType());
                    	      				
                    	    }
                    	    otherlv_5=(Token)match(input,KW_Comma,FOLLOW_53); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_5);
                    	      				
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXbaseConstructorCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_3_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    lv_typeArguments_6_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop151;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXbaseConstructorCall_GreaterThanSignKeyword_3_3ElementType());
                      			
                    }
                    otherlv_7=(Token)match(input,KW_GreaterThanSign,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_7);
                      			
                    }

                    }
                    break;

            }
            int alt155=2;
            alt155 = dfa155.predict(input);
            switch (alt155) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXbaseConstructorCall_ExplicitConstructorCallLeftParenthesisKeyword_4_0_0ElementType());
                      					
                    }
                    lv_explicitConstructorCall_8_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_explicitConstructorCall_8_0);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    int alt154=3;
                    alt154 = dfa154.predict(input);
                    switch (alt154) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXbaseConstructorCall_ArgumentsXShortClosureParserRuleCall_4_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_64);
                            lv_arguments_9_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXbaseConstructorCall_ArgumentsXExpressionParserRuleCall_4_1_1_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_28);
                            lv_arguments_10_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop153:
                            do {
                                int alt153=2;
                                int LA153_0 = input.LA(1);

                                if ( (LA153_0==KW_Comma) ) {
                                    alt153=1;
                                }


                                switch (alt153) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getXbaseConstructorCall_CommaKeyword_4_1_1_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_11=(Token)match(input,KW_Comma,FOLLOW_34); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_11);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getXbaseConstructorCall_ArgumentsXExpressionParserRuleCall_4_1_1_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_arguments_12_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop153;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXbaseConstructorCall_RightParenthesisKeyword_4_2ElementType());
                      			
                    }
                    otherlv_13=(Token)match(input,KW_RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_13);
                      			
                    }

                    }
                    break;

            }
            int alt156=2;
            alt156 = dfa156.predict(input);
            switch (alt156) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXbaseConstructorCall_ArgumentsXClosureParserRuleCall_5_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_arguments_14_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      					if(!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmFormalParameter() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmFormalParameterElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmFormalParameter=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmFormalParameter() throws RecognitionException {
        Boolean current = false;

        Token lv_extension_0_0=null;
        Boolean lv_parameterType_1_0 = null;

        Boolean lv_name_2_0 = null;


        try {
            {
            {
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==KW_Extension) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getJvmFormalParameter_ExtensionExtensionKeyword_0_0ElementType());
                      				
                    }
                    lv_extension_0_0=(Token)match(input,KW_Extension,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(lv_extension_0_0);
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }
            int alt158=2;
            switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA158_1 = input.LA(2);

                    if ( (LA158_1==KW_Package||(LA158_1>=KW_Class && LA158_1<=KW_LessThanSign)||(LA158_1>=KW_Extends && LA158_1<=KW_Implements)||(LA158_1>=KW_Interface && LA158_1<=KW_Annotation)||LA158_1==KW_Throws||(LA158_1>=KW_FullStop && LA158_1<=KW_Transient)||(LA158_1>=KW_Def && LA158_1<=KW_Create)||(LA158_1>=KW_AFTER && LA158_1<=KW_Import)||LA158_1==KW_LeftSquareBracket||LA158_1==RULE_ID) ) {
                        alt158=1;
                    }
                    }
                    break;
                case KW_Create:
                    {
                    int LA158_2 = input.LA(2);

                    if ( (LA158_2==KW_Package||(LA158_2>=KW_Class && LA158_2<=KW_LessThanSign)||(LA158_2>=KW_Extends && LA158_2<=KW_Implements)||(LA158_2>=KW_Interface && LA158_2<=KW_Annotation)||LA158_2==KW_Throws||(LA158_2>=KW_FullStop && LA158_2<=KW_Transient)||(LA158_2>=KW_Def && LA158_2<=KW_Create)||(LA158_2>=KW_AFTER && LA158_2<=KW_Import)||LA158_2==KW_LeftSquareBracket||LA158_2==RULE_ID) ) {
                        alt158=1;
                    }
                    }
                    break;
                case KW_Annotation:
                    {
                    int LA158_3 = input.LA(2);

                    if ( (LA158_3==KW_Package||(LA158_3>=KW_Class && LA158_3<=KW_LessThanSign)||(LA158_3>=KW_Extends && LA158_3<=KW_Implements)||(LA158_3>=KW_Interface && LA158_3<=KW_Annotation)||LA158_3==KW_Throws||(LA158_3>=KW_FullStop && LA158_3<=KW_Transient)||(LA158_3>=KW_Def && LA158_3<=KW_Create)||(LA158_3>=KW_AFTER && LA158_3<=KW_Import)||LA158_3==KW_LeftSquareBracket||LA158_3==RULE_ID) ) {
                        alt158=1;
                    }
                    }
                    break;
                case KW_AFTER:
                    {
                    int LA158_4 = input.LA(2);

                    if ( (LA158_4==KW_Package||(LA158_4>=KW_Class && LA158_4<=KW_LessThanSign)||(LA158_4>=KW_Extends && LA158_4<=KW_Implements)||(LA158_4>=KW_Interface && LA158_4<=KW_Annotation)||LA158_4==KW_Throws||(LA158_4>=KW_FullStop && LA158_4<=KW_Transient)||(LA158_4>=KW_Def && LA158_4<=KW_Create)||(LA158_4>=KW_AFTER && LA158_4<=KW_Import)||LA158_4==KW_LeftSquareBracket||LA158_4==RULE_ID) ) {
                        alt158=1;
                    }
                    }
                    break;
                case KW_BEFORE:
                    {
                    int LA158_5 = input.LA(2);

                    if ( (LA158_5==KW_Package||(LA158_5>=KW_Class && LA158_5<=KW_LessThanSign)||(LA158_5>=KW_Extends && LA158_5<=KW_Implements)||(LA158_5>=KW_Interface && LA158_5<=KW_Annotation)||LA158_5==KW_Throws||(LA158_5>=KW_FullStop && LA158_5<=KW_Transient)||(LA158_5>=KW_Def && LA158_5<=KW_Create)||(LA158_5>=KW_AFTER && LA158_5<=KW_Import)||LA158_5==KW_LeftSquareBracket||LA158_5==RULE_ID) ) {
                        alt158=1;
                    }
                    }
                    break;
                case KW_SEPARATOR:
                    {
                    int LA158_6 = input.LA(2);

                    if ( (LA158_6==KW_Package||(LA158_6>=KW_Class && LA158_6<=KW_LessThanSign)||(LA158_6>=KW_Extends && LA158_6<=KW_Implements)||(LA158_6>=KW_Interface && LA158_6<=KW_Annotation)||LA158_6==KW_Throws||(LA158_6>=KW_FullStop && LA158_6<=KW_Transient)||(LA158_6>=KW_Def && LA158_6<=KW_Create)||(LA158_6>=KW_AFTER && LA158_6<=KW_Import)||LA158_6==KW_LeftSquareBracket||LA158_6==RULE_ID) ) {
                        alt158=1;
                    }
                    }
                    break;
                case KW_LeftParenthesis:
                case KW_EqualsSignGreaterThanSign:
                    {
                    alt158=1;
                    }
                    break;
            }

            switch (alt158) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getJvmFormalParameter_ParameterTypeJvmTypeReferenceParserRuleCall_1_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_68);
                    lv_parameterType_1_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      					if(!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmFormalParameter_NameInnerVarIDParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_2_0=ruleInnerVarID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleFullJvmFormalParameter() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleFullJvmFormalParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getFullJvmFormalParameterElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFullJvmFormalParameter=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFullJvmFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleFullJvmFormalParameter() throws RecognitionException {
        Boolean current = false;

        Token lv_extension_0_0=null;
        Boolean lv_parameterType_1_0 = null;

        Boolean lv_name_2_0 = null;


        try {
            {
            {
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==KW_Extension) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getFullJvmFormalParameter_ExtensionExtensionKeyword_0_0ElementType());
                      				
                    }
                    lv_extension_0_0=(Token)match(input,KW_Extension,FOLLOW_29); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(lv_extension_0_0);
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getFullJvmFormalParameter_ParameterTypeMultiTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_68);
            lv_parameterType_1_0=ruleMultiTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getFullJvmFormalParameter_NameInnerVarIDParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_2_0=ruleInnerVarID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleMultiTypeReference() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleMultiTypeReference = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getMultiTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiTypeReference=ruleMultiTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleMultiTypeReference() throws RecognitionException {
        Boolean current = false;

        Token otherlv_2=null;
        Boolean this_JvmTypeReference_0 = null;

        Boolean lv_references_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getMultiTypeReference_JvmTypeReferenceParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_76);
            this_JvmTypeReference_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_JvmTypeReference_0;
              			doneComposite();
              		
            }
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( (LA161_0==KW_VerticalLine) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					precedeComposite(elementTypeProvider.getMultiTypeReference_JvmSynonymTypeReferenceReferencesAction_1_0ElementType());
                      					doneComposite();
                      					associateWithSemanticElement();
                      				
                    }

                    }
                    int cnt160=0;
                    loop160:
                    do {
                        int alt160=2;
                        int LA160_0 = input.LA(1);

                        if ( (LA160_0==KW_VerticalLine) ) {
                            alt160=1;
                        }


                        switch (alt160) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getMultiTypeReference_VerticalLineKeyword_1_1_0ElementType());
                    	      				
                    	    }
                    	    otherlv_2=(Token)match(input,KW_VerticalLine,FOLLOW_29); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_2);
                    	      				
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getMultiTypeReference_ReferencesJvmTypeReferenceParserRuleCall_1_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_76);
                    	    lv_references_3_0=ruleJvmTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt160 >= 1 ) break loop160;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(160, input);
                                throw eee;
                        }
                        cnt160++;
                    } while (true);


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXStringLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXStringLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXStringLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXStringLiteral=ruleXStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXStringLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean this_SimpleStringLiteral_0 = null;

        Boolean this_RichString_1 = null;


        try {
            {
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==RULE_STRING) ) {
                alt162=1;
            }
            else if ( ((LA162_0>=RULE_RICH_TEXT && LA162_0<=RULE_RICH_TEXT_START)) ) {
                alt162=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }
            switch (alt162) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXStringLiteral_SimpleStringLiteralParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SimpleStringLiteral_0=ruleSimpleStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SimpleStringLiteral_0;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXStringLiteral_RichStringParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RichString_1=ruleRichString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RichString_1;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXSwitchExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXSwitchExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXSwitchExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSwitchExpression=ruleXSwitchExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSwitchExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXSwitchExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Boolean lv_declaredParam_3_0 = null;

        Boolean lv_switch_5_0 = null;

        Boolean lv_declaredParam_7_0 = null;

        Boolean lv_switch_9_0 = null;

        Boolean lv_cases_11_0 = null;

        Boolean lv_default_14_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXSwitchExpression_XSwitchExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSwitchExpression_SwitchKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Switch,FOLLOW_77); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            int alt164=2;
            alt164 = dfa164.predict(input);
            switch (alt164) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markLeaf(elementTypeProvider.getXSwitchExpression_LeftParenthesisKeyword_2_0_0_0_0ElementType());
                      						
                    }
                    otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneLeaf(otherlv_2);
                      						
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      									markComposite(elementTypeProvider.getXSwitchExpression_DeclaredParamJvmFormalParameterParserRuleCall_2_0_0_0_1_0ElementType());
                      								
                    }
                    pushFollow(FOLLOW_56);
                    lv_declaredParam_3_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      									doneComposite();
                      									if(!current) {
                      										associateWithSemanticElement();
                      										current = true;
                      									}
                      								
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      							markLeaf(elementTypeProvider.getXSwitchExpression_ColonKeyword_2_0_0_0_2ElementType());
                      						
                    }
                    otherlv_4=(Token)match(input,KW_Colon,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneLeaf(otherlv_4);
                      						
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXSwitchExpression_SwitchXExpressionParserRuleCall_2_0_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_64);
                    lv_switch_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }

                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXSwitchExpression_RightParenthesisKeyword_2_0_2ElementType());
                      				
                    }
                    otherlv_6=(Token)match(input,KW_RightParenthesis,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_6);
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    int alt163=2;
                    alt163 = dfa163.predict(input);
                    switch (alt163) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              									markComposite(elementTypeProvider.getXSwitchExpression_DeclaredParamJvmFormalParameterParserRuleCall_2_1_0_0_0_0ElementType());
                              								
                            }
                            pushFollow(FOLLOW_56);
                            lv_declaredParam_7_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									doneComposite();
                              									if(!current) {
                              										associateWithSemanticElement();
                              										current = true;
                              									}
                              								
                            }

                            }


                            }

                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getXSwitchExpression_ColonKeyword_2_1_0_0_1ElementType());
                              						
                            }
                            otherlv_8=(Token)match(input,KW_Colon,FOLLOW_77); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(otherlv_8);
                              						
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXSwitchExpression_SwitchXExpressionOrSimpleConstructorCallParserRuleCall_2_1_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_20);
                    lv_switch_9_0=ruleXExpressionOrSimpleConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSwitchExpression_LeftCurlyBracketKeyword_3ElementType());
              		
            }
            otherlv_10=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_10);
              		
            }
            loop165:
            do {
                int alt165=2;
                int LA165_0 = input.LA(1);

                if ( (LA165_0==KW_Comma||(LA165_0>=KW_Annotation && LA165_0<=KW_LeftParenthesis)||LA165_0==KW_EqualsSignGreaterThanSign||(LA165_0>=KW_Create && LA165_0<=KW_SEPARATOR)||LA165_0==KW_Case||LA165_0==RULE_ID) ) {
                    alt165=1;
                }


                switch (alt165) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getXSwitchExpression_CasesXCasePartParserRuleCall_4_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_78);
            	    lv_cases_11_0=ruleXCasePart();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      					if(!current) {
            	      						associateWithSemanticElement();
            	      						current = true;
            	      					}
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==KW_Default) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXSwitchExpression_DefaultKeyword_5_0ElementType());
                      			
                    }
                    otherlv_12=(Token)match(input,KW_Default,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_12);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXSwitchExpression_ColonKeyword_5_1ElementType());
                      			
                    }
                    otherlv_13=(Token)match(input,KW_Colon,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_13);
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXSwitchExpression_DefaultXExpressionParserRuleCall_5_2_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_default_14_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSwitchExpression_RightCurlyBracketKeyword_6ElementType());
              		
            }
            otherlv_15=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_15);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXCasePart() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXCasePart = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXCasePartElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCasePart=ruleXCasePart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCasePart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXCasePart() throws RecognitionException {
        Boolean current = false;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_fallThrough_6_0=null;
        Boolean lv_typeGuard_1_0 = null;

        Boolean lv_case_3_0 = null;

        Boolean lv_then_5_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXCasePart_XCasePartAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( ((LA167_0>=KW_Annotation && LA167_0<=KW_LeftParenthesis)||LA167_0==KW_EqualsSignGreaterThanSign||LA167_0==KW_Create||(LA167_0>=KW_AFTER && LA167_0<=KW_SEPARATOR)||LA167_0==RULE_ID) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXCasePart_TypeGuardMultiTypeReferenceParserRuleCall_1_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_79);
                    lv_typeGuard_1_0=ruleMultiTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      					if(!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==KW_Case) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXCasePart_CaseKeyword_2_0ElementType());
                      			
                    }
                    otherlv_2=(Token)match(input,KW_Case,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_2);
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXCasePart_CaseXExpressionParserRuleCall_2_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_80);
                    lv_case_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==KW_Colon) ) {
                alt169=1;
            }
            else if ( (LA169_0==KW_Comma) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;
            }
            switch (alt169) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXCasePart_ColonKeyword_3_0_0ElementType());
                      				
                    }
                    otherlv_4=(Token)match(input,KW_Colon,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_4);
                      				
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXCasePart_ThenXExpressionParserRuleCall_3_0_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_then_5_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXCasePart_FallThroughCommaKeyword_3_1_0ElementType());
                      					
                    }
                    lv_fallThrough_6_0=(Token)match(input,KW_Comma,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_fallThrough_6_0);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXExpressionOrSimpleConstructorCall() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXExpressionOrSimpleConstructorCall = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXExpressionOrSimpleConstructorCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrSimpleConstructorCall=ruleXExpressionOrSimpleConstructorCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrSimpleConstructorCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXExpressionOrSimpleConstructorCall() throws RecognitionException {
        Boolean current = false;

        Boolean this_XbaseConstructorCall_0 = null;

        Boolean this_XExpression_1 = null;


        try {
            {
            int alt170=2;
            alt170 = dfa170.predict(input);
            switch (alt170) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXExpressionOrSimpleConstructorCall_XbaseConstructorCallParserRuleCall_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XbaseConstructorCall_0=ruleXbaseConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XbaseConstructorCall_0;
                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXExpressionOrSimpleConstructorCall_XExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleSimpleStringLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleSimpleStringLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getSimpleStringLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleStringLiteral=ruleSimpleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleSimpleStringLiteral() throws RecognitionException {
        Boolean current = false;

        Token lv_value_1_0=null;

        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getSimpleStringLiteral_XStringLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getSimpleStringLiteral_ValueSTRINGTerminalRuleCall_1_0ElementType());
              				
            }
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					doneLeaf(lv_value_1_0);
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleRichString() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleRichString = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichString=ruleRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleRichString() throws RecognitionException {
        Boolean current = false;

        Boolean lv_expressions_1_0 = null;

        Boolean lv_expressions_2_0 = null;

        Boolean lv_expressions_3_0 = null;

        Boolean lv_expressions_4_0 = null;

        Boolean lv_expressions_5_0 = null;

        Boolean lv_expressions_6_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichString_RichStringAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==RULE_RICH_TEXT) ) {
                alt174=1;
            }
            else if ( (LA174_0==RULE_RICH_TEXT_START) ) {
                alt174=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }
            switch (alt174) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichString_ExpressionsRichStringLiteralParserRuleCall_1_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressions_1_0=ruleRichStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getRichString_ExpressionsRichStringLiteralStartParserRuleCall_1_1_0_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_81);
                    lv_expressions_2_0=ruleRichStringLiteralStart();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt171=2;
                    int LA171_0 = input.LA(1);

                    if ( (LA171_0==KW_Package||(LA171_0>=KW_Class && LA171_0<=KW_LessThanSign)||(LA171_0>=KW_Extends && LA171_0<=KW_LeftCurlyBracket)||(LA171_0>=KW_Interface && LA171_0<=KW_LeftParenthesis)||(LA171_0>=KW_Extension && LA171_0<=KW_New)||(LA171_0>=KW_Public && LA171_0<=KW_Create)||(LA171_0>=KW_AFTER && LA171_0<=KW_Import)||LA171_0==KW_Try||LA171_0==KW_Switch||LA171_0==KW_FOR||LA171_0==KW_IF||(LA171_0>=KW_NumberSign && LA171_0<=KW_LeftSquareBracket)||(LA171_0>=KW_PlusSign && LA171_0<=KW_HyphenMinus)||LA171_0==KW_ExclamationMark||LA171_0==KW_If||(LA171_0>=KW_For && LA171_0<=KW_Return)||(LA171_0>=RULE_ID && LA171_0<=RULE_RICH_TEXT_START)||(LA171_0>=RULE_HEX && LA171_0<=RULE_DECIMAL)) ) {
                        alt171=1;
                    }
                    switch (alt171) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getRichString_ExpressionsRichStringPartParserRuleCall_1_1_1_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_81);
                            lv_expressions_3_0=ruleRichStringPart();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }
                            break;

                    }
                    loop173:
                    do {
                        int alt173=2;
                        int LA173_0 = input.LA(1);

                        if ( ((LA173_0>=RULE_RICH_TEXT_INBETWEEN && LA173_0<=RULE_COMMENT_RICH_TEXT_INBETWEEN)) ) {
                            alt173=1;
                        }


                        switch (alt173) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								markComposite(elementTypeProvider.getRichString_ExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_2_0_0ElementType());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_81);
                    	    lv_expressions_4_0=ruleRichStringLiteralInbetween();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								doneComposite();
                    	      								if(!current) {
                    	      									associateWithSemanticElement();
                    	      									current = true;
                    	      								}
                    	      							
                    	    }

                    	    }


                    	    }
                    	    int alt172=2;
                    	    int LA172_0 = input.LA(1);

                    	    if ( (LA172_0==KW_Package||(LA172_0>=KW_Class && LA172_0<=KW_LessThanSign)||(LA172_0>=KW_Extends && LA172_0<=KW_LeftCurlyBracket)||(LA172_0>=KW_Interface && LA172_0<=KW_LeftParenthesis)||(LA172_0>=KW_Extension && LA172_0<=KW_New)||(LA172_0>=KW_Public && LA172_0<=KW_Create)||(LA172_0>=KW_AFTER && LA172_0<=KW_Import)||LA172_0==KW_Try||LA172_0==KW_Switch||LA172_0==KW_FOR||LA172_0==KW_IF||(LA172_0>=KW_NumberSign && LA172_0<=KW_LeftSquareBracket)||(LA172_0>=KW_PlusSign && LA172_0<=KW_HyphenMinus)||LA172_0==KW_ExclamationMark||LA172_0==KW_If||(LA172_0>=KW_For && LA172_0<=KW_Return)||(LA172_0>=RULE_ID && LA172_0<=RULE_RICH_TEXT_START)||(LA172_0>=RULE_HEX && LA172_0<=RULE_DECIMAL)) ) {
                    	        alt172=1;
                    	    }
                    	    switch (alt172) {
                    	        case 1 :
                    	            {
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								markComposite(elementTypeProvider.getRichString_ExpressionsRichStringPartParserRuleCall_1_1_2_1_0ElementType());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_81);
                    	            lv_expressions_5_0=ruleRichStringPart();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								doneComposite();
                    	              								if(!current) {
                    	              									associateWithSemanticElement();
                    	              									current = true;
                    	              								}
                    	              							
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop173;
                        }
                    } while (true);
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getRichString_ExpressionsRichStringLiteralEndParserRuleCall_1_1_3_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_expressions_6_0=ruleRichStringLiteralEnd();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleRichStringLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleRichStringLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringLiteral=ruleRichStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleRichStringLiteral() throws RecognitionException {
        Boolean current = false;

        Token lv_value_1_0=null;

        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringLiteral_RichStringLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getRichStringLiteral_ValueRICH_TEXTTerminalRuleCall_1_0ElementType());
              				
            }
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					doneLeaf(lv_value_1_0);
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleRichStringLiteralStart() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleRichStringLiteralStart = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringLiteralStartElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringLiteralStart=ruleRichStringLiteralStart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteralStart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleRichStringLiteralStart() throws RecognitionException {
        Boolean current = false;

        Token lv_value_1_0=null;

        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringLiteralStart_RichStringLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getRichStringLiteralStart_ValueRICH_TEXT_STARTTerminalRuleCall_1_0ElementType());
              				
            }
            lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_START,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					doneLeaf(lv_value_1_0);
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleRichStringLiteralInbetween() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleRichStringLiteralInbetween = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringLiteralInbetweenElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringLiteralInbetween=ruleRichStringLiteralInbetween();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteralInbetween; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleRichStringLiteralInbetween() throws RecognitionException {
        Boolean current = false;

        Token lv_value_1_0=null;
        Token lv_value_2_0=null;

        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringLiteralInbetween_RichStringLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( (LA175_0==RULE_RICH_TEXT_INBETWEEN) ) {
                alt175=1;
            }
            else if ( (LA175_0==RULE_COMMENT_RICH_TEXT_INBETWEEN) ) {
                alt175=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 175, 0, input);

                throw nvae;
            }
            switch (alt175) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getRichStringLiteralInbetween_ValueRICH_TEXT_INBETWEENTerminalRuleCall_1_0_0ElementType());
                      					
                    }
                    lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_INBETWEEN,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_value_1_0);
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getRichStringLiteralInbetween_ValueCOMMENT_RICH_TEXT_INBETWEENTerminalRuleCall_1_1_0ElementType());
                      					
                    }
                    lv_value_2_0=(Token)match(input,RULE_COMMENT_RICH_TEXT_INBETWEEN,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_value_2_0);
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleRichStringLiteralEnd() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleRichStringLiteralEnd = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringLiteralEndElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringLiteralEnd=ruleRichStringLiteralEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringLiteralEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleRichStringLiteralEnd() throws RecognitionException {
        Boolean current = false;

        Token lv_value_1_0=null;
        Token lv_value_2_0=null;

        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringLiteralEnd_RichStringLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==RULE_RICH_TEXT_END) ) {
                alt176=1;
            }
            else if ( (LA176_0==RULE_COMMENT_RICH_TEXT_END) ) {
                alt176=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 176, 0, input);

                throw nvae;
            }
            switch (alt176) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getRichStringLiteralEnd_ValueRICH_TEXT_ENDTerminalRuleCall_1_0_0ElementType());
                      					
                    }
                    lv_value_1_0=(Token)match(input,RULE_RICH_TEXT_END,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_value_1_0);
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getRichStringLiteralEnd_ValueCOMMENT_RICH_TEXT_ENDTerminalRuleCall_1_1_0ElementType());
                      					
                    }
                    lv_value_2_0=(Token)match(input,RULE_COMMENT_RICH_TEXT_END,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_value_2_0);
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleInternalRichString() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleInternalRichString = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getInternalRichStringElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInternalRichString=ruleInternalRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInternalRichString; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleInternalRichString() throws RecognitionException {
        Boolean current = false;

        Boolean lv_expressions_1_0 = null;

        Boolean lv_expressions_2_0 = null;

        Boolean lv_expressions_3_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getInternalRichString_RichStringAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            {
            {
            {
            if ( state.backtracking==0 ) {

              						markComposite(elementTypeProvider.getInternalRichString_ExpressionsRichStringLiteralInbetweenParserRuleCall_1_0_0ElementType());
              					
            }
            pushFollow(FOLLOW_82);
            lv_expressions_1_0=ruleRichStringLiteralInbetween();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						doneComposite();
              						if(!current) {
              							associateWithSemanticElement();
              							current = true;
              						}
              					
            }

            }


            }
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( (LA178_0==KW_Package||(LA178_0>=KW_Class && LA178_0<=KW_LessThanSign)||(LA178_0>=KW_Extends && LA178_0<=KW_LeftCurlyBracket)||(LA178_0>=KW_Interface && LA178_0<=KW_LeftParenthesis)||(LA178_0>=KW_Extension && LA178_0<=KW_New)||(LA178_0>=KW_Public && LA178_0<=KW_Create)||(LA178_0>=KW_AFTER && LA178_0<=KW_Import)||LA178_0==KW_Try||LA178_0==KW_Switch||LA178_0==KW_FOR||LA178_0==KW_IF||(LA178_0>=KW_NumberSign && LA178_0<=KW_LeftSquareBracket)||(LA178_0>=KW_PlusSign && LA178_0<=KW_HyphenMinus)||LA178_0==KW_ExclamationMark||LA178_0==KW_If||(LA178_0>=KW_For && LA178_0<=KW_Return)||(LA178_0>=RULE_ID && LA178_0<=RULE_COMMENT_RICH_TEXT_INBETWEEN)||(LA178_0>=RULE_HEX && LA178_0<=RULE_DECIMAL)) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    {
            	    int alt177=2;
            	    int LA177_0 = input.LA(1);

            	    if ( (LA177_0==KW_Package||(LA177_0>=KW_Class && LA177_0<=KW_LessThanSign)||(LA177_0>=KW_Extends && LA177_0<=KW_LeftCurlyBracket)||(LA177_0>=KW_Interface && LA177_0<=KW_LeftParenthesis)||(LA177_0>=KW_Extension && LA177_0<=KW_New)||(LA177_0>=KW_Public && LA177_0<=KW_Create)||(LA177_0>=KW_AFTER && LA177_0<=KW_Import)||LA177_0==KW_Try||LA177_0==KW_Switch||LA177_0==KW_FOR||LA177_0==KW_IF||(LA177_0>=KW_NumberSign && LA177_0<=KW_LeftSquareBracket)||(LA177_0>=KW_PlusSign && LA177_0<=KW_HyphenMinus)||LA177_0==KW_ExclamationMark||LA177_0==KW_If||(LA177_0>=KW_For && LA177_0<=KW_Return)||(LA177_0>=RULE_ID && LA177_0<=RULE_RICH_TEXT_START)||(LA177_0>=RULE_HEX && LA177_0<=RULE_DECIMAL)) ) {
            	        alt177=1;
            	    }
            	    switch (alt177) {
            	        case 1 :
            	            {
            	            {
            	            if ( state.backtracking==0 ) {

            	              							markComposite(elementTypeProvider.getInternalRichString_ExpressionsRichStringPartParserRuleCall_1_1_0_0ElementType());
            	              						
            	            }
            	            pushFollow(FOLLOW_83);
            	            lv_expressions_2_0=ruleRichStringPart();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							doneComposite();
            	              							if(!current) {
            	              								associateWithSemanticElement();
            	              								current = true;
            	              							}
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getInternalRichString_ExpressionsRichStringLiteralInbetweenParserRuleCall_1_1_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_82);
            	    lv_expressions_3_0=ruleRichStringLiteralInbetween();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      							if(!current) {
            	      								associateWithSemanticElement();
            	      								current = true;
            	      							}
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleRichStringPart() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleRichStringPart = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringPartElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringPart=ruleRichStringPart();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringPart; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleRichStringPart() throws RecognitionException {
        Boolean current = false;

        Boolean this_XExpressionOrVarDeclaration_0 = null;

        Boolean this_RichStringForLoop_1 = null;

        Boolean this_RichStringIf_2 = null;


        try {
            {
            int alt179=3;
            switch ( input.LA(1) ) {
            case KW_Package:
            case KW_Class:
            case KW_LessThanSign:
            case KW_Extends:
            case KW_Implements:
            case KW_LeftCurlyBracket:
            case KW_Interface:
            case KW_Enum:
            case KW_Annotation:
            case KW_LeftParenthesis:
            case KW_Extension:
            case KW_Throws:
            case KW_New:
            case KW_Public:
            case KW_Private:
            case KW_Protected:
            case KW_Abstract:
            case KW_Static:
            case KW_Dispatch:
            case KW_Final:
            case KW_Strictfp:
            case KW_Native:
            case KW_Volatile:
            case KW_Synchronized:
            case KW_Transient:
            case KW_Val:
            case KW_Var:
            case KW_Def:
            case KW_Override:
            case KW_Create:
            case KW_AFTER:
            case KW_BEFORE:
            case KW_SEPARATOR:
            case KW_Import:
            case KW_Try:
            case KW_Switch:
            case KW_NumberSign:
            case KW_LeftSquareBracket:
            case KW_PlusSign:
            case KW_HyphenMinus:
            case KW_ExclamationMark:
            case KW_If:
            case KW_For:
            case KW_While:
            case KW_Do:
            case KW_Super:
            case KW_False:
            case KW_True:
            case KW_Null:
            case KW_Typeof:
            case KW_Throw:
            case KW_Return:
            case RULE_ID:
            case RULE_STRING:
            case RULE_RICH_TEXT:
            case RULE_RICH_TEXT_START:
            case RULE_HEX:
            case RULE_INT:
            case RULE_DECIMAL:
                {
                alt179=1;
                }
                break;
            case KW_FOR:
                {
                alt179=2;
                }
                break;
            case KW_IF:
                {
                alt179=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 179, 0, input);

                throw nvae;
            }

            switch (alt179) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getRichStringPart_XExpressionOrVarDeclarationParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpressionOrVarDeclaration_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpressionOrVarDeclaration_0;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getRichStringPart_RichStringForLoopParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RichStringForLoop_1=ruleRichStringForLoop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RichStringForLoop_1;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getRichStringPart_RichStringIfParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_RichStringIf_2=ruleRichStringIf();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RichStringIf_2;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleRichStringForLoop() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleRichStringForLoop = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringForLoopElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringForLoop=ruleRichStringForLoop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringForLoop; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleRichStringForLoop() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Boolean lv_declaredParam_2_0 = null;

        Boolean lv_forExpression_4_0 = null;

        Boolean lv_before_6_0 = null;

        Boolean lv_separator_8_0 = null;

        Boolean lv_after_10_0 = null;

        Boolean lv_eachExpression_11_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringForLoop_RichStringForLoopAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringForLoop_FORKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_FOR,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringForLoop_DeclaredParamJvmFormalParameterParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_56);
            lv_declaredParam_2_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringForLoop_ColonKeyword_3ElementType());
              		
            }
            otherlv_3=(Token)match(input,KW_Colon,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_3);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringForLoop_ForExpressionXExpressionParserRuleCall_4_0ElementType());
              				
            }
            pushFollow(FOLLOW_84);
            lv_forExpression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==KW_BEFORE) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getRichStringForLoop_BEFOREKeyword_5_0ElementType());
                      			
                    }
                    otherlv_5=(Token)match(input,KW_BEFORE,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_5);
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichStringForLoop_BeforeXExpressionParserRuleCall_5_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_84);
                    lv_before_6_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==KW_SEPARATOR) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getRichStringForLoop_SEPARATORKeyword_6_0ElementType());
                      			
                    }
                    otherlv_7=(Token)match(input,KW_SEPARATOR,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_7);
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichStringForLoop_SeparatorXExpressionParserRuleCall_6_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_84);
                    lv_separator_8_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( (LA182_0==KW_AFTER) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getRichStringForLoop_AFTERKeyword_7_0ElementType());
                      			
                    }
                    otherlv_9=(Token)match(input,KW_AFTER,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_9);
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichStringForLoop_AfterXExpressionParserRuleCall_7_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_84);
                    lv_after_10_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringForLoop_EachExpressionInternalRichStringParserRuleCall_8_0ElementType());
              				
            }
            pushFollow(FOLLOW_85);
            lv_eachExpression_11_0=ruleInternalRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringForLoop_ENDFORKeyword_9ElementType());
              		
            }
            otherlv_12=(Token)match(input,KW_ENDFOR,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_12);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleRichStringIf() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleRichStringIf = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringIfElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringIf=ruleRichStringIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleRichStringIf() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Boolean lv_if_2_0 = null;

        Boolean lv_then_3_0 = null;

        Boolean lv_elseIfs_4_0 = null;

        Boolean lv_else_6_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getRichStringIf_RichStringIfAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringIf_IFKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_IF,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringIf_IfXExpressionParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_84);
            lv_if_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringIf_ThenInternalRichStringParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_86);
            lv_then_3_0=ruleInternalRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }
            loop183:
            do {
                int alt183=2;
                int LA183_0 = input.LA(1);

                if ( (LA183_0==KW_ELSEIF) ) {
                    alt183=1;
                }


                switch (alt183) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getRichStringIf_ElseIfsRichStringElseIfParserRuleCall_4_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_86);
            	    lv_elseIfs_4_0=ruleRichStringElseIf();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      					if(!current) {
            	      						associateWithSemanticElement();
            	      						current = true;
            	      					}
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop183;
                }
            } while (true);
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==KW_ELSE) ) {
                alt184=1;
            }
            switch (alt184) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getRichStringIf_ELSEKeyword_5_0ElementType());
                      			
                    }
                    otherlv_5=(Token)match(input,KW_ELSE,FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_5);
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getRichStringIf_ElseInternalRichStringParserRuleCall_5_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_87);
                    lv_else_6_0=ruleInternalRichString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringIf_ENDIFKeyword_6ElementType());
              		
            }
            otherlv_7=(Token)match(input,KW_ENDIF,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_7);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleRichStringElseIf() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleRichStringElseIf = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getRichStringElseIfElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRichStringElseIf=ruleRichStringElseIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRichStringElseIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleRichStringElseIf() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Boolean lv_if_1_0 = null;

        Boolean lv_then_2_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getRichStringElseIf_ELSEIFKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_ELSEIF,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringElseIf_IfXExpressionParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_84);
            lv_if_1_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getRichStringElseIf_ThenInternalRichStringParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_then_2_0=ruleInternalRichString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXAnnotation() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXAnnotation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotation=ruleXAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXAnnotation() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Boolean lv_elementValuePairs_4_0 = null;

        Boolean lv_elementValuePairs_6_0 = null;

        Boolean lv_value_7_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXAnnotation_XAnnotationAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXAnnotation_CommercialAtKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_CommercialAt,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					if (!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXAnnotation_AnnotationTypeJvmAnnotationTypeCrossReference_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_88);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }
            int alt187=2;
            alt187 = dfa187.predict(input);
            switch (alt187) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXAnnotation_LeftParenthesisKeyword_3_0ElementType());
                      				
                    }
                    otherlv_3=(Token)match(input,KW_LeftParenthesis,FOLLOW_89); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_3);
                      				
                    }

                    }
                    int alt186=3;
                    alt186 = dfa186.predict(input);
                    switch (alt186) {
                        case 1 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXAnnotation_ElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_28);
                            lv_elementValuePairs_4_0=ruleXAnnotationElementValuePair();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop185:
                            do {
                                int alt185=2;
                                int LA185_0 = input.LA(1);

                                if ( (LA185_0==KW_Comma) ) {
                                    alt185=1;
                                }


                                switch (alt185) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getXAnnotation_CommaKeyword_3_1_0_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_5=(Token)match(input,KW_Comma,FOLLOW_3); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_5);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getXAnnotation_ElementValuePairsXAnnotationElementValuePairParserRuleCall_3_1_0_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_elementValuePairs_6_0=ruleXAnnotationElementValuePair();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop185;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXAnnotation_ValueXAnnotationElementValueOrCommaListParserRuleCall_3_1_1_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_64);
                            lv_value_7_0=ruleXAnnotationElementValueOrCommaList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXAnnotation_RightParenthesisKeyword_3_2ElementType());
                      			
                    }
                    otherlv_8=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_8);
                      			
                    }

                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXAnnotationElementValuePair() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXAnnotationElementValuePair = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationElementValuePairElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValuePair=ruleXAnnotationElementValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXAnnotationElementValuePair() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Boolean lv_value_2_0 = null;


        try {
            {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              							if (!current) {
              								associateWithSemanticElement();
              								current = true;
              							}
              						
            }
            if ( state.backtracking==0 ) {

              							markComposite(elementTypeProvider.getXAnnotationElementValuePair_ElementJvmOperationCrossReference_0_0_0_0ElementType());
              						
            }
            pushFollow(FOLLOW_58);
            ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							doneComposite();
              						
            }

            }


            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXAnnotationElementValuePair_EqualsSignKeyword_0_0_1ElementType());
              				
            }
            otherlv_1=(Token)match(input,KW_EqualsSign,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_1);
              				
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXAnnotationElementValuePair_ValueXAnnotationElementValueParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXAnnotationElementValueOrCommaList() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXAnnotationElementValueOrCommaList = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaListElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValueOrCommaList=ruleXAnnotationElementValueOrCommaList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValueOrCommaList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXAnnotationElementValueOrCommaList() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Boolean lv_elements_3_0 = null;

        Boolean lv_elements_5_0 = null;

        Boolean this_XAnnotationOrExpression_7 = null;

        Boolean lv_elements_10_0 = null;


        try {
            {
            int alt192=2;
            alt192 = dfa192.predict(input);
            switch (alt192) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							precedeComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_XListLiteralAction_0_0_0_0ElementType());
                      							doneComposite();
                      							associateWithSemanticElement();
                      						
                    }

                    }

                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_NumberSignKeyword_0_0_0_1ElementType());
                      					
                    }
                    otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_1);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_LeftSquareBracketKeyword_0_0_0_2ElementType());
                      					
                    }
                    otherlv_2=(Token)match(input,KW_LeftSquareBracket,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_2);
                      					
                    }

                    }


                    }
                    int alt189=2;
                    int LA189_0 = input.LA(1);

                    if ( (LA189_0==KW_Package||(LA189_0>=KW_Class && LA189_0<=KW_LessThanSign)||(LA189_0>=KW_Extends && LA189_0<=KW_LeftCurlyBracket)||(LA189_0>=KW_Interface && LA189_0<=KW_LeftParenthesis)||(LA189_0>=KW_Extension && LA189_0<=KW_New)||(LA189_0>=KW_Public && LA189_0<=KW_Transient)||(LA189_0>=KW_Def && LA189_0<=KW_Create)||(LA189_0>=KW_AFTER && LA189_0<=KW_Import)||LA189_0==KW_Try||LA189_0==KW_Switch||(LA189_0>=KW_CommercialAt && LA189_0<=KW_LeftSquareBracket)||(LA189_0>=KW_PlusSign && LA189_0<=KW_HyphenMinus)||LA189_0==KW_ExclamationMark||LA189_0==KW_If||(LA189_0>=KW_For && LA189_0<=KW_Return)||(LA189_0>=RULE_ID && LA189_0<=RULE_RICH_TEXT_START)||(LA189_0>=RULE_HEX && LA189_0<=RULE_DECIMAL)) ) {
                        alt189=1;
                    }
                    switch (alt189) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_ElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_91);
                            lv_elements_3_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }
                            loop188:
                            do {
                                int alt188=2;
                                int LA188_0 = input.LA(1);

                                if ( (LA188_0==KW_Comma) ) {
                                    alt188=1;
                                }


                                switch (alt188) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_CommaKeyword_0_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_34); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_4);
                            	      					
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_ElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_91);
                            	    lv_elements_5_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      								if(!current) {
                            	      									associateWithSemanticElement();
                            	      									current = true;
                            	      								}
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop188;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_RightSquareBracketKeyword_0_2ElementType());
                      			
                    }
                    otherlv_6=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_6);
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_XAnnotationOrExpressionParserRuleCall_1_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_92);
                    this_XAnnotationOrExpression_7=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XAnnotationOrExpression_7;
                      				doneComposite();
                      			
                    }
                    int alt191=2;
                    int LA191_0 = input.LA(1);

                    if ( (LA191_0==KW_Comma) ) {
                        alt191=1;
                    }
                    switch (alt191) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {

                              						precedeComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_XListLiteralElementsAction_1_1_0ElementType());
                              						doneComposite();
                              						associateWithSemanticElement();
                              					
                            }

                            }
                            int cnt190=0;
                            loop190:
                            do {
                                int alt190=2;
                                int LA190_0 = input.LA(1);

                                if ( (LA190_0==KW_Comma) ) {
                                    alt190=1;
                                }


                                switch (alt190) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXAnnotationElementValueOrCommaList_CommaKeyword_1_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_9=(Token)match(input,KW_Comma,FOLLOW_34); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_9);
                            	      					
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXAnnotationElementValueOrCommaList_ElementsXAnnotationOrExpressionParserRuleCall_1_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_92);
                            	    lv_elements_10_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      								if(!current) {
                            	      									associateWithSemanticElement();
                            	      									current = true;
                            	      								}
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    if ( cnt190 >= 1 ) break loop190;
                            	    if (state.backtracking>0) {state.failed=true; return current;}
                                        EarlyExitException eee =
                                            new EarlyExitException(190, input);
                                        throw eee;
                                }
                                cnt190++;
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXAnnotationElementValue() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXAnnotationElementValue = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationElementValueElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationElementValue=ruleXAnnotationElementValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationElementValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXAnnotationElementValue() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Boolean lv_elements_3_0 = null;

        Boolean lv_elements_5_0 = null;

        Boolean this_XAnnotationOrExpression_7 = null;


        try {
            {
            int alt195=2;
            alt195 = dfa195.predict(input);
            switch (alt195) {
                case 1 :
                    {
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							precedeComposite(elementTypeProvider.getXAnnotationElementValue_XListLiteralAction_0_0_0_0ElementType());
                      							doneComposite();
                      							associateWithSemanticElement();
                      						
                    }

                    }

                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXAnnotationElementValue_NumberSignKeyword_0_0_0_1ElementType());
                      					
                    }
                    otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_1);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXAnnotationElementValue_LeftSquareBracketKeyword_0_0_0_2ElementType());
                      					
                    }
                    otherlv_2=(Token)match(input,KW_LeftSquareBracket,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(otherlv_2);
                      					
                    }

                    }


                    }
                    int alt194=2;
                    int LA194_0 = input.LA(1);

                    if ( (LA194_0==KW_Package||(LA194_0>=KW_Class && LA194_0<=KW_LessThanSign)||(LA194_0>=KW_Extends && LA194_0<=KW_LeftCurlyBracket)||(LA194_0>=KW_Interface && LA194_0<=KW_LeftParenthesis)||(LA194_0>=KW_Extension && LA194_0<=KW_New)||(LA194_0>=KW_Public && LA194_0<=KW_Transient)||(LA194_0>=KW_Def && LA194_0<=KW_Create)||(LA194_0>=KW_AFTER && LA194_0<=KW_Import)||LA194_0==KW_Try||LA194_0==KW_Switch||(LA194_0>=KW_CommercialAt && LA194_0<=KW_LeftSquareBracket)||(LA194_0>=KW_PlusSign && LA194_0<=KW_HyphenMinus)||LA194_0==KW_ExclamationMark||LA194_0==KW_If||(LA194_0>=KW_For && LA194_0<=KW_Return)||(LA194_0>=RULE_ID && LA194_0<=RULE_RICH_TEXT_START)||(LA194_0>=RULE_HEX && LA194_0<=RULE_DECIMAL)) ) {
                        alt194=1;
                    }
                    switch (alt194) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXAnnotationElementValue_ElementsXAnnotationOrExpressionParserRuleCall_0_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_91);
                            lv_elements_3_0=ruleXAnnotationOrExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }
                            loop193:
                            do {
                                int alt193=2;
                                int LA193_0 = input.LA(1);

                                if ( (LA193_0==KW_Comma) ) {
                                    alt193=1;
                                }


                                switch (alt193) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXAnnotationElementValue_CommaKeyword_0_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_34); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_4);
                            	      					
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXAnnotationElementValue_ElementsXAnnotationOrExpressionParserRuleCall_0_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_91);
                            	    lv_elements_5_0=ruleXAnnotationOrExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      								if(!current) {
                            	      									associateWithSemanticElement();
                            	      									current = true;
                            	      								}
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop193;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXAnnotationElementValue_RightSquareBracketKeyword_0_2ElementType());
                      			
                    }
                    otherlv_6=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_6);
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXAnnotationElementValue_XAnnotationOrExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotationOrExpression_7=ruleXAnnotationOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotationOrExpression_7;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXAnnotationOrExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXAnnotationOrExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAnnotationOrExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAnnotationOrExpression=ruleXAnnotationOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAnnotationOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXAnnotationOrExpression() throws RecognitionException {
        Boolean current = false;

        Boolean this_XAnnotation_0 = null;

        Boolean this_XExpression_1 = null;


        try {
            {
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==KW_CommercialAt) ) {
                alt196=1;
            }
            else if ( (LA196_0==KW_Package||(LA196_0>=KW_Class && LA196_0<=KW_LessThanSign)||(LA196_0>=KW_Extends && LA196_0<=KW_LeftCurlyBracket)||(LA196_0>=KW_Interface && LA196_0<=KW_LeftParenthesis)||(LA196_0>=KW_Extension && LA196_0<=KW_New)||(LA196_0>=KW_Public && LA196_0<=KW_Transient)||(LA196_0>=KW_Def && LA196_0<=KW_Create)||(LA196_0>=KW_AFTER && LA196_0<=KW_Import)||LA196_0==KW_Try||LA196_0==KW_Switch||(LA196_0>=KW_NumberSign && LA196_0<=KW_LeftSquareBracket)||(LA196_0>=KW_PlusSign && LA196_0<=KW_HyphenMinus)||LA196_0==KW_ExclamationMark||LA196_0==KW_If||(LA196_0>=KW_For && LA196_0<=KW_Return)||(LA196_0>=RULE_ID && LA196_0<=RULE_RICH_TEXT_START)||(LA196_0>=RULE_HEX && LA196_0<=RULE_DECIMAL)) ) {
                alt196=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 196, 0, input);

                throw nvae;
            }
            switch (alt196) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXAnnotationOrExpression_XAnnotationParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XAnnotation_0=ruleXAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XAnnotation_0;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXAnnotationOrExpression_XExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpression=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXExpression() throws RecognitionException {
        Boolean current = false;

        Boolean this_XAssignment_0 = null;


        try {
            {
            if ( state.backtracking==0 ) {

              		markComposite(elementTypeProvider.getXExpression_XAssignmentParserRuleCallElementType());
              	
            }
            pushFollow(FOLLOW_2);
            this_XAssignment_0=ruleXAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_XAssignment_0;
              		doneComposite();
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpSingleAssign() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpSingleAssign = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpSingleAssignElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpSingleAssign=ruleOpSingleAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpSingleAssign; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpSingleAssign() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            if ( state.backtracking==0 ) {

              		markLeaf(elementTypeProvider.getOpSingleAssign_EqualsSignKeywordElementType());
              	
            }
            kw=(Token)match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		doneLeaf(kw);
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpMultiAssign() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpMultiAssign = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpMultiAssignElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMultiAssign=ruleOpMultiAssign();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMultiAssign; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpMultiAssign() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt198=7;
            switch ( input.LA(1) ) {
            case KW_PlusSignEqualsSign:
                {
                alt198=1;
                }
                break;
            case KW_HyphenMinusEqualsSign:
                {
                alt198=2;
                }
                break;
            case KW_AsteriskEqualsSign:
                {
                alt198=3;
                }
                break;
            case KW_SolidusEqualsSign:
                {
                alt198=4;
                }
                break;
            case KW_PercentSignEqualsSign:
                {
                alt198=5;
                }
                break;
            case KW_LessThanSign:
                {
                alt198=6;
                }
                break;
            case KW_GreaterThanSign:
                {
                alt198=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 198, 0, input);

                throw nvae;
            }

            switch (alt198) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_PlusSignEqualsSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PlusSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_HyphenMinusEqualsSignKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_AsteriskEqualsSignKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_AsteriskEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_SolidusEqualsSignKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_SolidusEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMultiAssign_PercentSignEqualsSignKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PercentSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_LessThanSignKeyword_5_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_LessThanSignKeyword_5_1ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_EqualsSignKeyword_5_2ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_GreaterThanSignKeyword_6_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==KW_GreaterThanSign) ) {
                        alt197=1;
                    }
                    switch (alt197) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getOpMultiAssign_GreaterThanSignKeyword_6_1ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpMultiAssign_GreaterThanSignEqualsSignKeyword_6_2ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }

                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXOrExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXOrExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXOrExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpression=ruleXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXOrExpression() throws RecognitionException {
        Boolean current = false;

        Boolean this_XAndExpression_0 = null;

        Boolean lv_rightOperand_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXOrExpression_XAndExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_95);
            this_XAndExpression_0=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAndExpression_0;
              			doneComposite();
              		
            }
            loop199:
            do {
                int alt199=2;
                int LA199_0 = input.LA(1);

                if ( (LA199_0==KW_VerticalLineVerticalLine) ) {
                    int LA199_2 = input.LA(2);

                    if ( (synpred34_PsiInternalXtend()) ) {
                        alt199=1;
                    }


                }


                switch (alt199) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXOrExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      							associateWithSemanticElement();
            	      						
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (!current) {
            	      									associateWithSemanticElement();
            	      									current = true;
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXOrExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_34);
            	    ruleOpOr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXOrExpression_RightOperandXAndExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_95);
            	    lv_rightOperand_3_0=ruleXAndExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      						if(!current) {
            	      							associateWithSemanticElement();
            	      							current = true;
            	      						}
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop199;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpOr() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpOr = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpOrElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOr=ruleOpOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpOr() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            if ( state.backtracking==0 ) {

              		markLeaf(elementTypeProvider.getOpOr_VerticalLineVerticalLineKeywordElementType());
              	
            }
            kw=(Token)match(input,KW_VerticalLineVerticalLine,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		doneLeaf(kw);
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXAndExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXAndExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAndExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAndExpression=ruleXAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAndExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXAndExpression() throws RecognitionException {
        Boolean current = false;

        Boolean this_XEqualityExpression_0 = null;

        Boolean lv_rightOperand_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXAndExpression_XEqualityExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_96);
            this_XEqualityExpression_0=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XEqualityExpression_0;
              			doneComposite();
              		
            }
            loop200:
            do {
                int alt200=2;
                int LA200_0 = input.LA(1);

                if ( (LA200_0==KW_AmpersandAmpersand) ) {
                    int LA200_2 = input.LA(2);

                    if ( (synpred35_PsiInternalXtend()) ) {
                        alt200=1;
                    }


                }


                switch (alt200) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXAndExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      							associateWithSemanticElement();
            	      						
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (!current) {
            	      									associateWithSemanticElement();
            	      									current = true;
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXAndExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_34);
            	    ruleOpAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXAndExpression_RightOperandXEqualityExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_96);
            	    lv_rightOperand_3_0=ruleXEqualityExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      						if(!current) {
            	      							associateWithSemanticElement();
            	      							current = true;
            	      						}
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop200;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpAnd() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpAnd = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpAndElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAnd=ruleOpAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpAnd() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            if ( state.backtracking==0 ) {

              		markLeaf(elementTypeProvider.getOpAnd_AmpersandAmpersandKeywordElementType());
              	
            }
            kw=(Token)match(input,KW_AmpersandAmpersand,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		doneLeaf(kw);
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXEqualityExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXEqualityExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXEqualityExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXEqualityExpression=ruleXEqualityExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXEqualityExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXEqualityExpression() throws RecognitionException {
        Boolean current = false;

        Boolean this_XRelationalExpression_0 = null;

        Boolean lv_rightOperand_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXEqualityExpression_XRelationalExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_97);
            this_XRelationalExpression_0=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XRelationalExpression_0;
              			doneComposite();
              		
            }
            loop201:
            do {
                int alt201=2;
                switch ( input.LA(1) ) {
                case KW_EqualsSignEqualsSign:
                    {
                    int LA201_2 = input.LA(2);

                    if ( (synpred36_PsiInternalXtend()) ) {
                        alt201=1;
                    }


                    }
                    break;
                case KW_ExclamationMarkEqualsSign:
                    {
                    int LA201_3 = input.LA(2);

                    if ( (synpred36_PsiInternalXtend()) ) {
                        alt201=1;
                    }


                    }
                    break;
                case KW_EqualsSignEqualsSignEqualsSign:
                    {
                    int LA201_4 = input.LA(2);

                    if ( (synpred36_PsiInternalXtend()) ) {
                        alt201=1;
                    }


                    }
                    break;
                case KW_ExclamationMarkEqualsSignEqualsSign:
                    {
                    int LA201_5 = input.LA(2);

                    if ( (synpred36_PsiInternalXtend()) ) {
                        alt201=1;
                    }


                    }
                    break;

                }

                switch (alt201) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXEqualityExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      							associateWithSemanticElement();
            	      						
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (!current) {
            	      									associateWithSemanticElement();
            	      									current = true;
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXEqualityExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_34);
            	    ruleOpEquality();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXEqualityExpression_RightOperandXRelationalExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_rightOperand_3_0=ruleXRelationalExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      						if(!current) {
            	      							associateWithSemanticElement();
            	      							current = true;
            	      						}
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop201;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpEquality() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpEquality = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpEqualityElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpEquality=ruleOpEquality();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpEquality; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpEquality() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt202=4;
            switch ( input.LA(1) ) {
            case KW_EqualsSignEqualsSign:
                {
                alt202=1;
                }
                break;
            case KW_ExclamationMarkEqualsSign:
                {
                alt202=2;
                }
                break;
            case KW_EqualsSignEqualsSignEqualsSign:
                {
                alt202=3;
                }
                break;
            case KW_ExclamationMarkEqualsSignEqualsSign:
                {
                alt202=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 202, 0, input);

                throw nvae;
            }

            switch (alt202) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpEquality_EqualsSignEqualsSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_EqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpEquality_ExclamationMarkEqualsSignKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_ExclamationMarkEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpEquality_EqualsSignEqualsSignEqualsSignKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_EqualsSignEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpEquality_ExclamationMarkEqualsSignEqualsSignKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_ExclamationMarkEqualsSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXRelationalExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXRelationalExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXRelationalExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXRelationalExpression=ruleXRelationalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXRelationalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXRelationalExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_2=null;
        Boolean this_XOtherOperatorExpression_0 = null;

        Boolean lv_type_3_0 = null;

        Boolean lv_rightOperand_6_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXRelationalExpression_XOtherOperatorExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_98);
            this_XOtherOperatorExpression_0=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XOtherOperatorExpression_0;
              			doneComposite();
              		
            }
            loop203:
            do {
                int alt203=3;
                switch ( input.LA(1) ) {
                case KW_LessThanSign:
                    {
                    int LA203_2 = input.LA(2);

                    if ( (synpred38_PsiInternalXtend()) ) {
                        alt203=2;
                    }


                    }
                    break;
                case KW_GreaterThanSign:
                    {
                    int LA203_3 = input.LA(2);

                    if ( (synpred38_PsiInternalXtend()) ) {
                        alt203=2;
                    }


                    }
                    break;
                case KW_Instanceof:
                    {
                    int LA203_4 = input.LA(2);

                    if ( (synpred37_PsiInternalXtend()) ) {
                        alt203=1;
                    }


                    }
                    break;
                case KW_GreaterThanSignEqualsSign:
                    {
                    int LA203_5 = input.LA(2);

                    if ( (synpred38_PsiInternalXtend()) ) {
                        alt203=2;
                    }


                    }
                    break;

                }

                switch (alt203) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getXRelationalExpression_XInstanceOfExpressionExpressionAction_1_0_0_0_0ElementType());
            	      								doneComposite();
            	      								associateWithSemanticElement();
            	      							
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      							markLeaf(elementTypeProvider.getXRelationalExpression_InstanceofKeyword_1_0_0_0_1ElementType());
            	      						
            	    }
            	    otherlv_2=(Token)match(input,KW_Instanceof,FOLLOW_29); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneLeaf(otherlv_2);
            	      						
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXRelationalExpression_TypeJvmTypeReferenceParserRuleCall_1_0_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      							if(!current) {
            	      								associateWithSemanticElement();
            	      								current = true;
            	      							}
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    {
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getXRelationalExpression_XBinaryOperationLeftOperandAction_1_1_0_0_0ElementType());
            	      								doneComposite();
            	      								associateWithSemanticElement();
            	      							
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (!current) {
            	      										associateWithSemanticElement();
            	      										current = true;
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									markComposite(elementTypeProvider.getXRelationalExpression_FeatureJvmIdentifiableElementCrossReference_1_1_0_0_1_0ElementType());
            	      								
            	    }
            	    pushFollow(FOLLOW_34);
            	    ruleOpCompare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									doneComposite();
            	      								
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXRelationalExpression_RightOperandXOtherOperatorExpressionParserRuleCall_1_1_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_rightOperand_6_0=ruleXOtherOperatorExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      							if(!current) {
            	      								associateWithSemanticElement();
            	      								current = true;
            	      							}
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop203;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpCompare() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpCompare = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpCompareElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpCompare=ruleOpCompare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpCompare; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpCompare() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt204=4;
            switch ( input.LA(1) ) {
            case KW_GreaterThanSignEqualsSign:
                {
                alt204=1;
                }
                break;
            case KW_LessThanSign:
                {
                int LA204_2 = input.LA(2);

                if ( (LA204_2==EOF||LA204_2==KW_Package||(LA204_2>=KW_Class && LA204_2<=KW_LessThanSign)||(LA204_2>=KW_Extends && LA204_2<=KW_LeftCurlyBracket)||(LA204_2>=KW_Interface && LA204_2<=KW_LeftParenthesis)||(LA204_2>=KW_Extension && LA204_2<=KW_New)||(LA204_2>=KW_Public && LA204_2<=KW_Transient)||(LA204_2>=KW_Def && LA204_2<=KW_Create)||(LA204_2>=KW_AFTER && LA204_2<=KW_Import)||LA204_2==KW_Try||LA204_2==KW_Switch||(LA204_2>=KW_NumberSign && LA204_2<=KW_LeftSquareBracket)||(LA204_2>=KW_PlusSign && LA204_2<=KW_HyphenMinus)||LA204_2==KW_ExclamationMark||LA204_2==KW_If||(LA204_2>=KW_For && LA204_2<=KW_Return)||(LA204_2>=RULE_ID && LA204_2<=RULE_RICH_TEXT_START)||(LA204_2>=RULE_HEX && LA204_2<=RULE_DECIMAL)) ) {
                    alt204=4;
                }
                else if ( (LA204_2==KW_EqualsSign) ) {
                    alt204=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 204, 2, input);

                    throw nvae;
                }
                }
                break;
            case KW_GreaterThanSign:
                {
                alt204=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 204, 0, input);

                throw nvae;
            }

            switch (alt204) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpCompare_GreaterThanSignEqualsSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpCompare_LessThanSignKeyword_1_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpCompare_EqualsSignKeyword_1_1ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpCompare_GreaterThanSignKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpCompare_LessThanSignKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXOtherOperatorExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXOtherOperatorExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXOtherOperatorExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOtherOperatorExpression=ruleXOtherOperatorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOtherOperatorExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXOtherOperatorExpression() throws RecognitionException {
        Boolean current = false;

        Boolean this_XAdditiveExpression_0 = null;

        Boolean lv_rightOperand_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXOtherOperatorExpression_XAdditiveExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_99);
            this_XAdditiveExpression_0=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XAdditiveExpression_0;
              			doneComposite();
              		
            }
            loop205:
            do {
                int alt205=2;
                alt205 = dfa205.predict(input);
                switch (alt205) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXOtherOperatorExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      							associateWithSemanticElement();
            	      						
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (!current) {
            	      									associateWithSemanticElement();
            	      									current = true;
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXOtherOperatorExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_34);
            	    ruleOpOther();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXOtherOperatorExpression_RightOperandXAdditiveExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_rightOperand_3_0=ruleXAdditiveExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      						if(!current) {
            	      							associateWithSemanticElement();
            	      							current = true;
            	      						}
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop205;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpOther() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpOther = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpOtherElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpOther=ruleOpOther();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpOther; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpOther() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt208=9;
            alt208 = dfa208.predict(input);
            switch (alt208) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_HyphenMinusGreaterThanSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinusGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_FullStopFullStopLessThanSignKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_FullStopFullStopLessThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_2_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpOther_FullStopFullStopKeyword_2_1ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_FullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_FullStopFullStopKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_FullStopFullStop,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_EqualsSignGreaterThanSignKeyword_4ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 6 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_5_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_101); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    int alt206=2;
                    int LA206_0 = input.LA(1);

                    if ( (LA206_0==KW_GreaterThanSign) ) {
                        int LA206_1 = input.LA(2);

                        if ( (LA206_1==EOF||LA206_1==KW_Package||(LA206_1>=KW_Class && LA206_1<=KW_LessThanSign)||(LA206_1>=KW_Extends && LA206_1<=KW_LeftCurlyBracket)||(LA206_1>=KW_Interface && LA206_1<=KW_LeftParenthesis)||(LA206_1>=KW_Extension && LA206_1<=KW_New)||(LA206_1>=KW_Public && LA206_1<=KW_Transient)||(LA206_1>=KW_Def && LA206_1<=KW_Create)||(LA206_1>=KW_AFTER && LA206_1<=KW_Import)||LA206_1==KW_Try||LA206_1==KW_Switch||(LA206_1>=KW_NumberSign && LA206_1<=KW_LeftSquareBracket)||(LA206_1>=KW_PlusSign && LA206_1<=KW_HyphenMinus)||LA206_1==KW_ExclamationMark||LA206_1==KW_If||(LA206_1>=KW_For && LA206_1<=KW_Return)||(LA206_1>=RULE_ID && LA206_1<=RULE_RICH_TEXT_START)||(LA206_1>=RULE_HEX && LA206_1<=RULE_DECIMAL)) ) {
                            alt206=2;
                        }
                        else if ( (LA206_1==KW_GreaterThanSign) && (synpred40_PsiInternalXtend())) {
                            alt206=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 206, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 206, 0, input);

                        throw nvae;
                    }
                    switch (alt206) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_5_1_0_0_0ElementType());
                              						
                            }
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(kw);
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_5_1_0_0_1ElementType());
                              						
                            }
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(kw);
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getOpOther_GreaterThanSignKeyword_5_1_1ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 7 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getOpOther_LessThanSignKeyword_6_0ElementType());
                      			
                    }
                    kw=(Token)match(input,KW_LessThanSign,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(kw);
                      			
                    }
                    int alt207=3;
                    int LA207_0 = input.LA(1);

                    if ( (LA207_0==KW_LessThanSign) ) {
                        int LA207_1 = input.LA(2);

                        if ( (synpred41_PsiInternalXtend()) ) {
                            alt207=1;
                        }
                        else if ( (true) ) {
                            alt207=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 207, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA207_0==KW_EqualsSignGreaterThanSign) ) {
                        alt207=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 207, 0, input);

                        throw nvae;
                    }
                    switch (alt207) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getOpOther_LessThanSignKeyword_6_1_0_0_0ElementType());
                              						
                            }
                            kw=(Token)match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(kw);
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getOpOther_LessThanSignKeyword_6_1_0_0_1ElementType());
                              						
                            }
                            kw=(Token)match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(kw);
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getOpOther_LessThanSignKeyword_6_1_1ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }

                            }
                            break;
                        case 3 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getOpOther_EqualsSignGreaterThanSignKeyword_6_1_2ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 8 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_LessThanSignGreaterThanSignKeyword_7ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpOther_QuestionMarkColonKeyword_8ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_QuestionMarkColon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXAdditiveExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXAdditiveExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXAdditiveExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXAdditiveExpression=ruleXAdditiveExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXAdditiveExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXAdditiveExpression() throws RecognitionException {
        Boolean current = false;

        Boolean this_XMultiplicativeExpression_0 = null;

        Boolean lv_rightOperand_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXAdditiveExpression_XMultiplicativeExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_103);
            this_XMultiplicativeExpression_0=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMultiplicativeExpression_0;
              			doneComposite();
              		
            }
            loop209:
            do {
                int alt209=2;
                int LA209_0 = input.LA(1);

                if ( (LA209_0==KW_PlusSign) ) {
                    int LA209_2 = input.LA(2);

                    if ( (synpred42_PsiInternalXtend()) ) {
                        alt209=1;
                    }


                }
                else if ( (LA209_0==KW_HyphenMinus) ) {
                    int LA209_3 = input.LA(2);

                    if ( (synpred42_PsiInternalXtend()) ) {
                        alt209=1;
                    }


                }


                switch (alt209) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXAdditiveExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      							associateWithSemanticElement();
            	      						
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (!current) {
            	      									associateWithSemanticElement();
            	      									current = true;
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXAdditiveExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_34);
            	    ruleOpAdd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXAdditiveExpression_RightOperandXMultiplicativeExpressionParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_rightOperand_3_0=ruleXMultiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      						if(!current) {
            	      							associateWithSemanticElement();
            	      							current = true;
            	      						}
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop209;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpAdd() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpAdd = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpAddElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpAdd=ruleOpAdd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpAdd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpAdd() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt210=2;
            int LA210_0 = input.LA(1);

            if ( (LA210_0==KW_PlusSign) ) {
                alt210=1;
            }
            else if ( (LA210_0==KW_HyphenMinus) ) {
                alt210=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 210, 0, input);

                throw nvae;
            }
            switch (alt210) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpAdd_PlusSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpAdd_HyphenMinusKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXMultiplicativeExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXMultiplicativeExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXMultiplicativeExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMultiplicativeExpression=ruleXMultiplicativeExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMultiplicativeExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXMultiplicativeExpression() throws RecognitionException {
        Boolean current = false;

        Boolean this_XUnaryOperation_0 = null;

        Boolean lv_rightOperand_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXMultiplicativeExpression_XUnaryOperationParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_104);
            this_XUnaryOperation_0=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XUnaryOperation_0;
              			doneComposite();
              		
            }
            loop211:
            do {
                int alt211=2;
                switch ( input.LA(1) ) {
                case KW_Asterisk:
                    {
                    int LA211_2 = input.LA(2);

                    if ( (synpred43_PsiInternalXtend()) ) {
                        alt211=1;
                    }


                    }
                    break;
                case KW_AsteriskAsterisk:
                    {
                    int LA211_3 = input.LA(2);

                    if ( (synpred43_PsiInternalXtend()) ) {
                        alt211=1;
                    }


                    }
                    break;
                case KW_Solidus:
                    {
                    int LA211_4 = input.LA(2);

                    if ( (synpred43_PsiInternalXtend()) ) {
                        alt211=1;
                    }


                    }
                    break;
                case KW_PercentSign:
                    {
                    int LA211_5 = input.LA(2);

                    if ( (synpred43_PsiInternalXtend()) ) {
                        alt211=1;
                    }


                    }
                    break;

                }

                switch (alt211) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXMultiplicativeExpression_XBinaryOperationLeftOperandAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      							associateWithSemanticElement();
            	      						
            	    }

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								if (!current) {
            	      									associateWithSemanticElement();
            	      									current = true;
            	      								}
            	      							
            	    }
            	    if ( state.backtracking==0 ) {

            	      								markComposite(elementTypeProvider.getXMultiplicativeExpression_FeatureJvmIdentifiableElementCrossReference_1_0_0_1_0ElementType());
            	      							
            	    }
            	    pushFollow(FOLLOW_34);
            	    ruleOpMulti();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								doneComposite();
            	      							
            	    }

            	    }


            	    }


            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXMultiplicativeExpression_RightOperandXUnaryOperationParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_104);
            	    lv_rightOperand_3_0=ruleXUnaryOperation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      						if(!current) {
            	      							associateWithSemanticElement();
            	      							current = true;
            	      						}
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop211;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpMulti() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpMulti = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpMultiElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpMulti=ruleOpMulti();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpMulti; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpMulti() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt212=4;
            switch ( input.LA(1) ) {
            case KW_Asterisk:
                {
                alt212=1;
                }
                break;
            case KW_AsteriskAsterisk:
                {
                alt212=2;
                }
                break;
            case KW_Solidus:
                {
                alt212=3;
                }
                break;
            case KW_PercentSign:
                {
                alt212=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 212, 0, input);

                throw nvae;
            }

            switch (alt212) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMulti_AsteriskKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Asterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMulti_AsteriskAsteriskKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_AsteriskAsterisk,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMulti_SolidusKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Solidus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpMulti_PercentSignKeyword_3ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PercentSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXUnaryOperation() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXUnaryOperation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXUnaryOperationElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXUnaryOperation=ruleXUnaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXUnaryOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXUnaryOperation() throws RecognitionException {
        Boolean current = false;

        Boolean lv_operand_2_0 = null;

        Boolean this_XCastedExpression_3 = null;


        try {
            {
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( ((LA213_0>=KW_PlusSign && LA213_0<=KW_HyphenMinus)||LA213_0==KW_ExclamationMark) ) {
                alt213=1;
            }
            else if ( (LA213_0==KW_Package||(LA213_0>=KW_Class && LA213_0<=KW_LessThanSign)||(LA213_0>=KW_Extends && LA213_0<=KW_LeftCurlyBracket)||(LA213_0>=KW_Interface && LA213_0<=KW_LeftParenthesis)||(LA213_0>=KW_Extension && LA213_0<=KW_New)||(LA213_0>=KW_Public && LA213_0<=KW_Transient)||(LA213_0>=KW_Def && LA213_0<=KW_Create)||(LA213_0>=KW_AFTER && LA213_0<=KW_Import)||LA213_0==KW_Try||LA213_0==KW_Switch||(LA213_0>=KW_NumberSign && LA213_0<=KW_LeftSquareBracket)||LA213_0==KW_If||(LA213_0>=KW_For && LA213_0<=KW_Return)||(LA213_0>=RULE_ID && LA213_0<=RULE_RICH_TEXT_START)||(LA213_0>=RULE_HEX && LA213_0<=RULE_DECIMAL)) ) {
                alt213=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 213, 0, input);

                throw nvae;
            }
            switch (alt213) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					precedeComposite(elementTypeProvider.getXUnaryOperation_XUnaryOperationAction_0_0ElementType());
                      					doneComposite();
                      					associateWithSemanticElement();
                      				
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXUnaryOperation_FeatureJvmIdentifiableElementCrossReference_0_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    ruleOpUnary();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXUnaryOperation_OperandXUnaryOperationParserRuleCall_0_2_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_operand_2_0=ruleXUnaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXUnaryOperation_XCastedExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCastedExpression_3=ruleXCastedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCastedExpression_3;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpUnary() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpUnary = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpUnaryElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpUnary=ruleOpUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpUnary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpUnary() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt214=3;
            switch ( input.LA(1) ) {
            case KW_ExclamationMark:
                {
                alt214=1;
                }
                break;
            case KW_HyphenMinus:
                {
                alt214=2;
                }
                break;
            case KW_PlusSign:
                {
                alt214=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 214, 0, input);

                throw nvae;
            }

            switch (alt214) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpUnary_ExclamationMarkKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_ExclamationMark,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpUnary_HyphenMinusKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpUnary_PlusSignKeyword_2ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXCastedExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXCastedExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXCastedExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCastedExpression=ruleXCastedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCastedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXCastedExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_2=null;
        Boolean this_XPostfixOperation_0 = null;

        Boolean lv_type_3_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXCastedExpression_XPostfixOperationParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_105);
            this_XPostfixOperation_0=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPostfixOperation_0;
              			doneComposite();
              		
            }
            loop215:
            do {
                int alt215=2;
                int LA215_0 = input.LA(1);

                if ( (LA215_0==KW_As) ) {
                    int LA215_2 = input.LA(2);

                    if ( (synpred44_PsiInternalXtend()) ) {
                        alt215=1;
                    }


                }


                switch (alt215) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							precedeComposite(elementTypeProvider.getXCastedExpression_XCastedExpressionTargetAction_1_0_0_0ElementType());
            	      							doneComposite();
            	      							associateWithSemanticElement();
            	      						
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      						markLeaf(elementTypeProvider.getXCastedExpression_AsKeyword_1_0_0_1ElementType());
            	      					
            	    }
            	    otherlv_2=(Token)match(input,KW_As,FOLLOW_29); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneLeaf(otherlv_2);
            	      					
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXCastedExpression_TypeJvmTypeReferenceParserRuleCall_1_1_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_type_3_0=ruleJvmTypeReference();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      						if(!current) {
            	      							associateWithSemanticElement();
            	      							current = true;
            	      						}
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop215;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXPostfixOperation() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXPostfixOperation = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXPostfixOperationElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPostfixOperation=ruleXPostfixOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPostfixOperation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXPostfixOperation() throws RecognitionException {
        Boolean current = false;

        Boolean this_XMemberFeatureCall_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXPostfixOperation_XMemberFeatureCallParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_106);
            this_XMemberFeatureCall_0=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XMemberFeatureCall_0;
              			doneComposite();
              		
            }
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==KW_PlusSignPlusSign) ) {
                int LA216_1 = input.LA(2);

                if ( (synpred45_PsiInternalXtend()) ) {
                    alt216=1;
                }
            }
            else if ( (LA216_0==KW_HyphenMinusHyphenMinus) ) {
                int LA216_2 = input.LA(2);

                if ( (synpred45_PsiInternalXtend()) ) {
                    alt216=1;
                }
            }
            switch (alt216) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						precedeComposite(elementTypeProvider.getXPostfixOperation_XPostfixOperationOperandAction_1_0_0ElementType());
                      						doneComposite();
                      						associateWithSemanticElement();
                      					
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							if (!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXPostfixOperation_FeatureJvmIdentifiableElementCrossReference_1_0_1_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    ruleOpPostfix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleOpPostfix() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleOpPostfix = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getOpPostfixElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpPostfix=ruleOpPostfix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpPostfix; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleOpPostfix() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==KW_PlusSignPlusSign) ) {
                alt217=1;
            }
            else if ( (LA217_0==KW_HyphenMinusHyphenMinus) ) {
                alt217=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;
            }
            switch (alt217) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpPostfix_PlusSignPlusSignKeyword_0ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_PlusSignPlusSign,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getOpPostfix_HyphenMinusHyphenMinusKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_HyphenMinusHyphenMinus,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXMemberFeatureCall() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXMemberFeatureCall = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXMemberFeatureCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXMemberFeatureCall=ruleXMemberFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXMemberFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXMemberFeatureCall() throws RecognitionException {
        Boolean current = false;

        Token otherlv_2=null;
        Token lv_explicitStatic_3_0=null;
        Token otherlv_8=null;
        Token lv_nullSafe_9_0=null;
        Token lv_explicitStatic_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token lv_explicitOperationCall_17_0=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Boolean this_XPrimaryExpression_0 = null;

        Boolean lv_value_6_0 = null;

        Boolean lv_typeArguments_12_0 = null;

        Boolean lv_typeArguments_14_0 = null;

        Boolean lv_memberCallArguments_18_0 = null;

        Boolean lv_memberCallArguments_19_0 = null;

        Boolean lv_memberCallArguments_21_0 = null;

        Boolean lv_memberCallArguments_23_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXMemberFeatureCall_XPrimaryExpressionParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_107);
            this_XPrimaryExpression_0=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XPrimaryExpression_0;
              			doneComposite();
              		
            }
            loop226:
            do {
                int alt226=3;
                switch ( input.LA(1) ) {
                case KW_FullStop:
                    {
                    int LA226_2 = input.LA(2);

                    if ( (synpred46_PsiInternalXtend()) ) {
                        alt226=1;
                    }
                    else if ( (synpred47_PsiInternalXtend()) ) {
                        alt226=2;
                    }


                    }
                    break;
                case KW_ColonColon:
                    {
                    int LA226_3 = input.LA(2);

                    if ( (synpred46_PsiInternalXtend()) ) {
                        alt226=1;
                    }
                    else if ( (synpred47_PsiInternalXtend()) ) {
                        alt226=2;
                    }


                    }
                    break;
                case KW_QuestionMarkFullStop:
                    {
                    int LA226_4 = input.LA(2);

                    if ( (synpred47_PsiInternalXtend()) ) {
                        alt226=2;
                    }


                    }
                    break;

                }

                switch (alt226) {
            	case 1 :
            	    {
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getXMemberFeatureCall_XAssignmentAssignableAction_1_0_0_0_0ElementType());
            	      								doneComposite();
            	      								associateWithSemanticElement();
            	      							
            	    }

            	    }
            	    int alt218=2;
            	    int LA218_0 = input.LA(1);

            	    if ( (LA218_0==KW_FullStop) ) {
            	        alt218=1;
            	    }
            	    else if ( (LA218_0==KW_ColonColon) ) {
            	        alt218=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 218, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt218) {
            	        case 1 :
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markLeaf(elementTypeProvider.getXMemberFeatureCall_FullStopKeyword_1_0_0_0_1_0ElementType());
            	              							
            	            }
            	            otherlv_2=(Token)match(input,KW_FullStop,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								doneLeaf(otherlv_2);
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            {
            	            {
            	            if ( state.backtracking==0 ) {

            	              										markLeaf(elementTypeProvider.getXMemberFeatureCall_ExplicitStaticColonColonKeyword_1_0_0_0_1_1_0ElementType());
            	              									
            	            }
            	            lv_explicitStatic_3_0=(Token)match(input,KW_ColonColon,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										doneLeaf(lv_explicitStatic_3_0);
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (!current) {
            	              											associateWithSemanticElement();
            	              											current = true;
            	              										}
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      									if (!current) {
            	      										associateWithSemanticElement();
            	      										current = true;
            	      									}
            	      								
            	    }
            	    if ( state.backtracking==0 ) {

            	      									markComposite(elementTypeProvider.getXMemberFeatureCall_FeatureJvmIdentifiableElementCrossReference_1_0_0_0_2_0ElementType());
            	      								
            	    }
            	    pushFollow(FOLLOW_58);
            	    ruleFeatureCallID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									doneComposite();
            	      								
            	    }

            	    }


            	    }

            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXMemberFeatureCall_OpSingleAssignParserRuleCall_1_0_0_0_3ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_34);
            	    ruleOpSingleAssign();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXMemberFeatureCall_ValueXAssignmentParserRuleCall_1_0_1_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_value_6_0=ruleXAssignment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      							if(!current) {
            	      								associateWithSemanticElement();
            	      								current = true;
            	      							}
            	      						
            	    }

            	    }


            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    {
            	    {
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      								precedeComposite(elementTypeProvider.getXMemberFeatureCall_XMemberFeatureCallMemberCallTargetAction_1_1_0_0_0ElementType());
            	      								doneComposite();
            	      								associateWithSemanticElement();
            	      							
            	    }

            	    }
            	    int alt219=3;
            	    switch ( input.LA(1) ) {
            	    case KW_FullStop:
            	        {
            	        alt219=1;
            	        }
            	        break;
            	    case KW_QuestionMarkFullStop:
            	        {
            	        alt219=2;
            	        }
            	        break;
            	    case KW_ColonColon:
            	        {
            	        alt219=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 219, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt219) {
            	        case 1 :
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markLeaf(elementTypeProvider.getXMemberFeatureCall_FullStopKeyword_1_1_0_0_1_0ElementType());
            	              							
            	            }
            	            otherlv_8=(Token)match(input,KW_FullStop,FOLLOW_109); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								doneLeaf(otherlv_8);
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            {
            	            {
            	            {
            	            if ( state.backtracking==0 ) {

            	              										markLeaf(elementTypeProvider.getXMemberFeatureCall_NullSafeQuestionMarkFullStopKeyword_1_1_0_0_1_1_0ElementType());
            	              									
            	            }
            	            lv_nullSafe_9_0=(Token)match(input,KW_QuestionMarkFullStop,FOLLOW_109); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										doneLeaf(lv_nullSafe_9_0);
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (!current) {
            	              											associateWithSemanticElement();
            	              											current = true;
            	              										}
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            {
            	            {
            	            {
            	            if ( state.backtracking==0 ) {

            	              										markLeaf(elementTypeProvider.getXMemberFeatureCall_ExplicitStaticColonColonKeyword_1_1_0_0_1_2_0ElementType());
            	              									
            	            }
            	            lv_explicitStatic_10_0=(Token)match(input,KW_ColonColon,FOLLOW_109); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										doneLeaf(lv_explicitStatic_10_0);
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (!current) {
            	              											associateWithSemanticElement();
            	              											current = true;
            	              										}
            	              									
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    int alt221=2;
            	    int LA221_0 = input.LA(1);

            	    if ( (LA221_0==KW_LessThanSign) ) {
            	        alt221=1;
            	    }
            	    switch (alt221) {
            	        case 1 :
            	            {
            	            if ( state.backtracking==0 ) {

            	              						markLeaf(elementTypeProvider.getXMemberFeatureCall_LessThanSignKeyword_1_1_1_0ElementType());
            	              					
            	            }
            	            otherlv_11=(Token)match(input,KW_LessThanSign,FOLLOW_53); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						doneLeaf(otherlv_11);
            	              					
            	            }
            	            {
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markComposite(elementTypeProvider.getXMemberFeatureCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_1_0ElementType());
            	              							
            	            }
            	            pushFollow(FOLLOW_10);
            	            lv_typeArguments_12_0=ruleJvmArgumentTypeReference();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								doneComposite();
            	              								if(!current) {
            	              									associateWithSemanticElement();
            	              									current = true;
            	              								}
            	              							
            	            }

            	            }


            	            }
            	            loop220:
            	            do {
            	                int alt220=2;
            	                int LA220_0 = input.LA(1);

            	                if ( (LA220_0==KW_Comma) ) {
            	                    alt220=1;
            	                }


            	                switch (alt220) {
            	            	case 1 :
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      							markLeaf(elementTypeProvider.getXMemberFeatureCall_CommaKeyword_1_1_1_2_0ElementType());
            	            	      						
            	            	    }
            	            	    otherlv_13=(Token)match(input,KW_Comma,FOLLOW_53); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      							doneLeaf(otherlv_13);
            	            	      						
            	            	    }
            	            	    {
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      									markComposite(elementTypeProvider.getXMemberFeatureCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_1_2_1_0ElementType());
            	            	      								
            	            	    }
            	            	    pushFollow(FOLLOW_10);
            	            	    lv_typeArguments_14_0=ruleJvmArgumentTypeReference();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      									doneComposite();
            	            	      									if(!current) {
            	            	      										associateWithSemanticElement();
            	            	      										current = true;
            	            	      									}
            	            	      								
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop220;
            	                }
            	            } while (true);

            	            if ( state.backtracking==0 ) {

            	              						markLeaf(elementTypeProvider.getXMemberFeatureCall_GreaterThanSignKeyword_1_1_1_3ElementType());
            	              					
            	            }
            	            otherlv_15=(Token)match(input,KW_GreaterThanSign,FOLLOW_109); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						doneLeaf(otherlv_15);
            	              					
            	            }

            	            }
            	            break;

            	    }
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      							if (!current) {
            	      								associateWithSemanticElement();
            	      								current = true;
            	      							}
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							markComposite(elementTypeProvider.getXMemberFeatureCall_FeatureJvmIdentifiableElementCrossReference_1_1_2_0ElementType());
            	      						
            	    }
            	    pushFollow(FOLLOW_110);
            	    ruleIdOrSuper();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							doneComposite();
            	      						
            	    }

            	    }


            	    }
            	    int alt224=2;
            	    alt224 = dfa224.predict(input);
            	    switch (alt224) {
            	        case 1 :
            	            {
            	            {
            	            {
            	            if ( state.backtracking==0 ) {

            	              								markLeaf(elementTypeProvider.getXMemberFeatureCall_ExplicitOperationCallLeftParenthesisKeyword_1_1_3_0_0ElementType());
            	              							
            	            }
            	            lv_explicitOperationCall_17_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_75); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								doneLeaf(lv_explicitOperationCall_17_0);
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (!current) {
            	              									associateWithSemanticElement();
            	              									current = true;
            	              								}
            	              							
            	            }

            	            }


            	            }
            	            int alt223=3;
            	            alt223 = dfa223.predict(input);
            	            switch (alt223) {
            	                case 1 :
            	                    {
            	                    {
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									markComposite(elementTypeProvider.getXMemberFeatureCall_MemberCallArgumentsXShortClosureParserRuleCall_1_1_3_1_0_0ElementType());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_64);
            	                    lv_memberCallArguments_18_0=ruleXShortClosure();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									doneComposite();
            	                      									if(!current) {
            	                      										associateWithSemanticElement();
            	                      										current = true;
            	                      									}
            	                      								
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    {
            	                    {
            	                    {
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      										markComposite(elementTypeProvider.getXMemberFeatureCall_MemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_0_0ElementType());
            	                      									
            	                    }
            	                    pushFollow(FOLLOW_28);
            	                    lv_memberCallArguments_19_0=ruleXExpression();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      										doneComposite();
            	                      										if(!current) {
            	                      											associateWithSemanticElement();
            	                      											current = true;
            	                      										}
            	                      									
            	                    }

            	                    }


            	                    }
            	                    loop222:
            	                    do {
            	                        int alt222=2;
            	                        int LA222_0 = input.LA(1);

            	                        if ( (LA222_0==KW_Comma) ) {
            	                            alt222=1;
            	                        }


            	                        switch (alt222) {
            	                    	case 1 :
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									markLeaf(elementTypeProvider.getXMemberFeatureCall_CommaKeyword_1_1_3_1_1_1_0ElementType());
            	                    	      								
            	                    	    }
            	                    	    otherlv_20=(Token)match(input,KW_Comma,FOLLOW_34); if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      									doneLeaf(otherlv_20);
            	                    	      								
            	                    	    }
            	                    	    {
            	                    	    {
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											markComposite(elementTypeProvider.getXMemberFeatureCall_MemberCallArgumentsXExpressionParserRuleCall_1_1_3_1_1_1_1_0ElementType());
            	                    	      										
            	                    	    }
            	                    	    pushFollow(FOLLOW_28);
            	                    	    lv_memberCallArguments_21_0=ruleXExpression();

            	                    	    state._fsp--;
            	                    	    if (state.failed) return current;
            	                    	    if ( state.backtracking==0 ) {

            	                    	      											doneComposite();
            	                    	      											if(!current) {
            	                    	      												associateWithSemanticElement();
            	                    	      												current = true;
            	                    	      											}
            	                    	      										
            	                    	    }

            	                    	    }


            	                    	    }


            	                    	    }
            	                    	    break;

            	                    	default :
            	                    	    break loop222;
            	                        }
            	                    } while (true);


            	                    }


            	                    }
            	                    break;

            	            }

            	            if ( state.backtracking==0 ) {

            	              						markLeaf(elementTypeProvider.getXMemberFeatureCall_RightParenthesisKeyword_1_1_3_2ElementType());
            	              					
            	            }
            	            otherlv_22=(Token)match(input,KW_RightParenthesis,FOLLOW_111); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						doneLeaf(otherlv_22);
            	              					
            	            }

            	            }
            	            break;

            	    }
            	    int alt225=2;
            	    alt225 = dfa225.predict(input);
            	    switch (alt225) {
            	        case 1 :
            	            {
            	            {
            	            if ( state.backtracking==0 ) {

            	              							markComposite(elementTypeProvider.getXMemberFeatureCall_MemberCallArgumentsXClosureParserRuleCall_1_1_4_0ElementType());
            	              						
            	            }
            	            pushFollow(FOLLOW_107);
            	            lv_memberCallArguments_23_0=ruleXClosure();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							doneComposite();
            	              							if(!current) {
            	              								associateWithSemanticElement();
            	              								current = true;
            	              							}
            	              						
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop226;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXPrimaryExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXPrimaryExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXPrimaryExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXPrimaryExpression=ruleXPrimaryExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXPrimaryExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXPrimaryExpression() throws RecognitionException {
        Boolean current = false;

        Boolean this_XConstructorCall_0 = null;

        Boolean this_XBlockExpression_1 = null;

        Boolean this_XSwitchExpression_2 = null;

        Boolean this_XSynchronizedExpression_3 = null;

        Boolean this_XFeatureCall_4 = null;

        Boolean this_XLiteral_5 = null;

        Boolean this_XIfExpression_6 = null;

        Boolean this_XForLoopExpression_7 = null;

        Boolean this_XBasicForLoopExpression_8 = null;

        Boolean this_XWhileExpression_9 = null;

        Boolean this_XDoWhileExpression_10 = null;

        Boolean this_XThrowExpression_11 = null;

        Boolean this_XReturnExpression_12 = null;

        Boolean this_XTryCatchFinallyExpression_13 = null;

        Boolean this_XParenthesizedExpression_14 = null;


        try {
            {
            int alt227=15;
            alt227 = dfa227.predict(input);
            switch (alt227) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XConstructorCallParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XConstructorCall_0=ruleXConstructorCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XConstructorCall_0;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XBlockExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBlockExpression_1=ruleXBlockExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBlockExpression_1;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XSwitchExpressionParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSwitchExpression_2=ruleXSwitchExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSwitchExpression_2;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXPrimaryExpression_XSynchronizedExpressionParserRuleCall_3ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XSynchronizedExpression_3=ruleXSynchronizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XSynchronizedExpression_3;
                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XFeatureCallParserRuleCall_4ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFeatureCall_4=ruleXFeatureCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFeatureCall_4;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XLiteralParserRuleCall_5ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XLiteral_5=ruleXLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XLiteral_5;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XIfExpressionParserRuleCall_6ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XIfExpression_6=ruleXIfExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XIfExpression_6;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 8 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXPrimaryExpression_XForLoopExpressionParserRuleCall_7ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XForLoopExpression_7=ruleXForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XForLoopExpression_7;
                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XBasicForLoopExpressionParserRuleCall_8ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBasicForLoopExpression_8=ruleXBasicForLoopExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBasicForLoopExpression_8;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 10 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XWhileExpressionParserRuleCall_9ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XWhileExpression_9=ruleXWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XWhileExpression_9;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 11 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XDoWhileExpressionParserRuleCall_10ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XDoWhileExpression_10=ruleXDoWhileExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XDoWhileExpression_10;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 12 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XThrowExpressionParserRuleCall_11ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XThrowExpression_11=ruleXThrowExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XThrowExpression_11;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 13 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XReturnExpressionParserRuleCall_12ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XReturnExpression_12=ruleXReturnExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XReturnExpression_12;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 14 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XTryCatchFinallyExpressionParserRuleCall_13ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTryCatchFinallyExpression_13=ruleXTryCatchFinallyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTryCatchFinallyExpression_13;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 15 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXPrimaryExpression_XParenthesizedExpressionParserRuleCall_14ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XParenthesizedExpression_14=ruleXParenthesizedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XParenthesizedExpression_14;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXLiteral=ruleXLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean this_XCollectionLiteral_0 = null;

        Boolean this_XClosure_1 = null;

        Boolean this_XBooleanLiteral_2 = null;

        Boolean this_XNumberLiteral_3 = null;

        Boolean this_XNullLiteral_4 = null;

        Boolean this_XStringLiteral_5 = null;

        Boolean this_XTypeLiteral_6 = null;


        try {
            {
            int alt228=7;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==KW_NumberSign) ) {
                alt228=1;
            }
            else if ( (LA228_0==KW_LeftSquareBracket) && (synpred53_PsiInternalXtend())) {
                alt228=2;
            }
            else if ( ((LA228_0>=KW_False && LA228_0<=KW_True)) ) {
                alt228=3;
            }
            else if ( ((LA228_0>=RULE_HEX && LA228_0<=RULE_DECIMAL)) ) {
                alt228=4;
            }
            else if ( (LA228_0==KW_Null) ) {
                alt228=5;
            }
            else if ( ((LA228_0>=RULE_STRING && LA228_0<=RULE_RICH_TEXT_START)) ) {
                alt228=6;
            }
            else if ( (LA228_0==KW_Typeof) ) {
                alt228=7;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }
            switch (alt228) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XCollectionLiteralParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XCollectionLiteral_0=ruleXCollectionLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XCollectionLiteral_0;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXLiteral_XClosureParserRuleCall_1ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XClosure_1=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XClosure_1;
                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XBooleanLiteralParserRuleCall_2ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XBooleanLiteral_2=ruleXBooleanLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XBooleanLiteral_2;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 4 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XNumberLiteralParserRuleCall_3ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNumberLiteral_3=ruleXNumberLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNumberLiteral_3;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 5 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XNullLiteralParserRuleCall_4ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XNullLiteral_4=ruleXNullLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XNullLiteral_4;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 6 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XStringLiteralParserRuleCall_5ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XStringLiteral_5=ruleXStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XStringLiteral_5;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 7 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXLiteral_XTypeLiteralParserRuleCall_6ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XTypeLiteral_6=ruleXTypeLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XTypeLiteral_6;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXCollectionLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXCollectionLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXCollectionLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCollectionLiteral=ruleXCollectionLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCollectionLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXCollectionLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean this_XSetLiteral_0 = null;

        Boolean this_XListLiteral_1 = null;


        try {
            {
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==KW_NumberSign) ) {
                int LA229_1 = input.LA(2);

                if ( (LA229_1==KW_LeftCurlyBracket) ) {
                    alt229=1;
                }
                else if ( (LA229_1==KW_LeftSquareBracket) ) {
                    alt229=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 229, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 229, 0, input);

                throw nvae;
            }
            switch (alt229) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXCollectionLiteral_XSetLiteralParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XSetLiteral_0=ruleXSetLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XSetLiteral_0;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXCollectionLiteral_XListLiteralParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XListLiteral_1=ruleXListLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XListLiteral_1;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXSetLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXSetLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXSetLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSetLiteral=ruleXSetLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSetLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXSetLiteral() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Boolean lv_elements_3_0 = null;

        Boolean lv_elements_5_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXSetLiteral_XSetLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSetLiteral_NumberSignKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSetLiteral_LeftCurlyBracketKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_112); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==KW_Package||(LA231_0>=KW_Class && LA231_0<=KW_LessThanSign)||(LA231_0>=KW_Extends && LA231_0<=KW_LeftCurlyBracket)||(LA231_0>=KW_Interface && LA231_0<=KW_LeftParenthesis)||(LA231_0>=KW_Extension && LA231_0<=KW_New)||(LA231_0>=KW_Public && LA231_0<=KW_Transient)||(LA231_0>=KW_Def && LA231_0<=KW_Create)||(LA231_0>=KW_AFTER && LA231_0<=KW_Import)||LA231_0==KW_Try||LA231_0==KW_Switch||(LA231_0>=KW_NumberSign && LA231_0<=KW_LeftSquareBracket)||(LA231_0>=KW_PlusSign && LA231_0<=KW_HyphenMinus)||LA231_0==KW_ExclamationMark||LA231_0==KW_If||(LA231_0>=KW_For && LA231_0<=KW_Return)||(LA231_0>=RULE_ID && LA231_0<=RULE_RICH_TEXT_START)||(LA231_0>=RULE_HEX && LA231_0<=RULE_DECIMAL)) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXSetLiteral_ElementsXExpressionParserRuleCall_3_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_113);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    loop230:
                    do {
                        int alt230=2;
                        int LA230_0 = input.LA(1);

                        if ( (LA230_0==KW_Comma) ) {
                            alt230=1;
                        }


                        switch (alt230) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXSetLiteral_CommaKeyword_3_1_0ElementType());
                    	      				
                    	    }
                    	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_4);
                    	      				
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXSetLiteral_ElementsXExpressionParserRuleCall_3_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_113);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop230;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSetLiteral_RightCurlyBracketKeyword_4ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXListLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXListLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXListLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXListLiteral=ruleXListLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXListLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXListLiteral() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Boolean lv_elements_3_0 = null;

        Boolean lv_elements_5_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXListLiteral_XListLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXListLiteral_NumberSignKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_NumberSign,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXListLiteral_LeftSquareBracketKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftSquareBracket,FOLLOW_90); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==KW_Package||(LA233_0>=KW_Class && LA233_0<=KW_LessThanSign)||(LA233_0>=KW_Extends && LA233_0<=KW_LeftCurlyBracket)||(LA233_0>=KW_Interface && LA233_0<=KW_LeftParenthesis)||(LA233_0>=KW_Extension && LA233_0<=KW_New)||(LA233_0>=KW_Public && LA233_0<=KW_Transient)||(LA233_0>=KW_Def && LA233_0<=KW_Create)||(LA233_0>=KW_AFTER && LA233_0<=KW_Import)||LA233_0==KW_Try||LA233_0==KW_Switch||(LA233_0>=KW_NumberSign && LA233_0<=KW_LeftSquareBracket)||(LA233_0>=KW_PlusSign && LA233_0<=KW_HyphenMinus)||LA233_0==KW_ExclamationMark||LA233_0==KW_If||(LA233_0>=KW_For && LA233_0<=KW_Return)||(LA233_0>=RULE_ID && LA233_0<=RULE_RICH_TEXT_START)||(LA233_0>=RULE_HEX && LA233_0<=RULE_DECIMAL)) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXListLiteral_ElementsXExpressionParserRuleCall_3_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_91);
                    lv_elements_3_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    loop232:
                    do {
                        int alt232=2;
                        int LA232_0 = input.LA(1);

                        if ( (LA232_0==KW_Comma) ) {
                            alt232=1;
                        }


                        switch (alt232) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXListLiteral_CommaKeyword_3_1_0ElementType());
                    	      				
                    	    }
                    	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_4);
                    	      				
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXListLiteral_ElementsXExpressionParserRuleCall_3_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    lv_elements_5_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop232;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXListLiteral_RightSquareBracketKeyword_4ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXClosure() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXClosure = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXClosureElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXClosure=ruleXClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXClosure() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token lv_explicitSyntax_5_0=null;
        Token otherlv_7=null;
        Boolean lv_declaredFormalParameters_2_0 = null;

        Boolean lv_declaredFormalParameters_4_0 = null;

        Boolean lv_expression_6_0 = null;


        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXClosure_XClosureAction_0_0_0ElementType());
              						doneComposite();
              						associateWithSemanticElement();
              					
            }

            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXClosure_LeftSquareBracketKeyword_0_0_1ElementType());
              				
            }
            otherlv_1=(Token)match(input,KW_LeftSquareBracket,FOLLOW_114); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_1);
              				
            }

            }


            }
            int alt236=2;
            alt236 = dfa236.predict(input);
            switch (alt236) {
                case 1 :
                    {
                    {
                    int alt235=2;
                    int LA235_0 = input.LA(1);

                    if ( (LA235_0==KW_Package||LA235_0==KW_Class||(LA235_0>=KW_Extends && LA235_0<=KW_Implements)||(LA235_0>=KW_Interface && LA235_0<=KW_LeftParenthesis)||LA235_0==KW_EqualsSignGreaterThanSign||(LA235_0>=KW_Extension && LA235_0<=KW_Throws)||(LA235_0>=KW_Public && LA235_0<=KW_Transient)||(LA235_0>=KW_Def && LA235_0<=KW_Create)||(LA235_0>=KW_AFTER && LA235_0<=KW_Import)||LA235_0==RULE_ID) ) {
                        alt235=1;
                    }
                    switch (alt235) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXClosure_DeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_115);
                            lv_declaredFormalParameters_2_0=ruleJvmFormalParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop234:
                            do {
                                int alt234=2;
                                int LA234_0 = input.LA(1);

                                if ( (LA234_0==KW_Comma) ) {
                                    alt234=1;
                                }


                                switch (alt234) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getXClosure_CommaKeyword_1_0_0_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_67); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_3);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getXClosure_DeclaredFormalParametersJvmFormalParameterParserRuleCall_1_0_0_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_115);
                            	    lv_declaredFormalParameters_4_0=ruleJvmFormalParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop234;
                                }
                            } while (true);


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markLeaf(elementTypeProvider.getXClosure_ExplicitSyntaxVerticalLineKeyword_1_0_1_0ElementType());
                      						
                    }
                    lv_explicitSyntax_5_0=(Token)match(input,KW_VerticalLine,FOLLOW_116); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneLeaf(lv_explicitSyntax_5_0);
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXClosure_ExpressionXExpressionInClosureParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_117);
            lv_expression_6_0=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXClosure_RightSquareBracketKeyword_3ElementType());
              		
            }
            otherlv_7=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_7);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXExpressionInClosure() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXExpressionInClosure = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXExpressionInClosureElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionInClosure=ruleXExpressionInClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionInClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXExpressionInClosure() throws RecognitionException {
        Boolean current = false;

        Token otherlv_2=null;
        Boolean lv_expressions_1_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXExpressionInClosure_XBlockExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            loop238:
            do {
                int alt238=2;
                int LA238_0 = input.LA(1);

                if ( (LA238_0==KW_Package||(LA238_0>=KW_Class && LA238_0<=KW_LessThanSign)||(LA238_0>=KW_Extends && LA238_0<=KW_LeftCurlyBracket)||(LA238_0>=KW_Interface && LA238_0<=KW_LeftParenthesis)||(LA238_0>=KW_Extension && LA238_0<=KW_New)||(LA238_0>=KW_Public && LA238_0<=KW_Create)||(LA238_0>=KW_AFTER && LA238_0<=KW_Import)||LA238_0==KW_Try||LA238_0==KW_Switch||(LA238_0>=KW_NumberSign && LA238_0<=KW_LeftSquareBracket)||(LA238_0>=KW_PlusSign && LA238_0<=KW_HyphenMinus)||LA238_0==KW_ExclamationMark||LA238_0==KW_If||(LA238_0>=KW_For && LA238_0<=KW_Return)||(LA238_0>=RULE_ID && LA238_0<=RULE_RICH_TEXT_START)||(LA238_0>=RULE_HEX && LA238_0<=RULE_DECIMAL)) ) {
                    alt238=1;
                }


                switch (alt238) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXExpressionInClosure_ExpressionsXExpressionOrVarDeclarationParserRuleCall_1_0_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_expressions_1_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      						if(!current) {
            	      							associateWithSemanticElement();
            	      							current = true;
            	      						}
            	      					
            	    }

            	    }


            	    }
            	    int alt237=2;
            	    int LA237_0 = input.LA(1);

            	    if ( (LA237_0==KW_Semicolon) ) {
            	        alt237=1;
            	    }
            	    switch (alt237) {
            	        case 1 :
            	            {
            	            if ( state.backtracking==0 ) {

            	              					markLeaf(elementTypeProvider.getXExpressionInClosure_SemicolonKeyword_1_1ElementType());
            	              				
            	            }
            	            otherlv_2=(Token)match(input,KW_Semicolon,FOLLOW_119); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					doneLeaf(otherlv_2);
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop238;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXShortClosure() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXShortClosure = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXShortClosureElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXShortClosure=ruleXShortClosure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXShortClosure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXShortClosure() throws RecognitionException {
        Boolean current = false;

        Token otherlv_2=null;
        Token lv_explicitSyntax_4_0=null;
        Boolean lv_declaredFormalParameters_1_0 = null;

        Boolean lv_declaredFormalParameters_3_0 = null;

        Boolean lv_expression_5_0 = null;


        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXShortClosure_XClosureAction_0_0_0ElementType());
              						doneComposite();
              						associateWithSemanticElement();
              					
            }

            }
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( (LA240_0==KW_Package||LA240_0==KW_Class||(LA240_0>=KW_Extends && LA240_0<=KW_Implements)||(LA240_0>=KW_Interface && LA240_0<=KW_LeftParenthesis)||LA240_0==KW_EqualsSignGreaterThanSign||(LA240_0>=KW_Extension && LA240_0<=KW_Throws)||(LA240_0>=KW_Public && LA240_0<=KW_Transient)||(LA240_0>=KW_Def && LA240_0<=KW_Create)||(LA240_0>=KW_AFTER && LA240_0<=KW_Import)||LA240_0==RULE_ID) ) {
                alt240=1;
            }
            switch (alt240) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      								markComposite(elementTypeProvider.getXShortClosure_DeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_0_0ElementType());
                      							
                    }
                    pushFollow(FOLLOW_115);
                    lv_declaredFormalParameters_1_0=ruleJvmFormalParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								doneComposite();
                      								if(!current) {
                      									associateWithSemanticElement();
                      									current = true;
                      								}
                      							
                    }

                    }


                    }
                    loop239:
                    do {
                        int alt239=2;
                        int LA239_0 = input.LA(1);

                        if ( (LA239_0==KW_Comma) ) {
                            alt239=1;
                        }


                        switch (alt239) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markLeaf(elementTypeProvider.getXShortClosure_CommaKeyword_0_0_1_1_0ElementType());
                    	      						
                    	    }
                    	    otherlv_2=(Token)match(input,KW_Comma,FOLLOW_67); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneLeaf(otherlv_2);
                    	      						
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									markComposite(elementTypeProvider.getXShortClosure_DeclaredFormalParametersJvmFormalParameterParserRuleCall_0_0_1_1_1_0ElementType());
                    	      								
                    	    }
                    	    pushFollow(FOLLOW_115);
                    	    lv_declaredFormalParameters_3_0=ruleJvmFormalParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									doneComposite();
                    	      									if(!current) {
                    	      										associateWithSemanticElement();
                    	      										current = true;
                    	      									}
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop239;
                        }
                    } while (true);


                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              							markLeaf(elementTypeProvider.getXShortClosure_ExplicitSyntaxVerticalLineKeyword_0_0_2_0ElementType());
              						
            }
            lv_explicitSyntax_4_0=(Token)match(input,KW_VerticalLine,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							doneLeaf(lv_explicitSyntax_4_0);
              						
            }
            if ( state.backtracking==0 ) {

              							if (!current) {
              								associateWithSemanticElement();
              								current = true;
              							}
              						
            }

            }


            }


            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXShortClosure_ExpressionXExpressionParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXParenthesizedExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXParenthesizedExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXParenthesizedExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXParenthesizedExpression=ruleXParenthesizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXParenthesizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXParenthesizedExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Boolean this_XExpression_1 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXParenthesizedExpression_LeftParenthesisKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getXParenthesizedExpression_XExpressionParserRuleCall_1ElementType());
              		
            }
            pushFollow(FOLLOW_64);
            this_XExpression_1=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_XExpression_1;
              			doneComposite();
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXParenthesizedExpression_RightParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXIfExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXIfExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXIfExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXIfExpression=ruleXIfExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXIfExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXIfExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Boolean lv_if_3_0 = null;

        Boolean lv_then_5_0 = null;

        Boolean lv_else_7_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXIfExpression_XIfExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXIfExpression_IfKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_If,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXIfExpression_LeftParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXIfExpression_IfXExpressionParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_64);
            lv_if_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXIfExpression_RightParenthesisKeyword_4ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXIfExpression_ThenXExpressionParserRuleCall_5_0ElementType());
              				
            }
            pushFollow(FOLLOW_120);
            lv_then_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }
            int alt241=2;
            int LA241_0 = input.LA(1);

            if ( (LA241_0==KW_Else) ) {
                int LA241_1 = input.LA(2);

                if ( (synpred57_PsiInternalXtend()) ) {
                    alt241=1;
                }
            }
            switch (alt241) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getXIfExpression_ElseKeyword_6_0ElementType());
                      				
                    }
                    otherlv_6=(Token)match(input,KW_Else,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_6);
                      				
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXIfExpression_ElseXExpressionParserRuleCall_6_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_else_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXForLoopExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXForLoopExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXForLoopExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXForLoopExpression=ruleXForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXForLoopExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Boolean lv_declaredParam_3_0 = null;

        Boolean lv_forExpression_5_0 = null;

        Boolean lv_eachExpression_7_0 = null;


        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXForLoopExpression_XForLoopExpressionAction_0_0_0ElementType());
              						doneComposite();
              						associateWithSemanticElement();
              					
            }

            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXForLoopExpression_ForKeyword_0_0_1ElementType());
              				
            }
            otherlv_1=(Token)match(input,KW_For,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_1);
              				
            }
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXForLoopExpression_LeftParenthesisKeyword_0_0_2ElementType());
              				
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_2);
              				
            }
            {
            {
            if ( state.backtracking==0 ) {

              							markComposite(elementTypeProvider.getXForLoopExpression_DeclaredParamJvmFormalParameterParserRuleCall_0_0_3_0ElementType());
              						
            }
            pushFollow(FOLLOW_56);
            lv_declaredParam_3_0=ruleJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              							doneComposite();
              							if(!current) {
              								associateWithSemanticElement();
              								current = true;
              							}
              						
            }

            }


            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXForLoopExpression_ColonKeyword_0_0_4ElementType());
              				
            }
            otherlv_4=(Token)match(input,KW_Colon,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_4);
              				
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXForLoopExpression_ForExpressionXExpressionParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_64);
            lv_forExpression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXForLoopExpression_RightParenthesisKeyword_2ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_RightParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXForLoopExpression_EachExpressionXExpressionParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_7_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXBasicForLoopExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXBasicForLoopExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXBasicForLoopExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBasicForLoopExpression=ruleXBasicForLoopExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBasicForLoopExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXBasicForLoopExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Boolean lv_initExpressions_3_0 = null;

        Boolean lv_initExpressions_5_0 = null;

        Boolean lv_expression_7_0 = null;

        Boolean lv_updateExpressions_9_0 = null;

        Boolean lv_updateExpressions_11_0 = null;

        Boolean lv_eachExpression_13_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXBasicForLoopExpression_XBasicForLoopExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_ForKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_For,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_LeftParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==KW_Package||(LA243_0>=KW_Class && LA243_0<=KW_LessThanSign)||(LA243_0>=KW_Extends && LA243_0<=KW_LeftCurlyBracket)||(LA243_0>=KW_Interface && LA243_0<=KW_LeftParenthesis)||(LA243_0>=KW_Extension && LA243_0<=KW_New)||(LA243_0>=KW_Public && LA243_0<=KW_Create)||(LA243_0>=KW_AFTER && LA243_0<=KW_Import)||LA243_0==KW_Try||LA243_0==KW_Switch||(LA243_0>=KW_NumberSign && LA243_0<=KW_LeftSquareBracket)||(LA243_0>=KW_PlusSign && LA243_0<=KW_HyphenMinus)||LA243_0==KW_ExclamationMark||LA243_0==KW_If||(LA243_0>=KW_For && LA243_0<=KW_Return)||(LA243_0>=RULE_ID && LA243_0<=RULE_RICH_TEXT_START)||(LA243_0>=RULE_HEX && LA243_0<=RULE_DECIMAL)) ) {
                alt243=1;
            }
            switch (alt243) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXBasicForLoopExpression_InitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_122);
                    lv_initExpressions_3_0=ruleXExpressionOrVarDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    loop242:
                    do {
                        int alt242=2;
                        int LA242_0 = input.LA(1);

                        if ( (LA242_0==KW_Comma) ) {
                            alt242=1;
                        }


                        switch (alt242) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXBasicForLoopExpression_CommaKeyword_3_1_0ElementType());
                    	      				
                    	    }
                    	    otherlv_4=(Token)match(input,KW_Comma,FOLLOW_123); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_4);
                    	      				
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXBasicForLoopExpression_InitExpressionsXExpressionOrVarDeclarationParserRuleCall_3_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_122);
                    	    lv_initExpressions_5_0=ruleXExpressionOrVarDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop242;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_SemicolonKeyword_4ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_Semicolon,FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==KW_Package||(LA244_0>=KW_Class && LA244_0<=KW_LessThanSign)||(LA244_0>=KW_Extends && LA244_0<=KW_LeftCurlyBracket)||(LA244_0>=KW_Interface && LA244_0<=KW_LeftParenthesis)||(LA244_0>=KW_Extension && LA244_0<=KW_New)||(LA244_0>=KW_Public && LA244_0<=KW_Transient)||(LA244_0>=KW_Def && LA244_0<=KW_Create)||(LA244_0>=KW_AFTER && LA244_0<=KW_Import)||LA244_0==KW_Try||LA244_0==KW_Switch||(LA244_0>=KW_NumberSign && LA244_0<=KW_LeftSquareBracket)||(LA244_0>=KW_PlusSign && LA244_0<=KW_HyphenMinus)||LA244_0==KW_ExclamationMark||LA244_0==KW_If||(LA244_0>=KW_For && LA244_0<=KW_Return)||(LA244_0>=RULE_ID && LA244_0<=RULE_RICH_TEXT_START)||(LA244_0>=RULE_HEX && LA244_0<=RULE_DECIMAL)) ) {
                alt244=1;
            }
            switch (alt244) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXBasicForLoopExpression_ExpressionXExpressionParserRuleCall_5_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_125);
                    lv_expression_7_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      					if(!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_SemicolonKeyword_6ElementType());
              		
            }
            otherlv_8=(Token)match(input,KW_Semicolon,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_8);
              		
            }
            int alt246=2;
            int LA246_0 = input.LA(1);

            if ( (LA246_0==KW_Package||(LA246_0>=KW_Class && LA246_0<=KW_LessThanSign)||(LA246_0>=KW_Extends && LA246_0<=KW_LeftCurlyBracket)||(LA246_0>=KW_Interface && LA246_0<=KW_LeftParenthesis)||(LA246_0>=KW_Extension && LA246_0<=KW_New)||(LA246_0>=KW_Public && LA246_0<=KW_Transient)||(LA246_0>=KW_Def && LA246_0<=KW_Create)||(LA246_0>=KW_AFTER && LA246_0<=KW_Import)||LA246_0==KW_Try||LA246_0==KW_Switch||(LA246_0>=KW_NumberSign && LA246_0<=KW_LeftSquareBracket)||(LA246_0>=KW_PlusSign && LA246_0<=KW_HyphenMinus)||LA246_0==KW_ExclamationMark||LA246_0==KW_If||(LA246_0>=KW_For && LA246_0<=KW_Return)||(LA246_0>=RULE_ID && LA246_0<=RULE_RICH_TEXT_START)||(LA246_0>=RULE_HEX && LA246_0<=RULE_DECIMAL)) ) {
                alt246=1;
            }
            switch (alt246) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXBasicForLoopExpression_UpdateExpressionsXExpressionParserRuleCall_7_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_updateExpressions_9_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    loop245:
                    do {
                        int alt245=2;
                        int LA245_0 = input.LA(1);

                        if ( (LA245_0==KW_Comma) ) {
                            alt245=1;
                        }


                        switch (alt245) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXBasicForLoopExpression_CommaKeyword_7_1_0ElementType());
                    	      				
                    	    }
                    	    otherlv_10=(Token)match(input,KW_Comma,FOLLOW_34); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_10);
                    	      				
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXBasicForLoopExpression_UpdateExpressionsXExpressionParserRuleCall_7_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_28);
                    	    lv_updateExpressions_11_0=ruleXExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop245;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBasicForLoopExpression_RightParenthesisKeyword_8ElementType());
              		
            }
            otherlv_12=(Token)match(input,KW_RightParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_12);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXBasicForLoopExpression_EachExpressionXExpressionParserRuleCall_9_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_eachExpression_13_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXWhileExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXWhileExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXWhileExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXWhileExpression=ruleXWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXWhileExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Boolean lv_predicate_3_0 = null;

        Boolean lv_body_5_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXWhileExpression_XWhileExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXWhileExpression_WhileKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_While,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXWhileExpression_LeftParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXWhileExpression_PredicateXExpressionParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_64);
            lv_predicate_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXWhileExpression_RightParenthesisKeyword_4ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXWhileExpression_BodyXExpressionParserRuleCall_5_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXDoWhileExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXDoWhileExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXDoWhileExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXDoWhileExpression=ruleXDoWhileExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXDoWhileExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXDoWhileExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Boolean lv_body_2_0 = null;

        Boolean lv_predicate_5_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXDoWhileExpression_XDoWhileExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXDoWhileExpression_DoKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Do,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXDoWhileExpression_BodyXExpressionParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_126);
            lv_body_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXDoWhileExpression_WhileKeyword_3ElementType());
              		
            }
            otherlv_3=(Token)match(input,KW_While,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_3);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXDoWhileExpression_LeftParenthesisKeyword_4ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_LeftParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXDoWhileExpression_PredicateXExpressionParserRuleCall_5_0ElementType());
              				
            }
            pushFollow(FOLLOW_64);
            lv_predicate_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXDoWhileExpression_RightParenthesisKeyword_6ElementType());
              		
            }
            otherlv_6=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_6);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXBlockExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXBlockExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXBlockExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBlockExpression=ruleXBlockExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBlockExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXBlockExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Boolean lv_expressions_2_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXBlockExpression_XBlockExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBlockExpression_LeftCurlyBracketKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_LeftCurlyBracket,FOLLOW_127); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( (LA248_0==KW_Package||(LA248_0>=KW_Class && LA248_0<=KW_LessThanSign)||(LA248_0>=KW_Extends && LA248_0<=KW_LeftCurlyBracket)||(LA248_0>=KW_Interface && LA248_0<=KW_LeftParenthesis)||(LA248_0>=KW_Extension && LA248_0<=KW_New)||(LA248_0>=KW_Public && LA248_0<=KW_Create)||(LA248_0>=KW_AFTER && LA248_0<=KW_Import)||LA248_0==KW_Try||LA248_0==KW_Switch||(LA248_0>=KW_NumberSign && LA248_0<=KW_LeftSquareBracket)||(LA248_0>=KW_PlusSign && LA248_0<=KW_HyphenMinus)||LA248_0==KW_ExclamationMark||LA248_0==KW_If||(LA248_0>=KW_For && LA248_0<=KW_Return)||(LA248_0>=RULE_ID && LA248_0<=RULE_RICH_TEXT_START)||(LA248_0>=RULE_HEX && LA248_0<=RULE_DECIMAL)) ) {
                    alt248=1;
                }


                switch (alt248) {
            	case 1 :
            	    {
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      						markComposite(elementTypeProvider.getXBlockExpression_ExpressionsXExpressionOrVarDeclarationParserRuleCall_2_0_0ElementType());
            	      					
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_expressions_2_0=ruleXExpressionOrVarDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						doneComposite();
            	      						if(!current) {
            	      							associateWithSemanticElement();
            	      							current = true;
            	      						}
            	      					
            	    }

            	    }


            	    }
            	    int alt247=2;
            	    int LA247_0 = input.LA(1);

            	    if ( (LA247_0==KW_Semicolon) ) {
            	        alt247=1;
            	    }
            	    switch (alt247) {
            	        case 1 :
            	            {
            	            if ( state.backtracking==0 ) {

            	              					markLeaf(elementTypeProvider.getXBlockExpression_SemicolonKeyword_2_1ElementType());
            	              				
            	            }
            	            otherlv_3=(Token)match(input,KW_Semicolon,FOLLOW_127); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					doneLeaf(otherlv_3);
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXBlockExpression_RightCurlyBracketKeyword_3ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_RightCurlyBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXExpressionOrVarDeclaration() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXExpressionOrVarDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXExpressionOrVarDeclarationElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXExpressionOrVarDeclaration=ruleXExpressionOrVarDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXExpressionOrVarDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXExpressionOrVarDeclaration() throws RecognitionException {
        Boolean current = false;

        Boolean this_XVariableDeclaration_0 = null;

        Boolean this_XExpression_1 = null;


        try {
            {
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==KW_Var) && (synpred59_PsiInternalXtend())) {
                alt249=1;
            }
            else if ( (LA249_0==KW_Val) && (synpred59_PsiInternalXtend())) {
                alt249=1;
            }
            else if ( (LA249_0==KW_Extension) ) {
                switch ( input.LA(2) ) {
                case EOF:
                case KW_Package:
                case KW_Semicolon:
                case KW_Class:
                case KW_LessThanSign:
                case KW_Comma:
                case KW_GreaterThanSign:
                case KW_Extends:
                case KW_Implements:
                case KW_LeftCurlyBracket:
                case KW_RightCurlyBracket:
                case KW_Interface:
                case KW_Enum:
                case KW_Annotation:
                case KW_LeftParenthesis:
                case KW_EqualsSignGreaterThanSign:
                case KW_EqualsSign:
                case KW_Extension:
                case KW_Throws:
                case KW_New:
                case KW_FullStop:
                case KW_Public:
                case KW_Private:
                case KW_Protected:
                case KW_Abstract:
                case KW_Static:
                case KW_Dispatch:
                case KW_Final:
                case KW_Strictfp:
                case KW_Native:
                case KW_Volatile:
                case KW_Synchronized:
                case KW_Transient:
                case KW_Def:
                case KW_Override:
                case KW_Create:
                case KW_AFTER:
                case KW_BEFORE:
                case KW_SEPARATOR:
                case KW_Import:
                case KW_QuestionMark:
                case KW_Try:
                case KW_Switch:
                case KW_NumberSign:
                case KW_LeftSquareBracket:
                case KW_RightSquareBracket:
                case KW_PlusSignEqualsSign:
                case KW_HyphenMinusEqualsSign:
                case KW_AsteriskEqualsSign:
                case KW_SolidusEqualsSign:
                case KW_PercentSignEqualsSign:
                case KW_GreaterThanSignEqualsSign:
                case KW_VerticalLineVerticalLine:
                case KW_AmpersandAmpersand:
                case KW_EqualsSignEqualsSign:
                case KW_ExclamationMarkEqualsSign:
                case KW_EqualsSignEqualsSignEqualsSign:
                case KW_ExclamationMarkEqualsSignEqualsSign:
                case KW_Instanceof:
                case KW_HyphenMinusGreaterThanSign:
                case KW_FullStopFullStopLessThanSign:
                case KW_FullStopFullStop:
                case KW_LessThanSignGreaterThanSign:
                case KW_QuestionMarkColon:
                case KW_PlusSign:
                case KW_HyphenMinus:
                case KW_Asterisk:
                case KW_AsteriskAsterisk:
                case KW_Solidus:
                case KW_PercentSign:
                case KW_ExclamationMark:
                case KW_As:
                case KW_PlusSignPlusSign:
                case KW_HyphenMinusHyphenMinus:
                case KW_ColonColon:
                case KW_QuestionMarkFullStop:
                case KW_If:
                case KW_For:
                case KW_While:
                case KW_Do:
                case KW_Super:
                case KW_False:
                case KW_True:
                case KW_Null:
                case KW_Typeof:
                case KW_Throw:
                case KW_Return:
                case RULE_ID:
                case RULE_STRING:
                case RULE_RICH_TEXT:
                case RULE_RICH_TEXT_START:
                case RULE_RICH_TEXT_INBETWEEN:
                case RULE_COMMENT_RICH_TEXT_INBETWEEN:
                case RULE_RICH_TEXT_END:
                case RULE_COMMENT_RICH_TEXT_END:
                case RULE_HEX:
                case RULE_INT:
                case RULE_DECIMAL:
                    {
                    alt249=2;
                    }
                    break;
                case KW_Var:
                    {
                    int LA249_5 = input.LA(3);

                    if ( (synpred59_PsiInternalXtend()) ) {
                        alt249=1;
                    }
                    else if ( (true) ) {
                        alt249=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 249, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case KW_Val:
                    {
                    int LA249_6 = input.LA(3);

                    if ( (synpred59_PsiInternalXtend()) ) {
                        alt249=1;
                    }
                    else if ( (true) ) {
                        alt249=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 249, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 249, 3, input);

                    throw nvae;
                }

            }
            else if ( (LA249_0==KW_Package||(LA249_0>=KW_Class && LA249_0<=KW_LessThanSign)||(LA249_0>=KW_Extends && LA249_0<=KW_LeftCurlyBracket)||(LA249_0>=KW_Interface && LA249_0<=KW_LeftParenthesis)||(LA249_0>=KW_Throws && LA249_0<=KW_New)||(LA249_0>=KW_Public && LA249_0<=KW_Transient)||(LA249_0>=KW_Def && LA249_0<=KW_Create)||(LA249_0>=KW_AFTER && LA249_0<=KW_Import)||LA249_0==KW_Try||LA249_0==KW_Switch||(LA249_0>=KW_NumberSign && LA249_0<=KW_LeftSquareBracket)||(LA249_0>=KW_PlusSign && LA249_0<=KW_HyphenMinus)||LA249_0==KW_ExclamationMark||LA249_0==KW_If||(LA249_0>=KW_For && LA249_0<=KW_Return)||(LA249_0>=RULE_ID && LA249_0<=RULE_RICH_TEXT_START)||(LA249_0>=RULE_HEX && LA249_0<=RULE_DECIMAL)) ) {
                alt249=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 249, 0, input);

                throw nvae;
            }
            switch (alt249) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getXExpressionOrVarDeclaration_XVariableDeclarationParserRuleCall_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_XVariableDeclaration_0=ruleXVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_XVariableDeclaration_0;
                      				doneComposite();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getXExpressionOrVarDeclaration_XExpressionParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XExpression_1=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XExpression_1;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXFeatureCall() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXFeatureCall = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXFeatureCallElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFeatureCall=ruleXFeatureCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFeatureCall; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXFeatureCall() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_explicitOperationCall_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Boolean lv_typeArguments_2_0 = null;

        Boolean lv_typeArguments_4_0 = null;

        Boolean lv_featureCallArguments_8_0 = null;

        Boolean lv_featureCallArguments_9_0 = null;

        Boolean lv_featureCallArguments_11_0 = null;

        Boolean lv_featureCallArguments_13_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXFeatureCall_XFeatureCallAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==KW_LessThanSign) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFeatureCall_LessThanSignKeyword_1_0ElementType());
                      			
                    }
                    otherlv_1=(Token)match(input,KW_LessThanSign,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_1);
                      			
                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXFeatureCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_typeArguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    loop250:
                    do {
                        int alt250=2;
                        int LA250_0 = input.LA(1);

                        if ( (LA250_0==KW_Comma) ) {
                            alt250=1;
                        }


                        switch (alt250) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getXFeatureCall_CommaKeyword_1_2_0ElementType());
                    	      				
                    	    }
                    	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_53); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_3);
                    	      				
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getXFeatureCall_TypeArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    lv_typeArguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop250;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFeatureCall_GreaterThanSignKeyword_1_3ElementType());
                      			
                    }
                    otherlv_5=(Token)match(input,KW_GreaterThanSign,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_5);
                      			
                    }

                    }
                    break;

            }
            {
            {
            if ( state.backtracking==0 ) {

              					if (!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXFeatureCall_FeatureJvmIdentifiableElementCrossReference_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_74);
            ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }
            int alt254=2;
            alt254 = dfa254.predict(input);
            switch (alt254) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXFeatureCall_ExplicitOperationCallLeftParenthesisKeyword_3_0_0ElementType());
                      					
                    }
                    lv_explicitOperationCall_7_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_75); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_explicitOperationCall_7_0);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    int alt253=3;
                    alt253 = dfa253.predict(input);
                    switch (alt253) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXFeatureCall_FeatureCallArgumentsXShortClosureParserRuleCall_3_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_64);
                            lv_featureCallArguments_8_0=ruleXShortClosure();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXFeatureCall_FeatureCallArgumentsXExpressionParserRuleCall_3_1_1_0_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_28);
                            lv_featureCallArguments_9_0=ruleXExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }
                            loop252:
                            do {
                                int alt252=2;
                                int LA252_0 = input.LA(1);

                                if ( (LA252_0==KW_Comma) ) {
                                    alt252=1;
                                }


                                switch (alt252) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      							markLeaf(elementTypeProvider.getXFeatureCall_CommaKeyword_3_1_1_1_0ElementType());
                            	      						
                            	    }
                            	    otherlv_10=(Token)match(input,KW_Comma,FOLLOW_34); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							doneLeaf(otherlv_10);
                            	      						
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									markComposite(elementTypeProvider.getXFeatureCall_FeatureCallArgumentsXExpressionParserRuleCall_3_1_1_1_1_0ElementType());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_featureCallArguments_11_0=ruleXExpression();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									doneComposite();
                            	      									if(!current) {
                            	      										associateWithSemanticElement();
                            	      										current = true;
                            	      									}
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop252;
                                }
                            } while (true);


                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFeatureCall_RightParenthesisKeyword_3_2ElementType());
                      			
                    }
                    otherlv_12=(Token)match(input,KW_RightParenthesis,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_12);
                      			
                    }

                    }
                    break;

            }
            int alt255=2;
            alt255 = dfa255.predict(input);
            switch (alt255) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXFeatureCall_FeatureCallArgumentsXClosureParserRuleCall_4_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_featureCallArguments_13_0=ruleXClosure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      					if(!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleIdOrSuper() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleIdOrSuper = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getIdOrSuperElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdOrSuper=ruleIdOrSuper();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdOrSuper; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleIdOrSuper() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==KW_Package||LA256_0==KW_Class||(LA256_0>=KW_Extends && LA256_0<=KW_Implements)||(LA256_0>=KW_Interface && LA256_0<=KW_Annotation)||(LA256_0>=KW_Extension && LA256_0<=KW_Throws)||(LA256_0>=KW_Public && LA256_0<=KW_Transient)||(LA256_0>=KW_Def && LA256_0<=KW_Create)||(LA256_0>=KW_AFTER && LA256_0<=KW_Import)||LA256_0==RULE_ID) ) {
                alt256=1;
            }
            else if ( (LA256_0==KW_Super) ) {
                alt256=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 256, 0, input);

                throw nvae;
            }
            switch (alt256) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getIdOrSuper_FeatureCallIDParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    ruleFeatureCallID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getIdOrSuper_SuperKeyword_1ElementType());
                      		
                    }
                    kw=(Token)match(input,KW_Super,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(kw);
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXBooleanLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXBooleanLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXBooleanLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXBooleanLiteral=ruleXBooleanLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXBooleanLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXBooleanLiteral() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token lv_isTrue_2_0=null;

        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXBooleanLiteral_XBooleanLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==KW_False) ) {
                alt257=1;
            }
            else if ( (LA257_0==KW_True) ) {
                alt257=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 257, 0, input);

                throw nvae;
            }
            switch (alt257) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXBooleanLiteral_FalseKeyword_1_0ElementType());
                      			
                    }
                    otherlv_1=(Token)match(input,KW_False,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_1);
                      			
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markLeaf(elementTypeProvider.getXBooleanLiteral_IsTrueTrueKeyword_1_1_0ElementType());
                      					
                    }
                    lv_isTrue_2_0=(Token)match(input,KW_True,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneLeaf(lv_isTrue_2_0);
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXNullLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXNullLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXNullLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNullLiteral=ruleXNullLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNullLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXNullLiteral() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;

        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXNullLiteral_XNullLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXNullLiteral_NullKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Null,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXNumberLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXNumberLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXNumberLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXNumberLiteral=ruleXNumberLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXNumberLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXNumberLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean lv_value_1_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXNumberLiteral_XNumberLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXNumberLiteral_ValueNumberParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_1_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXTypeLiteral() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXTypeLiteral = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXTypeLiteralElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXTypeLiteral=ruleXTypeLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXTypeLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXTypeLiteral() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Boolean lv_arrayDimensions_4_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXTypeLiteral_XTypeLiteralAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXTypeLiteral_TypeofKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Typeof,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXTypeLiteral_LeftParenthesisKeyword_2ElementType());
              		
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_2);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					if (!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXTypeLiteral_TypeJvmTypeCrossReference_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_129);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

                if ( (LA258_0==KW_LeftSquareBracket) ) {
                    alt258=1;
                }


                switch (alt258) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markComposite(elementTypeProvider.getXTypeLiteral_ArrayDimensionsArrayBracketsParserRuleCall_4_0ElementType());
            	      				
            	    }
            	    pushFollow(FOLLOW_129);
            	    lv_arrayDimensions_4_0=ruleArrayBrackets();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneComposite();
            	      					if(!current) {
            	      						associateWithSemanticElement();
            	      						current = true;
            	      					}
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXTypeLiteral_RightParenthesisKeyword_5ElementType());
              		
            }
            otherlv_5=(Token)match(input,KW_RightParenthesis,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_5);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXThrowExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXThrowExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXThrowExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXThrowExpression=ruleXThrowExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXThrowExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXThrowExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Boolean lv_expression_2_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXThrowExpression_XThrowExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXThrowExpression_ThrowKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Throw,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXThrowExpression_ExpressionXExpressionParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_2_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXReturnExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXReturnExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXReturnExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXReturnExpression=ruleXReturnExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXReturnExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXReturnExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Boolean lv_expression_2_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getXReturnExpression_XReturnExpressionAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXReturnExpression_ReturnKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_Return,FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            int alt259=2;
            alt259 = dfa259.predict(input);
            switch (alt259) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markComposite(elementTypeProvider.getXReturnExpression_ExpressionXExpressionParserRuleCall_2_0ElementType());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_2_0=ruleXExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneComposite();
                      					if(!current) {
                      						associateWithSemanticElement();
                      						current = true;
                      					}
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXSynchronizedExpression() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXSynchronizedExpression = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXSynchronizedExpressionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXSynchronizedExpression=ruleXSynchronizedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXSynchronizedExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXSynchronizedExpression() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Boolean lv_param_3_0 = null;

        Boolean lv_expression_5_0 = null;


        try {
            {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              						precedeComposite(elementTypeProvider.getXSynchronizedExpression_XSynchronizedExpressionAction_0_0_0ElementType());
              						doneComposite();
              						associateWithSemanticElement();
              					
            }

            }

            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXSynchronizedExpression_SynchronizedKeyword_0_0_1ElementType());
              				
            }
            otherlv_1=(Token)match(input,KW_Synchronized,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_1);
              				
            }
            if ( state.backtracking==0 ) {

              					markLeaf(elementTypeProvider.getXSynchronizedExpression_LeftParenthesisKeyword_0_0_2ElementType());
              				
            }
            otherlv_2=(Token)match(input,KW_LeftParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneLeaf(otherlv_2);
              				
            }

            }


            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXSynchronizedExpression_ParamXExpressionParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_64);
            lv_param_3_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXSynchronizedExpression_RightParenthesisKeyword_2ElementType());
              		
            }
            otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_4);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXSynchronizedExpression_ExpressionXExpressionParserRuleCall_3_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_5_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXCatchClause() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXCatchClause = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXCatchClauseElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXCatchClause=ruleXCatchClause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXCatchClause; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXCatchClause() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Boolean lv_declaredParam_2_0 = null;

        Boolean lv_expression_4_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				markLeaf(elementTypeProvider.getXCatchClause_CatchKeyword_0ElementType());
              			
            }
            otherlv_0=(Token)match(input,KW_Catch,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				doneLeaf(otherlv_0);
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXCatchClause_LeftParenthesisKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_LeftParenthesis,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXCatchClause_DeclaredParamFullJvmFormalParameterParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_64);
            lv_declaredParam_2_0=ruleFullJvmFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXCatchClause_RightParenthesisKeyword_3ElementType());
              		
            }
            otherlv_3=(Token)match(input,KW_RightParenthesis,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_3);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXCatchClause_ExpressionXExpressionParserRuleCall_4_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expression_4_0=ruleXExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleQualifiedName() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleQualifiedName = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getQualifiedNameElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedName=ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleQualifiedName() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getQualifiedName_ValidIDParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_54);
            ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            loop260:
            do {
                int alt260=2;
                alt260 = dfa260.predict(input);
                switch (alt260) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      					markLeaf(elementTypeProvider.getQualifiedName_FullStopKeyword_1_0ElementType());
            	      				
            	    }
            	    kw=(Token)match(input,KW_FullStop,FOLLOW_3); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					doneLeaf(kw);
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				markComposite(elementTypeProvider.getQualifiedName_ValidIDParserRuleCall_1_1ElementType());
            	      			
            	    }
            	    pushFollow(FOLLOW_54);
            	    ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				doneComposite();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop260;
                }
            } while (true);


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleNumber() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleNumber = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getNumberElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    public final Boolean ruleNumber() throws RecognitionException {
        Boolean current = false;

        Token this_HEX_0=null;
        Token this_INT_1=null;
        Token this_DECIMAL_2=null;
        Token kw=null;
        Token this_INT_4=null;
        Token this_DECIMAL_5=null;


        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();

        try {
            {
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==RULE_HEX) ) {
                alt264=1;
            }
            else if ( ((LA264_0>=RULE_INT && LA264_0<=RULE_DECIMAL)) ) {
                alt264=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;
            }
            switch (alt264) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markLeaf(elementTypeProvider.getNumber_HEXTerminalRuleCall_0ElementType());
                      		
                    }
                    this_HEX_0=(Token)match(input,RULE_HEX,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			doneLeaf(this_HEX_0);
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    {
                    int alt261=2;
                    int LA261_0 = input.LA(1);

                    if ( (LA261_0==RULE_INT) ) {
                        alt261=1;
                    }
                    else if ( (LA261_0==RULE_DECIMAL) ) {
                        alt261=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 261, 0, input);

                        throw nvae;
                    }
                    switch (alt261) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getNumber_INTTerminalRuleCall_1_0_0ElementType());
                              				
                            }
                            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(this_INT_1);
                              				
                            }

                            }
                            break;
                        case 2 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getNumber_DECIMALTerminalRuleCall_1_0_1ElementType());
                              				
                            }
                            this_DECIMAL_2=(Token)match(input,RULE_DECIMAL,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(this_DECIMAL_2);
                              				
                            }

                            }
                            break;

                    }
                    int alt263=2;
                    int LA263_0 = input.LA(1);

                    if ( (LA263_0==KW_FullStop) ) {
                        int LA263_1 = input.LA(2);

                        if ( ((LA263_1>=RULE_INT && LA263_1<=RULE_DECIMAL)) ) {
                            alt263=1;
                        }
                    }
                    switch (alt263) {
                        case 1 :
                            {
                            if ( state.backtracking==0 ) {

                              					markLeaf(elementTypeProvider.getNumber_FullStopKeyword_1_1_0ElementType());
                              				
                            }
                            kw=(Token)match(input,KW_FullStop,FOLLOW_131); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					doneLeaf(kw);
                              				
                            }
                            int alt262=2;
                            int LA262_0 = input.LA(1);

                            if ( (LA262_0==RULE_INT) ) {
                                alt262=1;
                            }
                            else if ( (LA262_0==RULE_DECIMAL) ) {
                                alt262=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 262, 0, input);

                                throw nvae;
                            }
                            switch (alt262) {
                                case 1 :
                                    {
                                    if ( state.backtracking==0 ) {

                                      						markLeaf(elementTypeProvider.getNumber_INTTerminalRuleCall_1_1_1_0ElementType());
                                      					
                                    }
                                    this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						doneLeaf(this_INT_4);
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    {
                                    if ( state.backtracking==0 ) {

                                      						markLeaf(elementTypeProvider.getNumber_DECIMALTerminalRuleCall_1_1_1_1ElementType());
                                      					
                                    }
                                    this_DECIMAL_5=(Token)match(input,RULE_DECIMAL,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						doneLeaf(this_DECIMAL_5);
                                      					
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    public final Boolean entryRuleJvmTypeReference() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmTypeReference = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeReference=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmTypeReference() throws RecognitionException {
        Boolean current = false;

        Boolean this_JvmParameterizedTypeReference_0 = null;

        Boolean this_XFunctionTypeRef_3 = null;


        try {
            {
            int alt266=2;
            int LA266_0 = input.LA(1);

            if ( (LA266_0==KW_Annotation||LA266_0==KW_Create||(LA266_0>=KW_AFTER && LA266_0<=KW_SEPARATOR)||LA266_0==RULE_ID) ) {
                alt266=1;
            }
            else if ( (LA266_0==KW_LeftParenthesis||LA266_0==KW_EqualsSignGreaterThanSign) ) {
                alt266=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 266, 0, input);

                throw nvae;
            }
            switch (alt266) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      				markComposite(elementTypeProvider.getJvmTypeReference_JvmParameterizedTypeReferenceParserRuleCall_0_0ElementType());
                      			
                    }
                    pushFollow(FOLLOW_50);
                    this_JvmParameterizedTypeReference_0=ruleJvmParameterizedTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_JvmParameterizedTypeReference_0;
                      				doneComposite();
                      			
                    }
                    loop265:
                    do {
                        int alt265=2;
                        int LA265_0 = input.LA(1);

                        if ( (LA265_0==KW_LeftSquareBracket) ) {
                            int LA265_2 = input.LA(2);

                            if ( (LA265_2==KW_RightSquareBracket) ) {
                                int LA265_3 = input.LA(3);

                                if ( (synpred67_PsiInternalXtend()) ) {
                                    alt265=1;
                                }


                            }


                        }


                        switch (alt265) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							precedeComposite(elementTypeProvider.getJvmTypeReference_JvmGenericArrayTypeReferenceComponentTypeAction_0_1_0_0ElementType());
                    	      							doneComposite();
                    	      							associateWithSemanticElement();
                    	      						
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getJvmTypeReference_ArrayBracketsParserRuleCall_0_1_0_1ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_50);
                    	    ruleArrayBrackets();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop265;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmTypeReference_XFunctionTypeRefParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_XFunctionTypeRef_3=ruleXFunctionTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_XFunctionTypeRef_3;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleArrayBrackets() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleArrayBrackets = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getArrayBracketsElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayBrackets=ruleArrayBrackets();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayBrackets; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleArrayBrackets() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getArrayBrackets_LeftSquareBracketKeyword_0ElementType());
              		
            }
            kw=(Token)match(input,KW_LeftSquareBracket,FOLLOW_117); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(kw);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getArrayBrackets_RightSquareBracketKeyword_1ElementType());
              		
            }
            kw=(Token)match(input,KW_RightSquareBracket,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(kw);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXFunctionTypeRef() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXFunctionTypeRef = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXFunctionTypeRefElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXFunctionTypeRef=ruleXFunctionTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXFunctionTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXFunctionTypeRef() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Boolean lv_paramTypes_1_0 = null;

        Boolean lv_paramTypes_3_0 = null;

        Boolean lv_returnType_6_0 = null;


        try {
            {
            {
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==KW_LeftParenthesis) ) {
                alt269=1;
            }
            switch (alt269) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFunctionTypeRef_LeftParenthesisKeyword_0_0ElementType());
                      			
                    }
                    otherlv_0=(Token)match(input,KW_LeftParenthesis,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_0);
                      			
                    }
                    int alt268=2;
                    int LA268_0 = input.LA(1);

                    if ( ((LA268_0>=KW_Annotation && LA268_0<=KW_LeftParenthesis)||LA268_0==KW_EqualsSignGreaterThanSign||LA268_0==KW_Create||(LA268_0>=KW_AFTER && LA268_0<=KW_SEPARATOR)||LA268_0==RULE_ID) ) {
                        alt268=1;
                    }
                    switch (alt268) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markComposite(elementTypeProvider.getXFunctionTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_0_0ElementType());
                              						
                            }
                            pushFollow(FOLLOW_28);
                            lv_paramTypes_1_0=ruleJvmTypeReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneComposite();
                              							if(!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }
                            loop267:
                            do {
                                int alt267=2;
                                int LA267_0 = input.LA(1);

                                if ( (LA267_0==KW_Comma) ) {
                                    alt267=1;
                                }


                                switch (alt267) {
                            	case 1 :
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      						markLeaf(elementTypeProvider.getXFunctionTypeRef_CommaKeyword_0_1_1_0ElementType());
                            	      					
                            	    }
                            	    otherlv_2=(Token)match(input,KW_Comma,FOLLOW_29); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						doneLeaf(otherlv_2);
                            	      					
                            	    }
                            	    {
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								markComposite(elementTypeProvider.getXFunctionTypeRef_ParamTypesJvmTypeReferenceParserRuleCall_0_1_1_1_0ElementType());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_28);
                            	    lv_paramTypes_3_0=ruleJvmTypeReference();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								doneComposite();
                            	      								if(!current) {
                            	      									associateWithSemanticElement();
                            	      									current = true;
                            	      								}
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop267;
                                }
                            } while (true);


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXFunctionTypeRef_RightParenthesisKeyword_0_2ElementType());
                      			
                    }
                    otherlv_4=(Token)match(input,KW_RightParenthesis,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_4);
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXFunctionTypeRef_EqualsSignGreaterThanSignKeyword_1ElementType());
              		
            }
            otherlv_5=(Token)match(input,KW_EqualsSignGreaterThanSign,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_5);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getXFunctionTypeRef_ReturnTypeJvmTypeReferenceParserRuleCall_2_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_returnType_6_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmParameterizedTypeReference() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmParameterizedTypeReference = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmParameterizedTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmParameterizedTypeReference=ruleJvmParameterizedTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmParameterizedTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmParameterizedTypeReference() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Boolean lv_arguments_2_0 = null;

        Boolean lv_arguments_4_0 = null;

        Boolean lv_arguments_10_0 = null;

        Boolean lv_arguments_12_0 = null;


        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              					if (!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmParameterizedTypeReference_TypeJvmTypeCrossReference_0_0ElementType());
              				
            }
            pushFollow(FOLLOW_132);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              				
            }

            }


            }
            int alt274=2;
            alt274 = dfa274.predict(input);
            switch (alt274) {
                case 1 :
                    {
                    {
                    if ( state.backtracking==0 ) {

                      					markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_LessThanSignKeyword_1_0ElementType());
                      				
                    }
                    otherlv_1=(Token)match(input,KW_LessThanSign,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					doneLeaf(otherlv_1);
                      				
                    }

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_arguments_2_0=ruleJvmArgumentTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    loop270:
                    do {
                        int alt270=2;
                        int LA270_0 = input.LA(1);

                        if ( (LA270_0==KW_Comma) ) {
                            alt270=1;
                        }


                        switch (alt270) {
                    	case 1 :
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      					markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_CommaKeyword_1_2_0ElementType());
                    	      				
                    	    }
                    	    otherlv_3=(Token)match(input,KW_Comma,FOLLOW_53); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					doneLeaf(otherlv_3);
                    	      				
                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_2_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    lv_arguments_4_0=ruleJvmArgumentTypeReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop270;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_GreaterThanSignKeyword_1_3ElementType());
                      			
                    }
                    otherlv_5=(Token)match(input,KW_GreaterThanSign,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_5);
                      			
                    }
                    loop273:
                    do {
                        int alt273=2;
                        alt273 = dfa273.predict(input);
                        switch (alt273) {
                    	case 1 :
                    	    {
                    	    {
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								precedeComposite(elementTypeProvider.getJvmParameterizedTypeReference_JvmInnerTypeReferenceOuterAction_1_4_0_0_0ElementType());
                    	      								doneComposite();
                    	      								associateWithSemanticElement();
                    	      							
                    	    }

                    	    }

                    	    if ( state.backtracking==0 ) {

                    	      							markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_FullStopKeyword_1_4_0_0_1ElementType());
                    	      						
                    	    }
                    	    otherlv_7=(Token)match(input,KW_FullStop,FOLLOW_3); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneLeaf(otherlv_7);
                    	      						
                    	    }

                    	    }


                    	    }
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							if (!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getJvmParameterizedTypeReference_TypeJvmTypeCrossReference_1_4_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_55);
                    	    ruleValidID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    int alt272=2;
                    	    alt272 = dfa272.predict(input);
                    	    switch (alt272) {
                    	        case 1 :
                    	            {
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              							markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_LessThanSignKeyword_1_4_2_0ElementType());
                    	              						
                    	            }
                    	            otherlv_9=(Token)match(input,KW_LessThanSign,FOLLOW_53); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              							doneLeaf(otherlv_9);
                    	              						
                    	            }

                    	            }
                    	            {
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_1_0ElementType());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_10);
                    	            lv_arguments_10_0=ruleJvmArgumentTypeReference();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								doneComposite();
                    	              								if(!current) {
                    	              									associateWithSemanticElement();
                    	              									current = true;
                    	              								}
                    	              							
                    	            }

                    	            }


                    	            }
                    	            loop271:
                    	            do {
                    	                int alt271=2;
                    	                int LA271_0 = input.LA(1);

                    	                if ( (LA271_0==KW_Comma) ) {
                    	                    alt271=1;
                    	                }


                    	                switch (alt271) {
                    	            	case 1 :
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_CommaKeyword_1_4_2_2_0ElementType());
                    	            	      						
                    	            	    }
                    	            	    otherlv_11=(Token)match(input,KW_Comma,FOLLOW_53); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      							doneLeaf(otherlv_11);
                    	            	      						
                    	            	    }
                    	            	    {
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									markComposite(elementTypeProvider.getJvmParameterizedTypeReference_ArgumentsJvmArgumentTypeReferenceParserRuleCall_1_4_2_2_1_0ElementType());
                    	            	      								
                    	            	    }
                    	            	    pushFollow(FOLLOW_10);
                    	            	    lv_arguments_12_0=ruleJvmArgumentTypeReference();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      									doneComposite();
                    	            	      									if(!current) {
                    	            	      										associateWithSemanticElement();
                    	            	      										current = true;
                    	            	      									}
                    	            	      								
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop271;
                    	                }
                    	            } while (true);

                    	            if ( state.backtracking==0 ) {

                    	              						markLeaf(elementTypeProvider.getJvmParameterizedTypeReference_GreaterThanSignKeyword_1_4_2_3ElementType());
                    	              					
                    	            }
                    	            otherlv_13=(Token)match(input,KW_GreaterThanSign,FOLLOW_54); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						doneLeaf(otherlv_13);
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop273;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmArgumentTypeReference() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmArgumentTypeReference = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmArgumentTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmArgumentTypeReference=ruleJvmArgumentTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmArgumentTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmArgumentTypeReference() throws RecognitionException {
        Boolean current = false;

        Boolean this_JvmTypeReference_0 = null;

        Boolean this_JvmWildcardTypeReference_1 = null;


        try {
            {
            int alt275=2;
            int LA275_0 = input.LA(1);

            if ( ((LA275_0>=KW_Annotation && LA275_0<=KW_LeftParenthesis)||LA275_0==KW_EqualsSignGreaterThanSign||LA275_0==KW_Create||(LA275_0>=KW_AFTER && LA275_0<=KW_SEPARATOR)||LA275_0==RULE_ID) ) {
                alt275=1;
            }
            else if ( (LA275_0==KW_QuestionMark) ) {
                alt275=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 275, 0, input);

                throw nvae;
            }
            switch (alt275) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmArgumentTypeReference_JvmTypeReferenceParserRuleCall_0ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmTypeReference_0=ruleJvmTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmTypeReference_0;
                      			doneComposite();
                      		
                    }

                    }
                    break;
                case 2 :
                    {
                    if ( state.backtracking==0 ) {

                      			markComposite(elementTypeProvider.getJvmArgumentTypeReference_JvmWildcardTypeReferenceParserRuleCall_1ElementType());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_JvmWildcardTypeReference_1=ruleJvmWildcardTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JvmWildcardTypeReference_1;
                      			doneComposite();
                      		
                    }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmWildcardTypeReference() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmWildcardTypeReference = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmWildcardTypeReferenceElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmWildcardTypeReference=ruleJvmWildcardTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmWildcardTypeReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmWildcardTypeReference() throws RecognitionException {
        Boolean current = false;

        Token otherlv_1=null;
        Boolean lv_constraints_2_0 = null;

        Boolean lv_constraints_3_0 = null;

        Boolean lv_constraints_4_0 = null;

        Boolean lv_constraints_5_0 = null;


        try {
            {
            {
            {
            if ( state.backtracking==0 ) {

              				precedeComposite(elementTypeProvider.getJvmWildcardTypeReference_JvmWildcardTypeReferenceAction_0ElementType());
              				doneComposite();
              				associateWithSemanticElement();
              			
            }

            }

            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmWildcardTypeReference_QuestionMarkKeyword_1ElementType());
              		
            }
            otherlv_1=(Token)match(input,KW_QuestionMark,FOLLOW_133); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_1);
              		
            }
            int alt278=3;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==KW_Extends) ) {
                alt278=1;
            }
            else if ( (LA278_0==KW_Super) ) {
                alt278=2;
            }
            switch (alt278) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmUpperBoundParserRuleCall_2_0_0_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_134);
                    lv_constraints_2_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    loop276:
                    do {
                        int alt276=2;
                        int LA276_0 = input.LA(1);

                        if ( (LA276_0==KW_Ampersand) ) {
                            alt276=1;
                        }


                        switch (alt276) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmUpperBoundAndedParserRuleCall_2_0_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_134);
                    	    lv_constraints_3_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop276;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmLowerBoundParserRuleCall_2_1_0_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_134);
                    lv_constraints_4_0=ruleJvmLowerBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      							if(!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    loop277:
                    do {
                        int alt277=2;
                        int LA277_0 = input.LA(1);

                        if ( (LA277_0==KW_Ampersand) ) {
                            alt277=1;
                        }


                        switch (alt277) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							markComposite(elementTypeProvider.getJvmWildcardTypeReference_ConstraintsJvmLowerBoundAndedParserRuleCall_2_1_1_0ElementType());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_134);
                    	    lv_constraints_5_0=ruleJvmLowerBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							doneComposite();
                    	      							if(!current) {
                    	      								associateWithSemanticElement();
                    	      								current = true;
                    	      							}
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop277;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmUpperBound() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmUpperBound = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmUpperBoundElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBound=ruleJvmUpperBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmUpperBound() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Boolean lv_typeReference_1_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmUpperBound_ExtendsKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Extends,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmUpperBound_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmUpperBoundAnded() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmUpperBoundAnded = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmUpperBoundAndedElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmUpperBoundAnded=ruleJvmUpperBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmUpperBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmUpperBoundAnded() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Boolean lv_typeReference_1_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmUpperBoundAnded_AmpersandKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Ampersand,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmUpperBoundAnded_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmLowerBound() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmLowerBound = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmLowerBoundElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBound=ruleJvmLowerBound();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBound; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmLowerBound() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Boolean lv_typeReference_1_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmLowerBound_SuperKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Super,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmLowerBound_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmLowerBoundAnded() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmLowerBoundAnded = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmLowerBoundAndedElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmLowerBoundAnded=ruleJvmLowerBoundAnded();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmLowerBoundAnded; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmLowerBoundAnded() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Boolean lv_typeReference_1_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getJvmLowerBoundAnded_AmpersandKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Ampersand,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmLowerBoundAnded_TypeReferenceJvmTypeReferenceParserRuleCall_1_0ElementType());
              				
            }
            pushFollow(FOLLOW_2);
            lv_typeReference_1_0=ruleJvmTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleJvmTypeParameter() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleJvmTypeParameter = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getJvmTypeParameterElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleJvmTypeParameter=ruleJvmTypeParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJvmTypeParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleJvmTypeParameter() throws RecognitionException {
        Boolean current = false;

        Boolean lv_name_0_0 = null;

        Boolean lv_constraints_1_0 = null;

        Boolean lv_constraints_2_0 = null;


        try {
            {
            {
            {
            {
            if ( state.backtracking==0 ) {

              					markComposite(elementTypeProvider.getJvmTypeParameter_NameValidIDParserRuleCall_0_0ElementType());
              				
            }
            pushFollow(FOLLOW_135);
            lv_name_0_0=ruleValidID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					doneComposite();
              					if(!current) {
              						associateWithSemanticElement();
              						current = true;
              					}
              				
            }

            }


            }
            int alt280=2;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==KW_Extends) ) {
                alt280=1;
            }
            switch (alt280) {
                case 1 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getJvmTypeParameter_ConstraintsJvmUpperBoundParserRuleCall_1_0_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_constraints_1_0=ruleJvmUpperBound();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }
                    loop279:
                    do {
                        int alt279=2;
                        int LA279_0 = input.LA(1);

                        if ( (LA279_0==KW_Ampersand) ) {
                            alt279=1;
                        }


                        switch (alt279) {
                    	case 1 :
                    	    {
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						markComposite(elementTypeProvider.getJvmTypeParameter_ConstraintsJvmUpperBoundAndedParserRuleCall_1_1_0ElementType());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_134);
                    	    lv_constraints_2_0=ruleJvmUpperBoundAnded();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						doneComposite();
                    	      						if(!current) {
                    	      							associateWithSemanticElement();
                    	      							current = true;
                    	      						}
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop279;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleQualifiedNameWithWildcard() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleQualifiedNameWithWildcard = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getQualifiedNameWithWildcardElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameWithWildcard; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleQualifiedNameWithWildcard() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markComposite(elementTypeProvider.getQualifiedNameWithWildcard_QualifiedNameParserRuleCall_0ElementType());
              		
            }
            pushFollow(FOLLOW_136);
            ruleQualifiedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneComposite();
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getQualifiedNameWithWildcard_FullStopKeyword_1ElementType());
              		
            }
            kw=(Token)match(input,KW_FullStop,FOLLOW_137); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(kw);
              		
            }
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getQualifiedNameWithWildcard_AsteriskKeyword_2ElementType());
              		
            }
            kw=(Token)match(input,KW_Asterisk,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(kw);
              		
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXImportSection() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXImportSection = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXImportSectionElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportSection=ruleXImportSection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportSection; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXImportSection() throws RecognitionException {
        Boolean current = false;

        Boolean lv_importDeclarations_0_0 = null;


        try {
            {
            int cnt281=0;
            loop281:
            do {
                int alt281=2;
                int LA281_0 = input.LA(1);

                if ( (LA281_0==KW_Import) ) {
                    alt281=1;
                }


                switch (alt281) {
            	case 1 :
            	    {
            	    {
            	    if ( state.backtracking==0 ) {

            	      				markComposite(elementTypeProvider.getXImportSection_ImportDeclarationsXImportDeclarationParserRuleCall_0ElementType());
            	      			
            	    }
            	    pushFollow(FOLLOW_138);
            	    lv_importDeclarations_0_0=ruleXImportDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				doneComposite();
            	      				if(!current) {
            	      					associateWithSemanticElement();
            	      					current = true;
            	      				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt281 >= 1 ) break loop281;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(281, input);
                        throw eee;
                }
                cnt281++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleXImportDeclaration() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleXImportDeclaration = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getXImportDeclarationElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXImportDeclaration=ruleXImportDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXImportDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleXImportDeclaration() throws RecognitionException {
        Boolean current = false;

        Token otherlv_0=null;
        Token lv_static_1_0=null;
        Token lv_extension_2_0=null;
        Token lv_wildcard_4_0=null;
        Token otherlv_8=null;
        Boolean lv_memberName_5_0 = null;

        Boolean lv_importedNamespace_7_0 = null;


        try {
            {
            {
            if ( state.backtracking==0 ) {

              			markLeaf(elementTypeProvider.getXImportDeclaration_ImportKeyword_0ElementType());
              		
            }
            otherlv_0=(Token)match(input,KW_Import,FOLLOW_139); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			doneLeaf(otherlv_0);
              		
            }
            int alt284=3;
            alt284 = dfa284.predict(input);
            switch (alt284) {
                case 1 :
                    {
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							markLeaf(elementTypeProvider.getXImportDeclaration_StaticStaticKeyword_1_0_0_0ElementType());
                      						
                    }
                    lv_static_1_0=(Token)match(input,KW_Static,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneLeaf(lv_static_1_0);
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }

                    }


                    }
                    int alt282=2;
                    int LA282_0 = input.LA(1);

                    if ( (LA282_0==KW_Extension) ) {
                        alt282=1;
                    }
                    switch (alt282) {
                        case 1 :
                            {
                            {
                            if ( state.backtracking==0 ) {

                              							markLeaf(elementTypeProvider.getXImportDeclaration_ExtensionExtensionKeyword_1_0_1_0ElementType());
                              						
                            }
                            lv_extension_2_0=(Token)match(input,KW_Extension,FOLLOW_140); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							doneLeaf(lv_extension_2_0);
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (!current) {
                              								associateWithSemanticElement();
                              								current = true;
                              							}
                              						
                            }

                            }


                            }
                            break;

                    }
                    {
                    {
                    if ( state.backtracking==0 ) {

                      							if (!current) {
                      								associateWithSemanticElement();
                      								current = true;
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							markComposite(elementTypeProvider.getXImportDeclaration_ImportedTypeJvmDeclaredTypeCrossReference_1_0_2_0ElementType());
                      						
                    }
                    pushFollow(FOLLOW_141);
                    ruleQualifiedNameInStaticImport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							doneComposite();
                      						
                    }

                    }


                    }
                    int alt283=2;
                    int LA283_0 = input.LA(1);

                    if ( (LA283_0==KW_Asterisk) ) {
                        alt283=1;
                    }
                    else if ( (LA283_0==KW_Annotation||LA283_0==KW_Create||(LA283_0>=KW_AFTER && LA283_0<=KW_SEPARATOR)||LA283_0==RULE_ID) ) {
                        alt283=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 283, 0, input);

                        throw nvae;
                    }
                    switch (alt283) {
                        case 1 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markLeaf(elementTypeProvider.getXImportDeclaration_WildcardAsteriskKeyword_1_0_3_0_0ElementType());
                              							
                            }
                            lv_wildcard_4_0=(Token)match(input,KW_Asterisk,FOLLOW_35); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneLeaf(lv_wildcard_4_0);
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            {
                            {
                            {
                            if ( state.backtracking==0 ) {

                              								markComposite(elementTypeProvider.getXImportDeclaration_MemberNameValidIDParserRuleCall_1_0_3_1_0ElementType());
                              							
                            }
                            pushFollow(FOLLOW_35);
                            lv_memberName_5_0=ruleValidID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								doneComposite();
                              								if(!current) {
                              									associateWithSemanticElement();
                              									current = true;
                              								}
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						if (!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXImportDeclaration_ImportedTypeJvmDeclaredTypeCrossReference_1_1_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    ruleQualifiedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    {
                    {
                    {
                    if ( state.backtracking==0 ) {

                      						markComposite(elementTypeProvider.getXImportDeclaration_ImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_2_0ElementType());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    lv_importedNamespace_7_0=ruleQualifiedNameWithWildcard();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						doneComposite();
                      						if(!current) {
                      							associateWithSemanticElement();
                      							current = true;
                      						}
                      					
                    }

                    }


                    }


                    }
                    break;

            }
            int alt285=2;
            int LA285_0 = input.LA(1);

            if ( (LA285_0==KW_Semicolon) ) {
                alt285=1;
            }
            switch (alt285) {
                case 1 :
                    {
                    if ( state.backtracking==0 ) {

                      				markLeaf(elementTypeProvider.getXImportDeclaration_SemicolonKeyword_2ElementType());
                      			
                    }
                    otherlv_8=(Token)match(input,KW_Semicolon,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				doneLeaf(otherlv_8);
                      			
                    }

                    }
                    break;

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean entryRuleQualifiedNameInStaticImport() throws RecognitionException {
        Boolean current = false;

        Boolean iv_ruleQualifiedNameInStaticImport = null;


        try {
            {
            if ( state.backtracking==0 ) {
               markComposite(elementTypeProvider.getQualifiedNameInStaticImportElementType()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQualifiedNameInStaticImport=ruleQualifiedNameInStaticImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQualifiedNameInStaticImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final Boolean ruleQualifiedNameInStaticImport() throws RecognitionException {
        Boolean current = false;

        Token kw=null;

        try {
            {
            int cnt286=0;
            loop286:
            do {
                int alt286=2;
                switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    int LA286_2 = input.LA(2);

                    if ( (LA286_2==KW_FullStop) ) {
                        alt286=1;
                    }


                    }
                    break;
                case KW_Create:
                    {
                    int LA286_3 = input.LA(2);

                    if ( (LA286_3==KW_FullStop) ) {
                        alt286=1;
                    }


                    }
                    break;
                case KW_Annotation:
                    {
                    int LA286_4 = input.LA(2);

                    if ( (LA286_4==KW_FullStop) ) {
                        alt286=1;
                    }


                    }
                    break;
                case KW_AFTER:
                    {
                    int LA286_5 = input.LA(2);

                    if ( (LA286_5==KW_FullStop) ) {
                        alt286=1;
                    }


                    }
                    break;
                case KW_BEFORE:
                    {
                    int LA286_6 = input.LA(2);

                    if ( (LA286_6==KW_FullStop) ) {
                        alt286=1;
                    }


                    }
                    break;
                case KW_SEPARATOR:
                    {
                    int LA286_7 = input.LA(2);

                    if ( (LA286_7==KW_FullStop) ) {
                        alt286=1;
                    }


                    }
                    break;

                }

                switch (alt286) {
            	case 1 :
            	    {
            	    if ( state.backtracking==0 ) {

            	      			markComposite(elementTypeProvider.getQualifiedNameInStaticImport_ValidIDParserRuleCall_0ElementType());
            	      		
            	    }
            	    pushFollow(FOLLOW_136);
            	    ruleValidID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			doneComposite();
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      			markLeaf(elementTypeProvider.getQualifiedNameInStaticImport_FullStopKeyword_1ElementType());
            	      		
            	    }
            	    kw=(Token)match(input,KW_FullStop,FOLLOW_142); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			doneLeaf(kw);
            	      		
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt286 >= 1 ) break loop286;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(286, input);
                        throw eee;
                }
                cnt286++;
            } while (true);


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return current;
    }
    public final void synpred1_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_41);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_3);
        ruleCreateExtensionInfo();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_42);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred2_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_40);
        ruleTypeReferenceWithTypeArgs();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_42);
        ruleFunctionID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred3_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_40);
        ruleTypeReferenceNoTypeArgs();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_42);
        ruleFunctionID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred4_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_3);
        ruleCreateExtensionInfo();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_42);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred5_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred6_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred7_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred8_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred9_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleOpMultiAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred10_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_QuestionMark,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred11_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred12_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        if ( input.LA(1)==KW_Finally||input.LA(1)==KW_Catch ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred13_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_Catch,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred14_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_Finally,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred15_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_Catch,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred16_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_Finally,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred18_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_68);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleInnerVarID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred19_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_68);
        ruleJvmTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleInnerVarID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred20_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_LeftCurlyBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred21_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred22_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred23_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt288=2;
        int LA288_0 = input.LA(1);

        if ( (LA288_0==KW_Package||LA288_0==KW_Class||(LA288_0>=KW_Extends && LA288_0<=KW_Implements)||(LA288_0>=KW_Interface && LA288_0<=KW_LeftParenthesis)||LA288_0==KW_EqualsSignGreaterThanSign||(LA288_0>=KW_Extension && LA288_0<=KW_Throws)||(LA288_0>=KW_Public && LA288_0<=KW_Transient)||(LA288_0>=KW_Def && LA288_0<=KW_Create)||(LA288_0>=KW_AFTER && LA288_0<=KW_Import)||LA288_0==RULE_ID) ) {
            alt288=1;
        }
        switch (alt288) {
            case 1 :
                {
                {
                {
                pushFollow(FOLLOW_115);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                loop287:
                do {
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( (LA287_0==KW_Comma) ) {
                        alt287=1;
                    }


                    switch (alt287) {
                	case 1 :
                	    {
                	    match(input,KW_Comma,FOLLOW_67); if (state.failed) return ;
                	    {
                	    {
                	    pushFollow(FOLLOW_115);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop287;
                    }
                } while (true);


                }
                break;

        }
        {
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred24_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred25_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        match(input,KW_LeftParenthesis,FOLLOW_67); if (state.failed) return ;
        {
        {
        pushFollow(FOLLOW_56);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred26_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_56);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred27_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_New,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred28_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred29_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        {
        pushFollow(FOLLOW_58);
        ruleValidID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_EqualsSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred32_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_NumberSign,FOLLOW_51); if (state.failed) return ;
        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred33_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_NumberSign,FOLLOW_51); if (state.failed) return ;
        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred34_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleOpOr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred35_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleOpAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred36_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleOpEquality();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred37_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_Instanceof,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred38_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleOpCompare();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred39_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleOpOther();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred40_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        match(input,KW_GreaterThanSign,FOLLOW_101); if (state.failed) return ;
        match(input,KW_GreaterThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred41_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        match(input,KW_LessThanSign,FOLLOW_52); if (state.failed) return ;
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred42_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleOpAdd();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred43_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleOpMulti();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred44_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_As,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred45_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        {
        {
        pushFollow(FOLLOW_2);
        ruleOpPostfix();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred46_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt289=2;
        int LA289_0 = input.LA(1);

        if ( (LA289_0==KW_FullStop) ) {
            alt289=1;
        }
        else if ( (LA289_0==KW_ColonColon) ) {
            alt289=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 289, 0, input);

            throw nvae;
        }
        switch (alt289) {
            case 1 :
                {
                match(input,KW_FullStop,FOLLOW_108); if (state.failed) return ;

                }
                break;
            case 2 :
                {
                {
                {
                match(input,KW_ColonColon,FOLLOW_108); if (state.failed) return ;

                }


                }


                }
                break;

        }
        {
        {
        pushFollow(FOLLOW_58);
        ruleFeatureCallID();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        pushFollow(FOLLOW_2);
        ruleOpSingleAssign();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred47_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt290=3;
        switch ( input.LA(1) ) {
        case KW_FullStop:
            {
            alt290=1;
            }
            break;
        case KW_QuestionMarkFullStop:
            {
            alt290=2;
            }
            break;
        case KW_ColonColon:
            {
            alt290=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 290, 0, input);

            throw nvae;
        }

        switch (alt290) {
            case 1 :
                {
                match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                {
                {
                {
                match(input,KW_QuestionMarkFullStop,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                {
                {
                {
                match(input,KW_ColonColon,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }
    }
    public final void synpred48_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred49_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt292=2;
        int LA292_0 = input.LA(1);

        if ( (LA292_0==KW_Package||LA292_0==KW_Class||(LA292_0>=KW_Extends && LA292_0<=KW_Implements)||(LA292_0>=KW_Interface && LA292_0<=KW_LeftParenthesis)||LA292_0==KW_EqualsSignGreaterThanSign||(LA292_0>=KW_Extension && LA292_0<=KW_Throws)||(LA292_0>=KW_Public && LA292_0<=KW_Transient)||(LA292_0>=KW_Def && LA292_0<=KW_Create)||(LA292_0>=KW_AFTER && LA292_0<=KW_Import)||LA292_0==RULE_ID) ) {
            alt292=1;
        }
        switch (alt292) {
            case 1 :
                {
                {
                {
                pushFollow(FOLLOW_115);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                loop291:
                do {
                    int alt291=2;
                    int LA291_0 = input.LA(1);

                    if ( (LA291_0==KW_Comma) ) {
                        alt291=1;
                    }


                    switch (alt291) {
                	case 1 :
                	    {
                	    match(input,KW_Comma,FOLLOW_67); if (state.failed) return ;
                	    {
                	    {
                	    pushFollow(FOLLOW_115);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop291;
                    }
                } while (true);


                }
                break;

        }
        {
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred50_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred51_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_Synchronized,FOLLOW_42); if (state.failed) return ;
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred52_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_For,FOLLOW_42); if (state.failed) return ;
        match(input,KW_LeftParenthesis,FOLLOW_67); if (state.failed) return ;
        {
        {
        pushFollow(FOLLOW_56);
        ruleJvmFormalParameter();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        match(input,KW_Colon,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred53_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred55_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        int alt294=2;
        int LA294_0 = input.LA(1);

        if ( (LA294_0==KW_Package||LA294_0==KW_Class||(LA294_0>=KW_Extends && LA294_0<=KW_Implements)||(LA294_0>=KW_Interface && LA294_0<=KW_LeftParenthesis)||LA294_0==KW_EqualsSignGreaterThanSign||(LA294_0>=KW_Extension && LA294_0<=KW_Throws)||(LA294_0>=KW_Public && LA294_0<=KW_Transient)||(LA294_0>=KW_Def && LA294_0<=KW_Create)||(LA294_0>=KW_AFTER && LA294_0<=KW_Import)||LA294_0==RULE_ID) ) {
            alt294=1;
        }
        switch (alt294) {
            case 1 :
                {
                {
                {
                pushFollow(FOLLOW_115);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                loop293:
                do {
                    int alt293=2;
                    int LA293_0 = input.LA(1);

                    if ( (LA293_0==KW_Comma) ) {
                        alt293=1;
                    }


                    switch (alt293) {
                	case 1 :
                	    {
                	    match(input,KW_Comma,FOLLOW_67); if (state.failed) return ;
                	    {
                	    {
                	    pushFollow(FOLLOW_115);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop293;
                    }
                } while (true);


                }
                break;

        }
        {
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred57_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_Else,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred59_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleVariableModifier(null);

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred60_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        match(input,KW_LeftParenthesis,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred61_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }
        int alt298=2;
        int LA298_0 = input.LA(1);

        if ( (LA298_0==KW_Package||LA298_0==KW_Class||(LA298_0>=KW_Extends && LA298_0<=KW_Implements)||(LA298_0>=KW_Interface && LA298_0<=KW_LeftParenthesis)||LA298_0==KW_EqualsSignGreaterThanSign||(LA298_0>=KW_Extension && LA298_0<=KW_Throws)||(LA298_0>=KW_Public && LA298_0<=KW_Transient)||(LA298_0>=KW_Def && LA298_0<=KW_Create)||(LA298_0>=KW_AFTER && LA298_0<=KW_Import)||LA298_0==RULE_ID) ) {
            alt298=1;
        }
        switch (alt298) {
            case 1 :
                {
                {
                {
                pushFollow(FOLLOW_115);
                ruleJvmFormalParameter();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                loop297:
                do {
                    int alt297=2;
                    int LA297_0 = input.LA(1);

                    if ( (LA297_0==KW_Comma) ) {
                        alt297=1;
                    }


                    switch (alt297) {
                	case 1 :
                	    {
                	    match(input,KW_Comma,FOLLOW_67); if (state.failed) return ;
                	    {
                	    {
                	    pushFollow(FOLLOW_115);
                	    ruleJvmFormalParameter();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop297;
                    }
                } while (true);


                }
                break;

        }
        {
        {
        match(input,KW_VerticalLine,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    public final void synpred62_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_LeftSquareBracket,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred63_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        if ( input.LA(1)==KW_Package||(input.LA(1)>=KW_Class && input.LA(1)<=KW_LessThanSign)||(input.LA(1)>=KW_Extends && input.LA(1)<=KW_LeftCurlyBracket)||(input.LA(1)>=KW_Interface && input.LA(1)<=KW_LeftParenthesis)||(input.LA(1)>=KW_Extension && input.LA(1)<=KW_New)||(input.LA(1)>=KW_Public && input.LA(1)<=KW_Transient)||(input.LA(1)>=KW_Def && input.LA(1)<=KW_Create)||(input.LA(1)>=KW_AFTER && input.LA(1)<=KW_Import)||input.LA(1)==KW_Try||input.LA(1)==KW_Switch||(input.LA(1)>=KW_NumberSign && input.LA(1)<=KW_LeftSquareBracket)||(input.LA(1)>=KW_PlusSign && input.LA(1)<=KW_HyphenMinus)||input.LA(1)==KW_ExclamationMark||input.LA(1)==KW_If||(input.LA(1)>=KW_For && input.LA(1)<=KW_Return)||(input.LA(1)>=RULE_ID && input.LA(1)<=RULE_RICH_TEXT_START)||(input.LA(1)>=RULE_HEX && input.LA(1)<=RULE_DECIMAL) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    public final void synpred66_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred67_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        pushFollow(FOLLOW_2);
        ruleArrayBrackets();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    public final void synpred68_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }
    public final void synpred69_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        {
        {
        }

        match(input,KW_FullStop,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    public final void synpred70_PsiInternalXtend_fragment() throws RecognitionException {   
        {
        match(input,KW_LessThanSign,FOLLOW_2); if (state.failed) return ;

        }
    }

    public final boolean synpred44_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred36_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred36_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred28_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred28_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred35_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred35_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred27_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred27_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred43_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred38_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred38_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred21_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_PsiInternalXtend() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_PsiInternalXtend_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA25 dfa25 = new DFA25(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA33 dfa33 = new DFA33(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA61 dfa61 = new DFA61(this);
    protected DFA63 dfa63 = new DFA63(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA109 dfa109 = new DFA109(this);
    protected DFA112 dfa112 = new DFA112(this);
    protected DFA115 dfa115 = new DFA115(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA144 dfa144 = new DFA144(this);
    protected DFA150 dfa150 = new DFA150(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA154 dfa154 = new DFA154(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA170 dfa170 = new DFA170(this);
    protected DFA187 dfa187 = new DFA187(this);
    protected DFA186 dfa186 = new DFA186(this);
    protected DFA192 dfa192 = new DFA192(this);
    protected DFA195 dfa195 = new DFA195(this);
    protected DFA205 dfa205 = new DFA205(this);
    protected DFA208 dfa208 = new DFA208(this);
    protected DFA224 dfa224 = new DFA224(this);
    protected DFA223 dfa223 = new DFA223(this);
    protected DFA225 dfa225 = new DFA225(this);
    protected DFA227 dfa227 = new DFA227(this);
    protected DFA236 dfa236 = new DFA236(this);
    protected DFA254 dfa254 = new DFA254(this);
    protected DFA253 dfa253 = new DFA253(this);
    protected DFA255 dfa255 = new DFA255(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA260 dfa260 = new DFA260(this);
    protected DFA274 dfa274 = new DFA274(this);
    protected DFA273 dfa273 = new DFA273(this);
    protected DFA272 dfa272 = new DFA272(this);
    protected DFA284 dfa284 = new DFA284(this);
    static final String dfa_1s = "\22\uffff";
    static final String dfa_2s = "\16\4\4\uffff";
    static final String dfa_3s = "\16\44\4\uffff";
    static final String dfa_4s = "\16\uffff\1\1\1\2\1\3\1\4";
    static final String dfa_5s = "\22\uffff}>";
    static final String[] dfa_6s = {
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "\1\4\1\uffff\1\16\7\uffff\1\17\1\20\1\21\10\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "273:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* otherlv_4= 'class' ( (lv_name_5_0= ruleValidID ) ) (otherlv_6= '<' ( (lv_typeParameters_7_0= ruleJvmTypeParameter ) ) (otherlv_8= ',' ( (lv_typeParameters_9_0= ruleJvmTypeParameter ) ) )* otherlv_10= '>' )? (otherlv_11= 'extends' ( (lv_extends_12_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_13= 'implements' ( (lv_implements_14_0= ruleJvmSuperTypeReference ) ) (otherlv_15= ',' ( (lv_implements_16_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_17= '{' ( (lv_members_18_0= ruleMember ) )* otherlv_19= '}' ) | ( () ( (lv_modifiers_21_0= ruleCommonModifier ) )* otherlv_22= 'interface' ( (lv_name_23_0= ruleValidID ) ) (otherlv_24= '<' ( (lv_typeParameters_25_0= ruleJvmTypeParameter ) ) (otherlv_26= ',' ( (lv_typeParameters_27_0= ruleJvmTypeParameter ) ) )* otherlv_28= '>' )? (otherlv_29= 'extends' ( (lv_extends_30_0= ruleJvmSuperTypeReference ) ) (otherlv_31= ',' ( (lv_extends_32_0= ruleJvmSuperTypeReference ) ) )* )? otherlv_33= '{' ( (lv_members_34_0= ruleMember ) )* otherlv_35= '}' ) | ( () ( (lv_modifiers_37_0= ruleCommonModifier ) )* otherlv_38= 'enum' ( (lv_name_39_0= ruleValidID ) ) otherlv_40= '{' ( ( (lv_members_41_0= ruleXtendEnumLiteral ) ) (otherlv_42= ',' ( (lv_members_43_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_44= ';' )? otherlv_45= '}' ) | ( () ( (lv_modifiers_47_0= ruleCommonModifier ) )* otherlv_48= 'annotation' ( (lv_name_49_0= ruleValidID ) ) otherlv_50= '{' ( (lv_members_51_0= ruleAnnotationField ) )* otherlv_52= '}' ) )";
        }
    }
    static final String dfa_7s = "\32\uffff";
    static final String dfa_8s = "\23\uffff\6\16\1\uffff";
    static final String dfa_9s = "\16\4\1\uffff\1\7\3\uffff\6\4\1\uffff";
    static final String dfa_10s = "\16\155\1\uffff\1\155\3\uffff\6\155\1\uffff";
    static final String dfa_11s = "\16\uffff\1\1\1\uffff\1\2\1\3\1\4\6\uffff\1\5";
    static final String dfa_12s = "\32\uffff}>";
    static final String[] dfa_13s = {
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\20\7\uffff\1\21\1\22\1\17\1\16\1\uffff\1\16\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\16\1\uffff\3\16\77\uffff\1\16",
            "",
            "\1\16\10\uffff\1\25\7\uffff\1\16\20\uffff\1\24\1\uffff\1\26\1\27\1\30\21\uffff\1\16\55\uffff\1\23",
            "",
            "",
            "",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\31\5\16\1\uffff\2\16\4\uffff\16\16\2\uffff\1\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1013:3: ( ( ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) ) (otherlv_12= '=' ( (lv_initialValue_13_0= ruleXAnnotationElementValue ) ) )? (otherlv_14= ';' )? ) | ( () ( (lv_modifiers_16_0= ruleCommonModifier ) )* otherlv_17= 'class' ( (lv_name_18_0= ruleValidID ) ) (otherlv_19= '<' ( (lv_typeParameters_20_0= ruleJvmTypeParameter ) ) (otherlv_21= ',' ( (lv_typeParameters_22_0= ruleJvmTypeParameter ) ) )* otherlv_23= '>' )? (otherlv_24= 'extends' ( (lv_extends_25_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_26= 'implements' ( (lv_implements_27_0= ruleJvmParameterizedTypeReference ) ) (otherlv_28= ',' ( (lv_implements_29_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_30= '{' ( (lv_members_31_0= ruleMember ) )* otherlv_32= '}' ) | ( () ( (lv_modifiers_34_0= ruleCommonModifier ) )* otherlv_35= 'interface' ( (lv_name_36_0= ruleValidID ) ) (otherlv_37= '<' ( (lv_typeParameters_38_0= ruleJvmTypeParameter ) ) (otherlv_39= ',' ( (lv_typeParameters_40_0= ruleJvmTypeParameter ) ) )* otherlv_41= '>' )? (otherlv_42= 'extends' ( (lv_extends_43_0= ruleJvmParameterizedTypeReference ) ) (otherlv_44= ',' ( (lv_extends_45_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_46= '{' ( (lv_members_47_0= ruleMember ) )* otherlv_48= '}' ) | ( () ( (lv_modifiers_50_0= ruleCommonModifier ) )* otherlv_51= 'enum' ( (lv_name_52_0= ruleValidID ) ) otherlv_53= '{' ( ( (lv_members_54_0= ruleXtendEnumLiteral ) ) (otherlv_55= ',' ( (lv_members_56_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_57= ';' )? otherlv_58= '}' ) | ( () ( (lv_modifiers_60_0= ruleCommonModifier ) )* otherlv_61= 'annotation' ( (lv_name_62_0= ruleValidID ) ) otherlv_63= '{' ( (lv_members_64_0= ruleAnnotationField ) )* otherlv_65= '}' ) )";
        }
    }
    static final String dfa_14s = "\20\uffff";
    static final String dfa_15s = "\16\4\2\uffff";
    static final String dfa_16s = "\16\155\2\uffff";
    static final String dfa_17s = "\16\uffff\1\1\1\2";
    static final String dfa_18s = "\20\uffff}>";
    static final String[] dfa_19s = {
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "\1\4\13\uffff\2\17\1\uffff\1\17\5\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\uffff\1\17\1\uffff\3\17\77\uffff\1\17",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "1015:5: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( () ( (lv_modifiers_9_0= ruleCommonModifier ) )* ( (lv_type_10_0= ruleJvmTypeReference ) ) ( (lv_name_11_0= ruleValidID ) ) ) )";
        }
    }
    static final String dfa_20s = "\47\uffff";
    static final String dfa_21s = "\1\uffff\6\10\2\uffff\6\7\30\uffff";
    static final String dfa_22s = "\1\20\6\4\2\uffff\36\4";
    static final String dfa_23s = "\7\155\2\uffff\36\155";
    static final String dfa_24s = "\7\uffff\1\1\1\2\36\uffff";
    static final String dfa_25s = "\47\uffff}>";
    static final String[] dfa_26s = {
            "\1\3\1\7\1\uffff\1\7\25\uffff\1\2\1\uffff\1\4\1\5\1\6\77\uffff\1\1",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\12\1\uffff\1\14\1\15\1\16\17\uffff\1\10\1\uffff\1\7\55\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\12\1\uffff\1\14\1\15\1\16\17\uffff\1\10\1\uffff\1\7\55\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\12\1\uffff\1\14\1\15\1\16\17\uffff\1\10\1\uffff\1\7\55\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\12\1\uffff\1\14\1\15\1\16\17\uffff\1\10\1\uffff\1\7\55\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\12\1\uffff\1\14\1\15\1\16\17\uffff\1\10\1\uffff\1\7\55\uffff\1\11",
            "\3\10\1\7\5\uffff\3\10\1\13\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\12\1\uffff\1\14\1\15\1\16\17\uffff\1\10\1\uffff\1\7\55\uffff\1\11",
            "",
            "",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\10\55\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\43\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\42\1\uffff\1\44\1\45\1\46\17\uffff\1\10\1\uffff\1\7\55\uffff\1\41",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\10\1\7\5\uffff\3\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\43\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\42\1\uffff\1\44\1\45\1\46\17\uffff\1\10\1\uffff\1\7\55\uffff\1\41",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\10\1\7\4\uffff\4\10\1\35\1\10\1\uffff\2\10\3\uffff\1\7\16\10\2\uffff\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\10\1\uffff\1\7\55\uffff\1\33",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\27\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\10\55\uffff\1\25",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\5\uffff\3\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\27\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\10\55\uffff\1\25",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17",
            "\3\7\1\10\4\uffff\4\7\1\21\1\7\1\uffff\2\7\3\uffff\1\10\16\7\2\uffff\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\10\55\uffff\1\17"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA33 extends DFA {

        public DFA33(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 33;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "1069:7: ( (lv_type_6_0= ruleJvmTypeReference ) )?";
        }
    }
    static final String dfa_27s = "\34\uffff";
    static final String dfa_28s = "\25\uffff\6\16\1\uffff";
    static final String dfa_29s = "\16\4\1\uffff\1\7\5\uffff\6\4\1\uffff";
    static final String dfa_30s = "\16\155\1\uffff\1\155\5\uffff\6\155\1\uffff";
    static final String dfa_31s = "\16\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\6\uffff\1\7";
    static final String dfa_32s = "\34\uffff}>";
    static final String[] dfa_33s = {
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "\1\4\1\uffff\1\22\7\uffff\1\23\1\24\1\17\1\16\1\uffff\1\16\1\uffff\1\16\1\uffff\1\21\1\uffff\1\1\1\2\1\3\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\2\16\2\20\1\16\1\uffff\3\16\77\uffff\1\16",
            "",
            "\1\16\10\uffff\1\27\7\uffff\1\16\20\uffff\1\26\1\uffff\1\30\1\31\1\32\21\uffff\1\16\55\uffff\1\25",
            "",
            "",
            "",
            "",
            "",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            "\3\16\5\uffff\1\33\5\16\1\uffff\3\16\1\uffff\1\16\1\uffff\21\16\1\uffff\3\16\17\uffff\1\16\57\uffff\1\16",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "1796:3: ( ( () ( (lv_modifiers_3_0= ruleCommonModifier ) )* ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) ) (otherlv_21= '=' ( (lv_initialValue_22_0= ruleXExpression ) ) )? (otherlv_23= ';' )? ) | ( () ( (lv_modifiers_25_0= ruleCommonModifier ) )* ( (lv_modifiers_26_0= ruleMethodModifier ) ) ( ( (lv_modifiers_27_0= ruleCommonModifier ) ) | ( (lv_modifiers_28_0= ruleMethodModifier ) ) )* (otherlv_29= '<' ( (lv_typeParameters_30_0= ruleJvmTypeParameter ) ) (otherlv_31= ',' ( (lv_typeParameters_32_0= ruleJvmTypeParameter ) ) )* otherlv_33= '>' )? ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) ) ( ( (lv_parameters_49_0= ruleParameter ) ) (otherlv_50= ',' ( (lv_parameters_51_0= ruleParameter ) ) )* )? otherlv_52= ')' (otherlv_53= 'throws' ( (lv_exceptions_54_0= ruleJvmTypeReference ) ) (otherlv_55= ',' ( (lv_exceptions_56_0= ruleJvmTypeReference ) ) )* )? ( ( (lv_expression_57_0= ruleXBlockExpression ) ) | ( (lv_expression_58_0= ruleRichString ) ) | otherlv_59= ';' )? ) | ( () ( (lv_modifiers_61_0= ruleCommonModifier ) )* otherlv_62= 'new' (otherlv_63= '<' ( (lv_typeParameters_64_0= ruleJvmTypeParameter ) ) (otherlv_65= ',' ( (lv_typeParameters_66_0= ruleJvmTypeParameter ) ) )* otherlv_67= '>' )? otherlv_68= '(' ( ( (lv_parameters_69_0= ruleParameter ) ) (otherlv_70= ',' ( (lv_parameters_71_0= ruleParameter ) ) )* )? otherlv_72= ')' (otherlv_73= 'throws' ( (lv_exceptions_74_0= ruleJvmTypeReference ) ) (otherlv_75= ',' ( (lv_exceptions_76_0= ruleJvmTypeReference ) ) )* )? ( (lv_expression_77_0= ruleXBlockExpression ) ) ) | ( () ( (lv_modifiers_79_0= ruleCommonModifier ) )* otherlv_80= 'class' ( (lv_name_81_0= ruleValidID ) ) (otherlv_82= '<' ( (lv_typeParameters_83_0= ruleJvmTypeParameter ) ) (otherlv_84= ',' ( (lv_typeParameters_85_0= ruleJvmTypeParameter ) ) )* otherlv_86= '>' )? (otherlv_87= 'extends' ( (lv_extends_88_0= ruleJvmParameterizedTypeReference ) ) )? (otherlv_89= 'implements' ( (lv_implements_90_0= ruleJvmParameterizedTypeReference ) ) (otherlv_91= ',' ( (lv_implements_92_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_93= '{' ( (lv_members_94_0= ruleMember ) )* otherlv_95= '}' ) | ( () ( (lv_modifiers_97_0= ruleCommonModifier ) )* otherlv_98= 'interface' ( (lv_name_99_0= ruleValidID ) ) (otherlv_100= '<' ( (lv_typeParameters_101_0= ruleJvmTypeParameter ) ) (otherlv_102= ',' ( (lv_typeParameters_103_0= ruleJvmTypeParameter ) ) )* otherlv_104= '>' )? (otherlv_105= 'extends' ( (lv_extends_106_0= ruleJvmParameterizedTypeReference ) ) (otherlv_107= ',' ( (lv_extends_108_0= ruleJvmParameterizedTypeReference ) ) )* )? otherlv_109= '{' ( (lv_members_110_0= ruleMember ) )* otherlv_111= '}' ) | ( () ( (lv_modifiers_113_0= ruleCommonModifier ) )* otherlv_114= 'enum' ( (lv_name_115_0= ruleValidID ) ) otherlv_116= '{' ( ( (lv_members_117_0= ruleXtendEnumLiteral ) ) (otherlv_118= ',' ( (lv_members_119_0= ruleXtendEnumLiteral ) ) )* )? (otherlv_120= ';' )? otherlv_121= '}' ) | ( () ( (lv_modifiers_123_0= ruleCommonModifier ) )* otherlv_124= 'annotation' ( (lv_name_125_0= ruleValidID ) ) otherlv_126= '{' ( (lv_members_127_0= ruleAnnotationField ) )* otherlv_128= '}' ) )";
        }
    }
    static final String dfa_34s = "\24\uffff";
    static final String dfa_35s = "\1\20\2\4\2\uffff\15\4\2\uffff";
    static final String dfa_36s = "\3\155\2\uffff\15\155\2\uffff";
    static final String dfa_37s = "\3\uffff\1\2\1\4\15\uffff\1\1\1\3";
    static final String dfa_38s = "\24\uffff}>";
    static final String[] dfa_39s = {
            "\2\4\1\uffff\1\4\1\uffff\1\3\17\uffff\1\1\1\2\2\uffff\1\4\1\uffff\3\4\77\uffff\1\4",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "",
            "",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "\1\10\13\uffff\2\22\1\uffff\1\22\1\uffff\1\23\3\uffff\1\5\1\6\1\7\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\4\uffff\1\22\1\uffff\3\22\77\uffff\1\22",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[][] dfa_39 = unpackEncodedStringArray(dfa_39s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_35;
            this.max = dfa_36;
            this.accept = dfa_37;
            this.special = dfa_38;
            this.transition = dfa_39;
        }
        public String getDescription() {
            return "1820:5: ( ( ( (lv_modifiers_4_0= ruleFieldModifier ) ) ( (lv_modifiers_5_0= ruleCommonModifier ) )* ( (lv_type_6_0= ruleJvmTypeReference ) )? ( (lv_name_7_0= ruleValidID ) ) ) | ( ( (lv_modifiers_8_0= 'extension' ) ) ( ( (lv_modifiers_9_0= ruleFieldModifier ) ) | ( (lv_modifiers_10_0= ruleCommonModifier ) ) )* ( (lv_type_11_0= ruleJvmTypeReference ) ) ( (lv_name_12_0= ruleValidID ) )? ) | ( ( (lv_modifiers_13_0= ruleFieldModifier ) ) ( (lv_modifiers_14_0= ruleCommonModifier ) )* ( (lv_modifiers_15_0= 'extension' ) ) ( (lv_modifiers_16_0= ruleCommonModifier ) )* ( (lv_type_17_0= ruleJvmTypeReference ) ) ( (lv_name_18_0= ruleValidID ) )? ) | ( ( (lv_type_19_0= ruleJvmTypeReference ) ) ( (lv_name_20_0= ruleValidID ) ) ) )";
        }
    }
    static final String dfa_40s = "\1\uffff\6\16\1\uffff\6\7\31\uffff";
    static final String dfa_41s = "\1\20\6\4\1\uffff\6\4\1\uffff\30\4";
    static final String dfa_42s = "\7\155\1\uffff\6\155\1\uffff\30\155";
    static final String dfa_43s = "\7\uffff\1\1\6\uffff\1\2\30\uffff";
    static final String[] dfa_44s = {
            "\1\3\1\7\1\uffff\1\7\25\uffff\1\2\1\uffff\1\4\1\5\1\6\77\uffff\1\1",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\43\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\42\1\uffff\1\44\1\45\1\46\17\uffff\1\16\1\uffff\1\7\55\uffff\1\41",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\16\1\7\5\uffff\3\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\43\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\42\1\uffff\1\44\1\45\1\46\17\uffff\1\16\1\uffff\1\7\55\uffff\1\41",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\16\1\7\4\uffff\4\16\1\35\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\16\1\uffff\1\7\55\uffff\1\33",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\5\uffff\3\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17",
            "\3\7\1\16\4\uffff\4\7\1\21\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\7\1\uffff\1\16\55\uffff\1\17"
    };
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[][] dfa_44 = unpackEncodedStringArray(dfa_44s);

    class DFA61 extends DFA {

        public DFA61(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 61;
            this.eot = dfa_20;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_25;
            this.transition = dfa_44;
        }
        public String getDescription() {
            return "1852:7: ( (lv_type_6_0= ruleJvmTypeReference ) )?";
        }
    }
    static final String dfa_45s = "\41\uffff";
    static final String dfa_46s = "\1\7\6\16\32\uffff";
    static final String dfa_47s = "\7\4\1\uffff\6\4\1\uffff\22\4";
    static final String dfa_48s = "\7\155\1\uffff\6\155\1\uffff\22\155";
    static final String dfa_49s = "\7\uffff\1\2\6\uffff\1\1\22\uffff";
    static final String dfa_50s = "\41\uffff}>";
    static final String[] dfa_51s = {
            "\3\7\6\uffff\3\7\1\3\1\7\1\uffff\3\7\1\uffff\1\7\1\uffff\20\7\1\2\1\uffff\1\4\1\5\1\6\17\uffff\1\7\57\uffff\1\1",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\16\1\uffff\1\7\55\uffff\1\17",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\7\1\uffff\1\16\55\uffff\1\33",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\5\uffff\3\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\35\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\34\1\uffff\1\36\1\37\1\40\17\uffff\1\7\1\uffff\1\16\55\uffff\1\33",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\7\1\16\4\uffff\4\7\1\27\1\7\1\uffff\3\7\1\uffff\1\7\1\16\20\7\1\26\1\uffff\1\30\1\31\1\32\17\uffff\1\7\1\uffff\1\16\55\uffff\1\25",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\16\1\uffff\1\7\55\uffff\1\17",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\5\uffff\3\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\21\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\20\1\uffff\1\22\1\23\1\24\17\uffff\1\16\1\uffff\1\7\55\uffff\1\17",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10",
            "\3\16\1\7\4\uffff\4\16\1\12\1\16\1\uffff\3\16\1\uffff\1\16\1\7\20\16\1\11\1\uffff\1\13\1\14\1\15\17\uffff\1\16\1\uffff\1\7\55\uffff\1\10"
    };

    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA63 extends DFA {

        public DFA63(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 63;
            this.eot = dfa_45;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "1950:7: ( (lv_name_12_0= ruleValidID ) )?";
        }
    }

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_45;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "2045:7: ( (lv_name_18_0= ruleValidID ) )?";
        }
    }
    static final String dfa_52s = "\51\uffff";
    static final String dfa_53s = "\1\7\10\0\40\uffff";
    static final String dfa_54s = "\1\155\10\0\40\uffff";
    static final String dfa_55s = "\11\uffff\1\5\33\uffff\1\1\1\2\1\3\1\4";
    static final String dfa_56s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\40\uffff}>";
    static final String[] dfa_57s = {
            "\1\11\1\uffff\1\11\6\uffff\1\3\1\7\1\uffff\1\10\25\uffff\1\2\1\uffff\1\4\1\5\1\6\23\uffff\14\11\1\uffff\14\11\1\uffff\2\11\20\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_52;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "2256:5: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_returnType_34_0= ruleJvmTypeReference ) ) ( (lv_createExtensionInfo_35_0= ruleCreateExtensionInfo ) ) ( (lv_name_36_0= ruleValidID ) ) otherlv_37= '(' ) ) | ( ( ( ( ( ruleTypeReferenceWithTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_38_0= ruleTypeReferenceWithTypeArgs ) ) ( (lv_name_39_0= ruleFunctionID ) ) otherlv_40= '(' ) ) | ( ( ( ( ( ruleTypeReferenceNoTypeArgs ) ) ( ( ruleFunctionID ) ) '(' ) )=> ( ( (lv_returnType_41_0= ruleTypeReferenceNoTypeArgs ) ) ( (lv_name_42_0= ruleFunctionID ) ) otherlv_43= '(' ) ) | ( ( ( ( ( ruleCreateExtensionInfo ) ) ( ( ruleValidID ) ) '(' ) )=> ( ( (lv_createExtensionInfo_44_0= ruleCreateExtensionInfo ) ) ( (lv_name_45_0= ruleValidID ) ) otherlv_46= '(' ) ) | ( ( (lv_name_47_0= ruleFunctionID ) ) otherlv_48= '(' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (synpred4_PsiInternalXtend()) ) {s = 40;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_3 = input.LA(1);

                         
                        int index74_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA74_4 = input.LA(1);

                         
                        int index74_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA74_5 = input.LA(1);

                         
                        int index74_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA74_6 = input.LA(1);

                         
                        int index74_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (synpred3_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA74_7 = input.LA(1);

                         
                        int index74_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                         
                        input.seek(index74_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA74_8 = input.LA(1);

                         
                        int index74_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred1_PsiInternalXtend()) ) {s = 37;}

                        else if ( (synpred2_PsiInternalXtend()) ) {s = 38;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index74_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_58s = "\21\uffff";
    static final String dfa_59s = "\1\20\6\7\1\uffff\1\20\2\uffff\6\7";
    static final String dfa_60s = "\1\155\6\77\1\uffff\1\155\2\uffff\6\77";
    static final String dfa_61s = "\7\uffff\1\3\1\uffff\1\2\1\1\6\uffff";
    static final String dfa_62s = "\21\uffff}>";
    static final String[] dfa_63s = {
            "\1\3\1\7\1\uffff\1\7\25\uffff\1\2\1\uffff\1\4\1\5\1\6\77\uffff\1\1",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "",
            "\1\15\30\uffff\1\14\1\uffff\1\16\1\17\1\20\77\uffff\1\13",
            "",
            "",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11",
            "\1\12\20\uffff\1\10\46\uffff\1\11"
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA109 extends DFA {

        public DFA109(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 109;
            this.eot = dfa_58;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "3481:2: ( (this_ParameterizedTypeReferenceWithTypeArgs_0= ruleParameterizedTypeReferenceWithTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )* ) | (this_TypeReferenceNoTypeArgs_3= ruleTypeReferenceNoTypeArgs ( ( ( () ruleArrayBrackets ) )=> ( () ruleArrayBrackets ) )+ ) | this_XFunctionTypeRef_6= ruleXFunctionTypeRef )";
        }
    }
    static final String dfa_64s = "\50\uffff";
    static final String dfa_65s = "\1\2\47\uffff";
    static final String dfa_66s = "\1\7\1\0\46\uffff";
    static final String dfa_67s = "\1\155\1\0\46\uffff";
    static final String dfa_68s = "\2\uffff\1\2\44\uffff\1\1";
    static final String dfa_69s = "\1\uffff\1\0\46\uffff}>";
    static final String[] dfa_70s = {
            "\1\1\1\uffff\1\2\6\uffff\1\2\2\uffff\1\2\4\uffff\1\2\20\uffff\1\2\1\uffff\3\2\21\uffff\1\2\1\uffff\14\2\1\uffff\14\2\1\uffff\2\2\20\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA112 extends DFA {

        public DFA112(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 112;
            this.eot = dfa_64;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "3687:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA112_1 = input.LA(1);

                         
                        int index112_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_PsiInternalXtend()) ) {s = 39;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index112_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 112, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\16\uffff";
    static final String dfa_72s = "\2\uffff\2\7\10\uffff\2\10";
    static final String dfa_73s = "\1\7\1\uffff\1\7\1\11\10\uffff\1\7\1\11";
    static final String dfa_74s = "\1\134\1\uffff\1\24\1\120\10\uffff\1\24\1\106";
    static final String dfa_75s = "\1\uffff\1\1\2\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\2\uffff";
    static final String dfa_76s = "\16\uffff}>";
    static final String[] dfa_77s = {
            "\1\2\1\uffff\1\3\11\uffff\1\10\55\uffff\5\1\1\7\1\4\1\5\4\6\1\uffff\5\10\2\12\4\11\1\12\1\uffff\2\13",
            "",
            "\1\14\11\uffff\1\7\1\uffff\1\10\1\7",
            "\1\15\7\uffff\1\7\64\uffff\1\1\11\uffff\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\10\11\uffff\1\10\2\uffff\1\1",
            "\1\10\7\uffff\1\10\64\uffff\1\1"
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[][] dfa_77 = unpackEncodedStringArray(dfa_77s);

    class DFA115 extends DFA {

        public DFA115(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 115;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "3789:2: ( ruleOpMultiAssign | ruleOpOr | ruleOpAnd | ruleOpEquality | ruleOpCompare | ruleOpOther | ruleOpMulti | ruleOpUnary | ruleOpPostfix )";
        }
    }
    static final String dfa_78s = "\40\uffff";
    static final String dfa_79s = "\1\uffff\35\36\2\uffff";
    static final String dfa_80s = "\36\4\2\uffff";
    static final String dfa_81s = "\36\167\2\uffff";
    static final String dfa_82s = "\36\uffff\1\2\1\1";
    static final String dfa_83s = "\40\uffff}>";
    static final String[] dfa_84s = {
            "\1\17\1\uffff\1\4\1\36\2\uffff\1\11\1\13\1\36\1\uffff\1\15\1\10\1\3\1\36\3\uffff\1\35\1\24\1\36\1\uffff\1\20\1\21\1\22\1\2\1\23\1\7\1\12\1\25\1\26\1\27\1\30\1\31\2\uffff\1\6\1\16\1\5\1\uffff\1\32\1\33\1\34\1\14\2\uffff\1\36\2\uffff\1\36\11\uffff\2\36\23\uffff\2\36\4\uffff\1\36\5\uffff\1\36\1\uffff\12\36\2\uffff\1\1\3\36\4\uffff\3\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "\20\36\1\37\32\36\1\uffff\3\36\1\uffff\3\36\6\uffff\57\36\1\uffff\13\36",
            "",
            ""
    };

    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = dfa_78;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_83;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "4590:2: ( ( () ( ( ruleFeatureCallID ) ) ruleOpSingleAssign ( (lv_value_3_0= ruleXAssignment ) ) ) | (this_XConditionalExpression_4= ruleXConditionalExpression ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )? ) )";
        }
    }
    static final String dfa_85s = "\12\uffff";
    static final String dfa_86s = "\1\10\11\uffff";
    static final String dfa_87s = "\1\4\7\0\2\uffff";
    static final String dfa_88s = "\1\167\7\0\2\uffff";
    static final String dfa_89s = "\10\uffff\1\2\1\1";
    static final String dfa_90s = "\1\uffff\1\3\1\0\1\4\1\1\1\5\1\6\1\2\2\uffff}>";
    static final String[] dfa_91s = {
            "\3\10\1\6\1\10\1\7\12\10\1\uffff\32\10\1\uffff\3\10\1\uffff\3\10\6\uffff\4\10\1\1\1\2\1\3\1\4\1\5\46\10\1\uffff\13\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_85;
            this.eof = dfa_86;
            this.min = dfa_87;
            this.max = dfa_88;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "4649:4: ( ( ( ( () ( ( ruleOpMultiAssign ) ) ) )=> ( () ( ( ruleOpMultiAssign ) ) ) ) ( (lv_rightOperand_7_0= ruleXAssignment ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA128_2 = input.LA(1);

                         
                        int index128_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index128_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA128_4 = input.LA(1);

                         
                        int index128_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index128_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA128_7 = input.LA(1);

                         
                        int index128_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index128_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA128_1 = input.LA(1);

                         
                        int index128_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index128_1);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA128_3 = input.LA(1);

                         
                        int index128_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index128_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA128_5 = input.LA(1);

                         
                        int index128_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index128_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA128_6 = input.LA(1);

                         
                        int index128_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index128_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 128, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_92s = "\37\uffff";
    static final String dfa_93s = "\1\4\6\0\30\uffff";
    static final String dfa_94s = "\1\155\6\0\30\uffff";
    static final String dfa_95s = "\7\uffff\2\1\1\2\25\uffff";
    static final String dfa_96s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\30\uffff}>";
    static final String[] dfa_97s = {
            "\1\11\1\uffff\1\11\3\uffff\2\11\2\uffff\2\11\1\3\1\7\1\uffff\1\10\2\uffff\1\11\2\uffff\14\11\2\uffff\2\11\1\2\1\uffff\1\4\1\5\1\6\1\11\76\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_92 = DFA.unpackEncodedString(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_92;
            this.eof = dfa_92;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "5117:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleInnerVarID ) ) ) ) | ( (lv_name_4_0= ruleInnerVarID ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA142_0 = input.LA(1);

                         
                        int index142_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA142_0==RULE_ID) ) {s = 1;}

                        else if ( (LA142_0==KW_Create) ) {s = 2;}

                        else if ( (LA142_0==KW_Annotation) ) {s = 3;}

                        else if ( (LA142_0==KW_AFTER) ) {s = 4;}

                        else if ( (LA142_0==KW_BEFORE) ) {s = 5;}

                        else if ( (LA142_0==KW_SEPARATOR) ) {s = 6;}

                        else if ( (LA142_0==KW_LeftParenthesis) && (synpred18_PsiInternalXtend())) {s = 7;}

                        else if ( (LA142_0==KW_EqualsSignGreaterThanSign) && (synpred18_PsiInternalXtend())) {s = 8;}

                        else if ( (LA142_0==KW_Package||LA142_0==KW_Class||(LA142_0>=KW_Extends && LA142_0<=KW_Implements)||(LA142_0>=KW_Interface && LA142_0<=KW_Enum)||LA142_0==KW_Throws||(LA142_0>=KW_Public && LA142_0<=KW_Transient)||(LA142_0>=KW_Def && LA142_0<=KW_Override)||LA142_0==KW_Import) ) {s = 9;}

                         
                        input.seek(index142_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA142_1 = input.LA(1);

                         
                        int index142_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index142_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA142_2 = input.LA(1);

                         
                        int index142_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index142_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA142_3 = input.LA(1);

                         
                        int index142_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index142_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA142_4 = input.LA(1);

                         
                        int index142_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index142_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA142_5 = input.LA(1);

                         
                        int index142_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index142_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA142_6 = input.LA(1);

                         
                        int index142_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_PsiInternalXtend()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index142_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 142, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_98s = "\7\4\42\uffff";
    static final String dfa_99s = "\7\155\42\uffff";
    static final String dfa_100s = "\7\uffff\2\1\1\2\37\1";
    static final String dfa_101s = "\1\0\1\5\1\3\1\4\1\1\1\2\1\6\42\uffff}>";
    static final String[] dfa_102s = {
            "\1\11\1\uffff\1\11\3\uffff\2\11\2\uffff\2\11\1\3\1\7\1\uffff\1\10\2\uffff\1\11\2\uffff\14\11\2\uffff\2\11\1\2\1\uffff\1\4\1\5\1\6\1\11\76\uffff\1\1",
            "\1\33\1\uffff\1\20\1\13\2\uffff\1\25\1\27\2\uffff\1\31\1\24\1\17\3\uffff\1\11\1\uffff\1\40\1\uffff\1\12\1\34\1\35\1\36\1\16\1\37\1\23\1\26\1\41\1\42\1\43\1\44\1\45\2\uffff\1\22\1\32\1\21\1\uffff\1\46\1\47\1\50\1\30\20\uffff\1\14\55\uffff\1\15",
            "\1\33\1\uffff\1\20\1\13\2\uffff\1\25\1\27\2\uffff\1\31\1\24\1\17\3\uffff\1\11\1\uffff\1\40\1\uffff\1\12\1\34\1\35\1\36\1\16\1\37\1\23\1\26\1\41\1\42\1\43\1\44\1\45\2\uffff\1\22\1\32\1\21\1\uffff\1\46\1\47\1\50\1\30\20\uffff\1\14\55\uffff\1\15",
            "\1\33\1\uffff\1\20\1\13\2\uffff\1\25\1\27\2\uffff\1\31\1\24\1\17\3\uffff\1\11\1\uffff\1\40\1\uffff\1\12\1\34\1\35\1\36\1\16\1\37\1\23\1\26\1\41\1\42\1\43\1\44\1\45\2\uffff\1\22\1\32\1\21\1\uffff\1\46\1\47\1\50\1\30\20\uffff\1\14\55\uffff\1\15",
            "\1\33\1\uffff\1\20\1\13\2\uffff\1\25\1\27\2\uffff\1\31\1\24\1\17\3\uffff\1\11\1\uffff\1\40\1\uffff\1\12\1\34\1\35\1\36\1\16\1\37\1\23\1\26\1\41\1\42\1\43\1\44\1\45\2\uffff\1\22\1\32\1\21\1\uffff\1\46\1\47\1\50\1\30\20\uffff\1\14\55\uffff\1\15",
            "\1\33\1\uffff\1\20\1\13\2\uffff\1\25\1\27\2\uffff\1\31\1\24\1\17\3\uffff\1\11\1\uffff\1\40\1\uffff\1\12\1\34\1\35\1\36\1\16\1\37\1\23\1\26\1\41\1\42\1\43\1\44\1\45\2\uffff\1\22\1\32\1\21\1\uffff\1\46\1\47\1\50\1\30\20\uffff\1\14\55\uffff\1\15",
            "\1\33\1\uffff\1\20\1\13\2\uffff\1\25\1\27\2\uffff\1\31\1\24\1\17\3\uffff\1\11\1\uffff\1\40\1\uffff\1\12\1\34\1\35\1\36\1\16\1\37\1\23\1\26\1\41\1\42\1\43\1\44\1\45\2\uffff\1\22\1\32\1\21\1\uffff\1\46\1\47\1\50\1\30\20\uffff\1\14\55\uffff\1\15",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[][] dfa_102 = unpackEncodedStringArray(dfa_102s);

    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = dfa_52;
            this.eof = dfa_52;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_100;
            this.special = dfa_101;
            this.transition = dfa_102;
        }
        public String getDescription() {
            return "5239:3: ( ( ( ( ( ( ruleJvmTypeReference ) ) ( ( ruleInnerVarID ) ) ) )=> ( ( (lv_type_2_0= ruleJvmTypeReference ) ) ( (lv_name_3_0= ruleInnerVarID ) ) ) ) | ( (lv_name_4_0= ruleInnerVarID ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA144_0 = input.LA(1);

                         
                        int index144_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_0==RULE_ID) ) {s = 1;}

                        else if ( (LA144_0==KW_Create) ) {s = 2;}

                        else if ( (LA144_0==KW_Annotation) ) {s = 3;}

                        else if ( (LA144_0==KW_AFTER) ) {s = 4;}

                        else if ( (LA144_0==KW_BEFORE) ) {s = 5;}

                        else if ( (LA144_0==KW_SEPARATOR) ) {s = 6;}

                        else if ( (LA144_0==KW_LeftParenthesis) && (synpred19_PsiInternalXtend())) {s = 7;}

                        else if ( (LA144_0==KW_EqualsSignGreaterThanSign) && (synpred19_PsiInternalXtend())) {s = 8;}

                        else if ( (LA144_0==KW_Package||LA144_0==KW_Class||(LA144_0>=KW_Extends && LA144_0<=KW_Implements)||(LA144_0>=KW_Interface && LA144_0<=KW_Enum)||LA144_0==KW_Throws||(LA144_0>=KW_Public && LA144_0<=KW_Transient)||(LA144_0>=KW_Def && LA144_0<=KW_Override)||LA144_0==KW_Import) ) {s = 9;}

                         
                        input.seek(index144_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA144_4 = input.LA(1);

                         
                        int index144_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_4==KW_EqualsSign) ) {s = 9;}

                        else if ( (LA144_4==KW_FullStop) && (synpred19_PsiInternalXtend())) {s = 10;}

                        else if ( (LA144_4==KW_LessThanSign) && (synpred19_PsiInternalXtend())) {s = 11;}

                        else if ( (LA144_4==KW_LeftSquareBracket) && (synpred19_PsiInternalXtend())) {s = 12;}

                        else if ( (LA144_4==RULE_ID) && (synpred19_PsiInternalXtend())) {s = 13;}

                        else if ( (LA144_4==KW_Abstract) && (synpred19_PsiInternalXtend())) {s = 14;}

                        else if ( (LA144_4==KW_Annotation) && (synpred19_PsiInternalXtend())) {s = 15;}

                        else if ( (LA144_4==KW_Class) && (synpred19_PsiInternalXtend())) {s = 16;}

                        else if ( (LA144_4==KW_Create) && (synpred19_PsiInternalXtend())) {s = 17;}

                        else if ( (LA144_4==KW_Def) && (synpred19_PsiInternalXtend())) {s = 18;}

                        else if ( (LA144_4==KW_Dispatch) && (synpred19_PsiInternalXtend())) {s = 19;}

                        else if ( (LA144_4==KW_Enum) && (synpred19_PsiInternalXtend())) {s = 20;}

                        else if ( (LA144_4==KW_Extends) && (synpred19_PsiInternalXtend())) {s = 21;}

                        else if ( (LA144_4==KW_Final) && (synpred19_PsiInternalXtend())) {s = 22;}

                        else if ( (LA144_4==KW_Implements) && (synpred19_PsiInternalXtend())) {s = 23;}

                        else if ( (LA144_4==KW_Import) && (synpred19_PsiInternalXtend())) {s = 24;}

                        else if ( (LA144_4==KW_Interface) && (synpred19_PsiInternalXtend())) {s = 25;}

                        else if ( (LA144_4==KW_Override) && (synpred19_PsiInternalXtend())) {s = 26;}

                        else if ( (LA144_4==KW_Package) && (synpred19_PsiInternalXtend())) {s = 27;}

                        else if ( (LA144_4==KW_Public) && (synpred19_PsiInternalXtend())) {s = 28;}

                        else if ( (LA144_4==KW_Private) && (synpred19_PsiInternalXtend())) {s = 29;}

                        else if ( (LA144_4==KW_Protected) && (synpred19_PsiInternalXtend())) {s = 30;}

                        else if ( (LA144_4==KW_Static) && (synpred19_PsiInternalXtend())) {s = 31;}

                        else if ( (LA144_4==KW_Throws) && (synpred19_PsiInternalXtend())) {s = 32;}

                        else if ( (LA144_4==KW_Strictfp) && (synpred19_PsiInternalXtend())) {s = 33;}

                        else if ( (LA144_4==KW_Native) && (synpred19_PsiInternalXtend())) {s = 34;}

                        else if ( (LA144_4==KW_Volatile) && (synpred19_PsiInternalXtend())) {s = 35;}

                        else if ( (LA144_4==KW_Synchronized) && (synpred19_PsiInternalXtend())) {s = 36;}

                        else if ( (LA144_4==KW_Transient) && (synpred19_PsiInternalXtend())) {s = 37;}

                        else if ( (LA144_4==KW_AFTER) && (synpred19_PsiInternalXtend())) {s = 38;}

                        else if ( (LA144_4==KW_BEFORE) && (synpred19_PsiInternalXtend())) {s = 39;}

                        else if ( (LA144_4==KW_SEPARATOR) && (synpred19_PsiInternalXtend())) {s = 40;}

                         
                        input.seek(index144_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA144_5 = input.LA(1);

                         
                        int index144_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_5==KW_EqualsSign) ) {s = 9;}

                        else if ( (LA144_5==KW_FullStop) && (synpred19_PsiInternalXtend())) {s = 10;}

                        else if ( (LA144_5==KW_LessThanSign) && (synpred19_PsiInternalXtend())) {s = 11;}

                        else if ( (LA144_5==KW_LeftSquareBracket) && (synpred19_PsiInternalXtend())) {s = 12;}

                        else if ( (LA144_5==RULE_ID) && (synpred19_PsiInternalXtend())) {s = 13;}

                        else if ( (LA144_5==KW_Abstract) && (synpred19_PsiInternalXtend())) {s = 14;}

                        else if ( (LA144_5==KW_Annotation) && (synpred19_PsiInternalXtend())) {s = 15;}

                        else if ( (LA144_5==KW_Class) && (synpred19_PsiInternalXtend())) {s = 16;}

                        else if ( (LA144_5==KW_Create) && (synpred19_PsiInternalXtend())) {s = 17;}

                        else if ( (LA144_5==KW_Def) && (synpred19_PsiInternalXtend())) {s = 18;}

                        else if ( (LA144_5==KW_Dispatch) && (synpred19_PsiInternalXtend())) {s = 19;}

                        else if ( (LA144_5==KW_Enum) && (synpred19_PsiInternalXtend())) {s = 20;}

                        else if ( (LA144_5==KW_Extends) && (synpred19_PsiInternalXtend())) {s = 21;}

                        else if ( (LA144_5==KW_Final) && (synpred19_PsiInternalXtend())) {s = 22;}

                        else if ( (LA144_5==KW_Implements) && (synpred19_PsiInternalXtend())) {s = 23;}

                        else if ( (LA144_5==KW_Import) && (synpred19_PsiInternalXtend())) {s = 24;}

                        else if ( (LA144_5==KW_Interface) && (synpred19_PsiInternalXtend())) {s = 25;}

                        else if ( (LA144_5==KW_Override) && (synpred19_PsiInternalXtend())) {s = 26;}

                        else if ( (LA144_5==KW_Package) && (synpred19_PsiInternalXtend())) {s = 27;}

                        else if ( (LA144_5==KW_Public) && (synpred19_PsiInternalXtend())) {s = 28;}

                        else if ( (LA144_5==KW_Private) && (synpred19_PsiInternalXtend())) {s = 29;}

                        else if ( (LA144_5==KW_Protected) && (synpred19_PsiInternalXtend())) {s = 30;}

                        else if ( (LA144_5==KW_Static) && (synpred19_PsiInternalXtend())) {s = 31;}

                        else if ( (LA144_5==KW_Throws) && (synpred19_PsiInternalXtend())) {s = 32;}

                        else if ( (LA144_5==KW_Strictfp) && (synpred19_PsiInternalXtend())) {s = 33;}

                        else if ( (LA144_5==KW_Native) && (synpred19_PsiInternalXtend())) {s = 34;}

                        else if ( (LA144_5==KW_Volatile) && (synpred19_PsiInternalXtend())) {s = 35;}

                        else if ( (LA144_5==KW_Synchronized) && (synpred19_PsiInternalXtend())) {s = 36;}

                        else if ( (LA144_5==KW_Transient) && (synpred19_PsiInternalXtend())) {s = 37;}

                        else if ( (LA144_5==KW_AFTER) && (synpred19_PsiInternalXtend())) {s = 38;}

                        else if ( (LA144_5==KW_BEFORE) && (synpred19_PsiInternalXtend())) {s = 39;}

                        else if ( (LA144_5==KW_SEPARATOR) && (synpred19_PsiInternalXtend())) {s = 40;}

                         
                        input.seek(index144_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA144_2 = input.LA(1);

                         
                        int index144_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_2==KW_FullStop) && (synpred19_PsiInternalXtend())) {s = 10;}

                        else if ( (LA144_2==KW_LessThanSign) && (synpred19_PsiInternalXtend())) {s = 11;}

                        else if ( (LA144_2==KW_LeftSquareBracket) && (synpred19_PsiInternalXtend())) {s = 12;}

                        else if ( (LA144_2==RULE_ID) && (synpred19_PsiInternalXtend())) {s = 13;}

                        else if ( (LA144_2==KW_Abstract) && (synpred19_PsiInternalXtend())) {s = 14;}

                        else if ( (LA144_2==KW_Annotation) && (synpred19_PsiInternalXtend())) {s = 15;}

                        else if ( (LA144_2==KW_Class) && (synpred19_PsiInternalXtend())) {s = 16;}

                        else if ( (LA144_2==KW_Create) && (synpred19_PsiInternalXtend())) {s = 17;}

                        else if ( (LA144_2==KW_Def) && (synpred19_PsiInternalXtend())) {s = 18;}

                        else if ( (LA144_2==KW_Dispatch) && (synpred19_PsiInternalXtend())) {s = 19;}

                        else if ( (LA144_2==KW_Enum) && (synpred19_PsiInternalXtend())) {s = 20;}

                        else if ( (LA144_2==KW_Extends) && (synpred19_PsiInternalXtend())) {s = 21;}

                        else if ( (LA144_2==KW_Final) && (synpred19_PsiInternalXtend())) {s = 22;}

                        else if ( (LA144_2==KW_Implements) && (synpred19_PsiInternalXtend())) {s = 23;}

                        else if ( (LA144_2==KW_Import) && (synpred19_PsiInternalXtend())) {s = 24;}

                        else if ( (LA144_2==KW_Interface) && (synpred19_PsiInternalXtend())) {s = 25;}

                        else if ( (LA144_2==KW_Override) && (synpred19_PsiInternalXtend())) {s = 26;}

                        else if ( (LA144_2==KW_Package) && (synpred19_PsiInternalXtend())) {s = 27;}

                        else if ( (LA144_2==KW_Public) && (synpred19_PsiInternalXtend())) {s = 28;}

                        else if ( (LA144_2==KW_Private) && (synpred19_PsiInternalXtend())) {s = 29;}

                        else if ( (LA144_2==KW_Protected) && (synpred19_PsiInternalXtend())) {s = 30;}

                        else if ( (LA144_2==KW_Static) && (synpred19_PsiInternalXtend())) {s = 31;}

                        else if ( (LA144_2==KW_Throws) && (synpred19_PsiInternalXtend())) {s = 32;}

                        else if ( (LA144_2==KW_Strictfp) && (synpred19_PsiInternalXtend())) {s = 33;}

                        else if ( (LA144_2==KW_Native) && (synpred19_PsiInternalXtend())) {s = 34;}

                        else if ( (LA144_2==KW_Volatile) && (synpred19_PsiInternalXtend())) {s = 35;}

                        else if ( (LA144_2==KW_Synchronized) && (synpred19_PsiInternalXtend())) {s = 36;}

                        else if ( (LA144_2==KW_Transient) && (synpred19_PsiInternalXtend())) {s = 37;}

                        else if ( (LA144_2==KW_AFTER) && (synpred19_PsiInternalXtend())) {s = 38;}

                        else if ( (LA144_2==KW_BEFORE) && (synpred19_PsiInternalXtend())) {s = 39;}

                        else if ( (LA144_2==KW_SEPARATOR) && (synpred19_PsiInternalXtend())) {s = 40;}

                        else if ( (LA144_2==KW_EqualsSign) ) {s = 9;}

                         
                        input.seek(index144_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA144_3 = input.LA(1);

                         
                        int index144_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_3==KW_EqualsSign) ) {s = 9;}

                        else if ( (LA144_3==KW_FullStop) && (synpred19_PsiInternalXtend())) {s = 10;}

                        else if ( (LA144_3==KW_LessThanSign) && (synpred19_PsiInternalXtend())) {s = 11;}

                        else if ( (LA144_3==KW_LeftSquareBracket) && (synpred19_PsiInternalXtend())) {s = 12;}

                        else if ( (LA144_3==RULE_ID) && (synpred19_PsiInternalXtend())) {s = 13;}

                        else if ( (LA144_3==KW_Abstract) && (synpred19_PsiInternalXtend())) {s = 14;}

                        else if ( (LA144_3==KW_Annotation) && (synpred19_PsiInternalXtend())) {s = 15;}

                        else if ( (LA144_3==KW_Class) && (synpred19_PsiInternalXtend())) {s = 16;}

                        else if ( (LA144_3==KW_Create) && (synpred19_PsiInternalXtend())) {s = 17;}

                        else if ( (LA144_3==KW_Def) && (synpred19_PsiInternalXtend())) {s = 18;}

                        else if ( (LA144_3==KW_Dispatch) && (synpred19_PsiInternalXtend())) {s = 19;}

                        else if ( (LA144_3==KW_Enum) && (synpred19_PsiInternalXtend())) {s = 20;}

                        else if ( (LA144_3==KW_Extends) && (synpred19_PsiInternalXtend())) {s = 21;}

                        else if ( (LA144_3==KW_Final) && (synpred19_PsiInternalXtend())) {s = 22;}

                        else if ( (LA144_3==KW_Implements) && (synpred19_PsiInternalXtend())) {s = 23;}

                        else if ( (LA144_3==KW_Import) && (synpred19_PsiInternalXtend())) {s = 24;}

                        else if ( (LA144_3==KW_Interface) && (synpred19_PsiInternalXtend())) {s = 25;}

                        else if ( (LA144_3==KW_Override) && (synpred19_PsiInternalXtend())) {s = 26;}

                        else if ( (LA144_3==KW_Package) && (synpred19_PsiInternalXtend())) {s = 27;}

                        else if ( (LA144_3==KW_Public) && (synpred19_PsiInternalXtend())) {s = 28;}

                        else if ( (LA144_3==KW_Private) && (synpred19_PsiInternalXtend())) {s = 29;}

                        else if ( (LA144_3==KW_Protected) && (synpred19_PsiInternalXtend())) {s = 30;}

                        else if ( (LA144_3==KW_Static) && (synpred19_PsiInternalXtend())) {s = 31;}

                        else if ( (LA144_3==KW_Throws) && (synpred19_PsiInternalXtend())) {s = 32;}

                        else if ( (LA144_3==KW_Strictfp) && (synpred19_PsiInternalXtend())) {s = 33;}

                        else if ( (LA144_3==KW_Native) && (synpred19_PsiInternalXtend())) {s = 34;}

                        else if ( (LA144_3==KW_Volatile) && (synpred19_PsiInternalXtend())) {s = 35;}

                        else if ( (LA144_3==KW_Synchronized) && (synpred19_PsiInternalXtend())) {s = 36;}

                        else if ( (LA144_3==KW_Transient) && (synpred19_PsiInternalXtend())) {s = 37;}

                        else if ( (LA144_3==KW_AFTER) && (synpred19_PsiInternalXtend())) {s = 38;}

                        else if ( (LA144_3==KW_BEFORE) && (synpred19_PsiInternalXtend())) {s = 39;}

                        else if ( (LA144_3==KW_SEPARATOR) && (synpred19_PsiInternalXtend())) {s = 40;}

                         
                        input.seek(index144_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA144_1 = input.LA(1);

                         
                        int index144_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_1==KW_EqualsSign) ) {s = 9;}

                        else if ( (LA144_1==KW_FullStop) && (synpred19_PsiInternalXtend())) {s = 10;}

                        else if ( (LA144_1==KW_LessThanSign) && (synpred19_PsiInternalXtend())) {s = 11;}

                        else if ( (LA144_1==KW_LeftSquareBracket) && (synpred19_PsiInternalXtend())) {s = 12;}

                        else if ( (LA144_1==RULE_ID) && (synpred19_PsiInternalXtend())) {s = 13;}

                        else if ( (LA144_1==KW_Abstract) && (synpred19_PsiInternalXtend())) {s = 14;}

                        else if ( (LA144_1==KW_Annotation) && (synpred19_PsiInternalXtend())) {s = 15;}

                        else if ( (LA144_1==KW_Class) && (synpred19_PsiInternalXtend())) {s = 16;}

                        else if ( (LA144_1==KW_Create) && (synpred19_PsiInternalXtend())) {s = 17;}

                        else if ( (LA144_1==KW_Def) && (synpred19_PsiInternalXtend())) {s = 18;}

                        else if ( (LA144_1==KW_Dispatch) && (synpred19_PsiInternalXtend())) {s = 19;}

                        else if ( (LA144_1==KW_Enum) && (synpred19_PsiInternalXtend())) {s = 20;}

                        else if ( (LA144_1==KW_Extends) && (synpred19_PsiInternalXtend())) {s = 21;}

                        else if ( (LA144_1==KW_Final) && (synpred19_PsiInternalXtend())) {s = 22;}

                        else if ( (LA144_1==KW_Implements) && (synpred19_PsiInternalXtend())) {s = 23;}

                        else if ( (LA144_1==KW_Import) && (synpred19_PsiInternalXtend())) {s = 24;}

                        else if ( (LA144_1==KW_Interface) && (synpred19_PsiInternalXtend())) {s = 25;}

                        else if ( (LA144_1==KW_Override) && (synpred19_PsiInternalXtend())) {s = 26;}

                        else if ( (LA144_1==KW_Package) && (synpred19_PsiInternalXtend())) {s = 27;}

                        else if ( (LA144_1==KW_Public) && (synpred19_PsiInternalXtend())) {s = 28;}

                        else if ( (LA144_1==KW_Private) && (synpred19_PsiInternalXtend())) {s = 29;}

                        else if ( (LA144_1==KW_Protected) && (synpred19_PsiInternalXtend())) {s = 30;}

                        else if ( (LA144_1==KW_Static) && (synpred19_PsiInternalXtend())) {s = 31;}

                        else if ( (LA144_1==KW_Throws) && (synpred19_PsiInternalXtend())) {s = 32;}

                        else if ( (LA144_1==KW_Strictfp) && (synpred19_PsiInternalXtend())) {s = 33;}

                        else if ( (LA144_1==KW_Native) && (synpred19_PsiInternalXtend())) {s = 34;}

                        else if ( (LA144_1==KW_Volatile) && (synpred19_PsiInternalXtend())) {s = 35;}

                        else if ( (LA144_1==KW_Synchronized) && (synpred19_PsiInternalXtend())) {s = 36;}

                        else if ( (LA144_1==KW_Transient) && (synpred19_PsiInternalXtend())) {s = 37;}

                        else if ( (LA144_1==KW_AFTER) && (synpred19_PsiInternalXtend())) {s = 38;}

                        else if ( (LA144_1==KW_BEFORE) && (synpred19_PsiInternalXtend())) {s = 39;}

                        else if ( (LA144_1==KW_SEPARATOR) && (synpred19_PsiInternalXtend())) {s = 40;}

                         
                        input.seek(index144_1);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA144_6 = input.LA(1);

                         
                        int index144_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_6==KW_EqualsSign) ) {s = 9;}

                        else if ( (LA144_6==KW_FullStop) && (synpred19_PsiInternalXtend())) {s = 10;}

                        else if ( (LA144_6==KW_LessThanSign) && (synpred19_PsiInternalXtend())) {s = 11;}

                        else if ( (LA144_6==KW_LeftSquareBracket) && (synpred19_PsiInternalXtend())) {s = 12;}

                        else if ( (LA144_6==RULE_ID) && (synpred19_PsiInternalXtend())) {s = 13;}

                        else if ( (LA144_6==KW_Abstract) && (synpred19_PsiInternalXtend())) {s = 14;}

                        else if ( (LA144_6==KW_Annotation) && (synpred19_PsiInternalXtend())) {s = 15;}

                        else if ( (LA144_6==KW_Class) && (synpred19_PsiInternalXtend())) {s = 16;}

                        else if ( (LA144_6==KW_Create) && (synpred19_PsiInternalXtend())) {s = 17;}

                        else if ( (LA144_6==KW_Def) && (synpred19_PsiInternalXtend())) {s = 18;}

                        else if ( (LA144_6==KW_Dispatch) && (synpred19_PsiInternalXtend())) {s = 19;}

                        else if ( (LA144_6==KW_Enum) && (synpred19_PsiInternalXtend())) {s = 20;}

                        else if ( (LA144_6==KW_Extends) && (synpred19_PsiInternalXtend())) {s = 21;}

                        else if ( (LA144_6==KW_Final) && (synpred19_PsiInternalXtend())) {s = 22;}

                        else if ( (LA144_6==KW_Implements) && (synpred19_PsiInternalXtend())) {s = 23;}

                        else if ( (LA144_6==KW_Import) && (synpred19_PsiInternalXtend())) {s = 24;}

                        else if ( (LA144_6==KW_Interface) && (synpred19_PsiInternalXtend())) {s = 25;}

                        else if ( (LA144_6==KW_Override) && (synpred19_PsiInternalXtend())) {s = 26;}

                        else if ( (LA144_6==KW_Package) && (synpred19_PsiInternalXtend())) {s = 27;}

                        else if ( (LA144_6==KW_Public) && (synpred19_PsiInternalXtend())) {s = 28;}

                        else if ( (LA144_6==KW_Private) && (synpred19_PsiInternalXtend())) {s = 29;}

                        else if ( (LA144_6==KW_Protected) && (synpred19_PsiInternalXtend())) {s = 30;}

                        else if ( (LA144_6==KW_Static) && (synpred19_PsiInternalXtend())) {s = 31;}

                        else if ( (LA144_6==KW_Throws) && (synpred19_PsiInternalXtend())) {s = 32;}

                        else if ( (LA144_6==KW_Strictfp) && (synpred19_PsiInternalXtend())) {s = 33;}

                        else if ( (LA144_6==KW_Native) && (synpred19_PsiInternalXtend())) {s = 34;}

                        else if ( (LA144_6==KW_Volatile) && (synpred19_PsiInternalXtend())) {s = 35;}

                        else if ( (LA144_6==KW_Synchronized) && (synpred19_PsiInternalXtend())) {s = 36;}

                        else if ( (LA144_6==KW_Transient) && (synpred19_PsiInternalXtend())) {s = 37;}

                        else if ( (LA144_6==KW_AFTER) && (synpred19_PsiInternalXtend())) {s = 38;}

                        else if ( (LA144_6==KW_BEFORE) && (synpred19_PsiInternalXtend())) {s = 39;}

                        else if ( (LA144_6==KW_SEPARATOR) && (synpred19_PsiInternalXtend())) {s = 40;}

                         
                        input.seek(index144_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 144, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_103s = "\155\uffff";
    static final String dfa_104s = "\1\2\154\uffff";
    static final String dfa_105s = "\1\4\1\0\153\uffff";
    static final String dfa_106s = "\1\167\1\0\153\uffff";
    static final String dfa_107s = "\2\uffff\1\2\151\uffff\1\1";
    static final String dfa_108s = "\1\uffff\1\0\153\uffff}>";
    static final String[] dfa_109s = {
            "\10\2\1\1\7\2\1\uffff\32\2\1\uffff\3\2\1\uffff\3\2\6\uffff\57\2\1\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[] dfa_104 = DFA.unpackEncodedString(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[][] dfa_109 = unpackEncodedStringArray(dfa_109s);

    class DFA150 extends DFA {

        public DFA150(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 150;
            this.eot = dfa_103;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_109;
        }
        public String getDescription() {
            return "5449:3: ( ( ( ( () '{' ) )=> ( () otherlv_2= '{' ) ) ( (lv_members_3_0= ruleMember ) )* otherlv_4= '}' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA150_1 = input.LA(1);

                         
                        int index150_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index150_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 150, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_110s = {
            "\3\2\1\1\14\2\1\uffff\32\2\1\uffff\3\2\1\uffff\3\2\6\uffff\57\2\1\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_110 = unpackEncodedStringArray(dfa_110s);

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = dfa_103;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "5542:3: ( ( ( '<' )=>otherlv_3= '<' ) ( (lv_typeArguments_4_0= ruleJvmArgumentTypeReference ) ) (otherlv_5= ',' ( (lv_typeArguments_6_0= ruleJvmArgumentTypeReference ) ) )* otherlv_7= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA152_1 = input.LA(1);

                         
                        int index152_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred21_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index152_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 152, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_111s = {
            "\15\2\1\1\2\2\1\uffff\32\2\1\uffff\3\2\1\uffff\3\2\6\uffff\57\2\1\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_111 = unpackEncodedStringArray(dfa_111s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_103;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "5600:3: ( ( ( ( '(' ) )=> (lv_explicitConstructorCall_8_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )? otherlv_13= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA155_1 = input.LA(1);

                         
                        int index155_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred22_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index155_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 155, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_112s = "\75\uffff";
    static final String dfa_113s = "\1\4\10\0\1\uffff\26\0\35\uffff";
    static final String dfa_114s = "\1\167\10\0\1\uffff\26\0\35\uffff";
    static final String dfa_115s = "\11\uffff\1\1\26\uffff\1\1\1\2\32\uffff\1\3";
    static final String dfa_116s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\35\uffff}>";
    static final String[] dfa_117s = {
            "\1\25\1\uffff\1\13\1\41\2\uffff\1\17\1\21\1\41\1\uffff\1\23\1\16\1\4\1\10\1\74\1\11\1\uffff\1\1\1\32\1\41\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\uffff\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\2\uffff\1\41\1\uffff\1\40\1\41\11\uffff\2\41\23\uffff\2\41\4\uffff\1\41\5\uffff\1\41\1\uffff\12\41\2\uffff\1\2\3\41\4\uffff\3\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final char[] dfa_113 = DFA.unpackEncodedStringToUnsignedChars(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[][] dfa_117 = unpackEncodedStringArray(dfa_117s);

    class DFA154 extends DFA {

        public DFA154(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 154;
            this.eot = dfa_112;
            this.eof = dfa_112;
            this.min = dfa_113;
            this.max = dfa_114;
            this.accept = dfa_115;
            this.special = dfa_116;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "5622:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_arguments_9_0= ruleXShortClosure ) ) | ( ( (lv_arguments_10_0= ruleXExpression ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA154_0 = input.LA(1);

                         
                        int index154_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA154_0==KW_Extension) ) {s = 1;}

                        else if ( (LA154_0==RULE_ID) ) {s = 2;}

                        else if ( (LA154_0==KW_Create) ) {s = 3;}

                        else if ( (LA154_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA154_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA154_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA154_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA154_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA154_0==KW_EqualsSignGreaterThanSign) && (synpred23_PsiInternalXtend())) {s = 9;}

                        else if ( (LA154_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA154_0==KW_Class) ) {s = 11;}

                        else if ( (LA154_0==KW_Def) ) {s = 12;}

                        else if ( (LA154_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA154_0==KW_Enum) ) {s = 14;}

                        else if ( (LA154_0==KW_Extends) ) {s = 15;}

                        else if ( (LA154_0==KW_Final) ) {s = 16;}

                        else if ( (LA154_0==KW_Implements) ) {s = 17;}

                        else if ( (LA154_0==KW_Import) ) {s = 18;}

                        else if ( (LA154_0==KW_Interface) ) {s = 19;}

                        else if ( (LA154_0==KW_Override) ) {s = 20;}

                        else if ( (LA154_0==KW_Package) ) {s = 21;}

                        else if ( (LA154_0==KW_Public) ) {s = 22;}

                        else if ( (LA154_0==KW_Private) ) {s = 23;}

                        else if ( (LA154_0==KW_Protected) ) {s = 24;}

                        else if ( (LA154_0==KW_Static) ) {s = 25;}

                        else if ( (LA154_0==KW_Throws) ) {s = 26;}

                        else if ( (LA154_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA154_0==KW_Native) ) {s = 28;}

                        else if ( (LA154_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA154_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA154_0==KW_Transient) ) {s = 31;}

                        else if ( (LA154_0==KW_VerticalLine) && (synpred23_PsiInternalXtend())) {s = 32;}

                        else if ( (LA154_0==KW_LessThanSign||LA154_0==KW_LeftCurlyBracket||LA154_0==KW_New||LA154_0==KW_Try||LA154_0==KW_Switch||(LA154_0>=KW_NumberSign && LA154_0<=KW_LeftSquareBracket)||(LA154_0>=KW_PlusSign && LA154_0<=KW_HyphenMinus)||LA154_0==KW_ExclamationMark||LA154_0==KW_If||(LA154_0>=KW_For && LA154_0<=KW_Return)||(LA154_0>=RULE_STRING && LA154_0<=RULE_RICH_TEXT_START)||(LA154_0>=RULE_HEX && LA154_0<=RULE_DECIMAL)) ) {s = 33;}

                        else if ( (LA154_0==KW_RightParenthesis) ) {s = 60;}

                         
                        input.seek(index154_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA154_1 = input.LA(1);

                         
                        int index154_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA154_2 = input.LA(1);

                         
                        int index154_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA154_3 = input.LA(1);

                         
                        int index154_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA154_4 = input.LA(1);

                         
                        int index154_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA154_5 = input.LA(1);

                         
                        int index154_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA154_6 = input.LA(1);

                         
                        int index154_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA154_7 = input.LA(1);

                         
                        int index154_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA154_8 = input.LA(1);

                         
                        int index154_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA154_10 = input.LA(1);

                         
                        int index154_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA154_11 = input.LA(1);

                         
                        int index154_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA154_12 = input.LA(1);

                         
                        int index154_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA154_13 = input.LA(1);

                         
                        int index154_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA154_14 = input.LA(1);

                         
                        int index154_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA154_15 = input.LA(1);

                         
                        int index154_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA154_16 = input.LA(1);

                         
                        int index154_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA154_17 = input.LA(1);

                         
                        int index154_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA154_18 = input.LA(1);

                         
                        int index154_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA154_19 = input.LA(1);

                         
                        int index154_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA154_20 = input.LA(1);

                         
                        int index154_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA154_21 = input.LA(1);

                         
                        int index154_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA154_22 = input.LA(1);

                         
                        int index154_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA154_23 = input.LA(1);

                         
                        int index154_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA154_24 = input.LA(1);

                         
                        int index154_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA154_25 = input.LA(1);

                         
                        int index154_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA154_26 = input.LA(1);

                         
                        int index154_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA154_27 = input.LA(1);

                         
                        int index154_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA154_28 = input.LA(1);

                         
                        int index154_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA154_29 = input.LA(1);

                         
                        int index154_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA154_30 = input.LA(1);

                         
                        int index154_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA154_31 = input.LA(1);

                         
                        int index154_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred23_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index154_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 154, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_118s = {
            "\20\2\1\uffff\32\2\1\uffff\3\2\1\uffff\3\2\6\uffff\2\2\1\1\54\2\1\uffff\13\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_118 = unpackEncodedStringArray(dfa_118s);

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_103;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "5714:3: ( ( ( () '[' ) )=> (lv_arguments_14_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_1 = input.LA(1);

                         
                        int index156_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index156_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_119s = "\74\uffff";
    static final String dfa_120s = "\1\4\1\0\72\uffff";
    static final String dfa_121s = "\1\167\1\0\72\uffff";
    static final String dfa_122s = "\2\uffff\1\2\70\uffff\1\1";
    static final String dfa_123s = "\1\uffff\1\0\72\uffff}>";
    static final String[] dfa_124s = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\3\2\1\1\1\uffff\1\2\1\uffff\3\2\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\2\uffff\1\2\2\uffff\1\2\11\uffff\2\2\23\uffff\2\2\4\uffff\1\2\5\uffff\1\2\1\uffff\12\2\2\uffff\4\2\4\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final char[] dfa_120 = DFA.unpackEncodedStringToUnsignedChars(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[][] dfa_124 = unpackEncodedStringArray(dfa_124s);

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_119;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "5971:3: ( ( ( ( ( '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=> (otherlv_2= '(' ( (lv_declaredParam_3_0= ruleJvmFormalParameter ) ) otherlv_4= ':' ) ) ( (lv_switch_5_0= ruleXExpression ) ) otherlv_6= ')' ) | ( ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )? ( (lv_switch_9_0= ruleXExpressionOrSimpleConstructorCall ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_1 = input.LA(1);

                         
                        int index164_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred25_PsiInternalXtend()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index164_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_125s = "\73\uffff";
    static final String dfa_126s = "\1\4\10\0\1\uffff\26\0\33\uffff";
    static final String dfa_127s = "\1\167\10\0\1\uffff\26\0\33\uffff";
    static final String dfa_128s = "\11\uffff\1\1\26\uffff\1\2\32\uffff";
    static final String dfa_129s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\33\uffff}>";
    static final String[] dfa_130s = {
            "\1\25\1\uffff\1\13\1\40\2\uffff\1\17\1\21\1\40\1\uffff\1\23\1\16\1\4\1\10\1\uffff\1\11\1\uffff\1\1\1\32\1\40\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\uffff\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\2\uffff\1\40\2\uffff\1\40\11\uffff\2\40\23\uffff\2\40\4\uffff\1\40\5\uffff\1\40\1\uffff\12\40\2\uffff\1\2\3\40\4\uffff\3\40",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[][] dfa_130 = unpackEncodedStringArray(dfa_130s);

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "6041:5: ( ( ( ( ( ruleJvmFormalParameter ) ) ':' ) )=> ( ( (lv_declaredParam_7_0= ruleJvmFormalParameter ) ) otherlv_8= ':' ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA163_0 = input.LA(1);

                         
                        int index163_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA163_0==KW_Extension) ) {s = 1;}

                        else if ( (LA163_0==RULE_ID) ) {s = 2;}

                        else if ( (LA163_0==KW_Create) ) {s = 3;}

                        else if ( (LA163_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA163_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA163_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA163_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA163_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA163_0==KW_EqualsSignGreaterThanSign) && (synpred26_PsiInternalXtend())) {s = 9;}

                        else if ( (LA163_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA163_0==KW_Class) ) {s = 11;}

                        else if ( (LA163_0==KW_Def) ) {s = 12;}

                        else if ( (LA163_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA163_0==KW_Enum) ) {s = 14;}

                        else if ( (LA163_0==KW_Extends) ) {s = 15;}

                        else if ( (LA163_0==KW_Final) ) {s = 16;}

                        else if ( (LA163_0==KW_Implements) ) {s = 17;}

                        else if ( (LA163_0==KW_Import) ) {s = 18;}

                        else if ( (LA163_0==KW_Interface) ) {s = 19;}

                        else if ( (LA163_0==KW_Override) ) {s = 20;}

                        else if ( (LA163_0==KW_Package) ) {s = 21;}

                        else if ( (LA163_0==KW_Public) ) {s = 22;}

                        else if ( (LA163_0==KW_Private) ) {s = 23;}

                        else if ( (LA163_0==KW_Protected) ) {s = 24;}

                        else if ( (LA163_0==KW_Static) ) {s = 25;}

                        else if ( (LA163_0==KW_Throws) ) {s = 26;}

                        else if ( (LA163_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA163_0==KW_Native) ) {s = 28;}

                        else if ( (LA163_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA163_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA163_0==KW_Transient) ) {s = 31;}

                        else if ( (LA163_0==KW_LessThanSign||LA163_0==KW_LeftCurlyBracket||LA163_0==KW_New||LA163_0==KW_Try||LA163_0==KW_Switch||(LA163_0>=KW_NumberSign && LA163_0<=KW_LeftSquareBracket)||(LA163_0>=KW_PlusSign && LA163_0<=KW_HyphenMinus)||LA163_0==KW_ExclamationMark||LA163_0==KW_If||(LA163_0>=KW_For && LA163_0<=KW_Return)||(LA163_0>=RULE_STRING && LA163_0<=RULE_RICH_TEXT_START)||(LA163_0>=RULE_HEX && LA163_0<=RULE_DECIMAL)) ) {s = 32;}

                         
                        input.seek(index163_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA163_1 = input.LA(1);

                         
                        int index163_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA163_2 = input.LA(1);

                         
                        int index163_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA163_3 = input.LA(1);

                         
                        int index163_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA163_4 = input.LA(1);

                         
                        int index163_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA163_5 = input.LA(1);

                         
                        int index163_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA163_6 = input.LA(1);

                         
                        int index163_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA163_7 = input.LA(1);

                         
                        int index163_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA163_8 = input.LA(1);

                         
                        int index163_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA163_10 = input.LA(1);

                         
                        int index163_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA163_11 = input.LA(1);

                         
                        int index163_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA163_12 = input.LA(1);

                         
                        int index163_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA163_13 = input.LA(1);

                         
                        int index163_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA163_14 = input.LA(1);

                         
                        int index163_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA163_15 = input.LA(1);

                         
                        int index163_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA163_16 = input.LA(1);

                         
                        int index163_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA163_17 = input.LA(1);

                         
                        int index163_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA163_18 = input.LA(1);

                         
                        int index163_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA163_19 = input.LA(1);

                         
                        int index163_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA163_20 = input.LA(1);

                         
                        int index163_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA163_21 = input.LA(1);

                         
                        int index163_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA163_22 = input.LA(1);

                         
                        int index163_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA163_23 = input.LA(1);

                         
                        int index163_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA163_24 = input.LA(1);

                         
                        int index163_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA163_25 = input.LA(1);

                         
                        int index163_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA163_26 = input.LA(1);

                         
                        int index163_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA163_27 = input.LA(1);

                         
                        int index163_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA163_28 = input.LA(1);

                         
                        int index163_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA163_29 = input.LA(1);

                         
                        int index163_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA163_30 = input.LA(1);

                         
                        int index163_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA163_31 = input.LA(1);

                         
                        int index163_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred26_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 32;}

                         
                        input.seek(index163_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 163, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_131s = "\1\4\1\20\1\uffff\6\0\1\uffff";
    static final String dfa_132s = "\1\167\1\155\1\uffff\6\0\1\uffff";
    static final String dfa_133s = "\2\uffff\1\2\6\uffff\1\1";
    static final String dfa_134s = "\3\uffff\1\3\1\0\1\4\1\1\1\5\1\2\1\uffff}>";
    static final String[] dfa_135s = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\4\2\3\uffff\2\2\1\1\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\2\uffff\1\2\2\uffff\1\2\11\uffff\2\2\23\uffff\2\2\4\uffff\1\2\5\uffff\1\2\1\uffff\12\2\2\uffff\4\2\4\uffff\3\2",
            "\1\5\30\uffff\1\4\1\uffff\1\6\1\7\1\10\77\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_131 = DFA.unpackEncodedStringToUnsignedChars(dfa_131s);
    static final char[] dfa_132 = DFA.unpackEncodedStringToUnsignedChars(dfa_132s);
    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[][] dfa_135 = unpackEncodedStringArray(dfa_135s);

    class DFA170 extends DFA {

        public DFA170(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 170;
            this.eot = dfa_85;
            this.eof = dfa_85;
            this.min = dfa_131;
            this.max = dfa_132;
            this.accept = dfa_133;
            this.special = dfa_134;
            this.transition = dfa_135;
        }
        public String getDescription() {
            return "6270:2: ( ( ( 'new' )=>this_XbaseConstructorCall_0= ruleXbaseConstructorCall ) | this_XExpression_1= ruleXExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA170_4 = input.LA(1);

                         
                        int index170_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index170_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA170_6 = input.LA(1);

                         
                        int index170_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index170_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA170_8 = input.LA(1);

                         
                        int index170_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index170_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA170_3 = input.LA(1);

                         
                        int index170_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index170_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA170_5 = input.LA(1);

                         
                        int index170_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index170_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA170_7 = input.LA(1);

                         
                        int index170_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred27_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index170_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 170, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_136s = "\1\2\46\uffff";
    static final String dfa_137s = "\1\4\1\0\45\uffff";
    static final String dfa_138s = "\1\155\1\0\45\uffff";
    static final String dfa_139s = "\2\uffff\1\2\43\uffff\1\1";
    static final String dfa_140s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_141s = {
            "\3\2\1\uffff\1\2\4\uffff\4\2\1\1\2\2\1\uffff\1\2\1\uffff\1\2\1\uffff\21\2\1\uffff\3\2\17\uffff\1\2\2\uffff\1\2\54\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[][] dfa_141 = unpackEncodedStringArray(dfa_141s);

    class DFA187 extends DFA {

        public DFA187(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 187;
            this.eot = dfa_20;
            this.eof = dfa_136;
            this.min = dfa_137;
            this.max = dfa_138;
            this.accept = dfa_139;
            this.special = dfa_140;
            this.transition = dfa_141;
        }
        public String getDescription() {
            return "7108:3: ( ( ( '(' )=>otherlv_3= '(' ) ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )? otherlv_8= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA187_1 = input.LA(1);

                         
                        int index187_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred28_PsiInternalXtend()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index187_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 187, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_142s = "\1\4\6\0\66\uffff";
    static final String dfa_143s = "\1\167\6\0\66\uffff";
    static final String dfa_144s = "\7\uffff\1\2\63\uffff\1\3\1\1";
    static final String dfa_145s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\66\uffff}>";
    static final String[] dfa_146s = {
            "\1\7\1\uffff\2\7\2\uffff\3\7\1\uffff\2\7\1\3\1\7\1\73\2\uffff\3\7\1\uffff\14\7\2\uffff\2\7\1\2\1\uffff\1\4\1\5\1\6\1\7\2\uffff\1\7\2\uffff\1\7\10\uffff\3\7\23\uffff\2\7\4\uffff\1\7\5\uffff\1\7\1\uffff\12\7\2\uffff\1\1\3\7\4\uffff\3\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final char[] dfa_143 = DFA.unpackEncodedStringToUnsignedChars(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final short[][] dfa_146 = unpackEncodedStringArray(dfa_146s);

    class DFA186 extends DFA {

        public DFA186(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 186;
            this.eot = dfa_112;
            this.eof = dfa_112;
            this.min = dfa_142;
            this.max = dfa_143;
            this.accept = dfa_144;
            this.special = dfa_145;
            this.transition = dfa_146;
        }
        public String getDescription() {
            return "7119:4: ( ( ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_4_0= ruleXAnnotationElementValuePair ) ) (otherlv_5= ',' ( ( ( ( ( ruleValidID ) ) '=' ) )=> (lv_elementValuePairs_6_0= ruleXAnnotationElementValuePair ) ) )* ) | ( (lv_value_7_0= ruleXAnnotationElementValueOrCommaList ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA186_1 = input.LA(1);

                         
                        int index186_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index186_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA186_2 = input.LA(1);

                         
                        int index186_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index186_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA186_3 = input.LA(1);

                         
                        int index186_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index186_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA186_4 = input.LA(1);

                         
                        int index186_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index186_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA186_5 = input.LA(1);

                         
                        int index186_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index186_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA186_6 = input.LA(1);

                         
                        int index186_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred29_PsiInternalXtend()) ) {s = 60;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index186_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 186, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_147s = {
            "\1\2\1\uffff\2\2\2\uffff\3\2\1\uffff\4\2\3\uffff\3\2\1\uffff\14\2\2\uffff\3\2\1\uffff\4\2\2\uffff\1\2\2\uffff\1\2\10\uffff\1\2\1\1\1\2\23\uffff\2\2\4\uffff\1\2\5\uffff\1\2\1\uffff\12\2\2\uffff\4\2\4\uffff\3\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_147 = unpackEncodedStringArray(dfa_147s);

    class DFA192 extends DFA {

        public DFA192(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 192;
            this.eot = dfa_119;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_147;
        }
        public String getDescription() {
            return "7283:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | (this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression ( () (otherlv_9= ',' ( (lv_elements_10_0= ruleXAnnotationOrExpression ) ) )+ )? ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA192_1 = input.LA(1);

                         
                        int index192_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_PsiInternalXtend()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index192_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 192, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA195 extends DFA {

        public DFA195(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 195;
            this.eot = dfa_119;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_147;
        }
        public String getDescription() {
            return "7423:2: ( ( ( ( ( () '#' '[' ) )=> ( () otherlv_1= '#' otherlv_2= '[' ) ) ( ( (lv_elements_3_0= ruleXAnnotationOrExpression ) ) (otherlv_4= ',' ( (lv_elements_5_0= ruleXAnnotationOrExpression ) ) )* )? otherlv_6= ']' ) | this_XAnnotationOrExpression_7= ruleXAnnotationOrExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA195_1 = input.LA(1);

                         
                        int index195_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred33_PsiInternalXtend()) ) {s = 59;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index195_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 195, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_148s = "\13\uffff";
    static final String dfa_149s = "\1\1\12\uffff";
    static final String dfa_150s = "\1\4\1\uffff\10\0\1\uffff";
    static final String dfa_151s = "\1\167\1\uffff\10\0\1\uffff";
    static final String dfa_152s = "\1\uffff\1\2\10\uffff\1\1";
    static final String dfa_153s = "\2\uffff\1\0\1\5\1\1\1\6\1\2\1\4\1\7\1\3\1\uffff}>";
    static final String[] dfa_154s = {
            "\3\1\1\2\1\1\1\3\11\1\1\4\1\uffff\32\1\1\uffff\3\1\1\uffff\3\1\6\uffff\21\1\1\5\1\6\1\7\1\10\1\11\31\1\1\uffff\13\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[][] dfa_154 = unpackEncodedStringArray(dfa_154s);

    class DFA205 extends DFA {

        public DFA205(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 205;
            this.eot = dfa_148;
            this.eof = dfa_149;
            this.min = dfa_150;
            this.max = dfa_151;
            this.accept = dfa_152;
            this.special = dfa_153;
            this.transition = dfa_154;
        }
        public String getDescription() {
            return "()* loopback of 8199:3: ( ( ( ( () ( ( ruleOpOther ) ) ) )=> ( () ( ( ruleOpOther ) ) ) ) ( (lv_rightOperand_3_0= ruleXAdditiveExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA205_2 = input.LA(1);

                         
                        int index205_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index205_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA205_4 = input.LA(1);

                         
                        int index205_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index205_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA205_6 = input.LA(1);

                         
                        int index205_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index205_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA205_9 = input.LA(1);

                         
                        int index205_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index205_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA205_7 = input.LA(1);

                         
                        int index205_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index205_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA205_3 = input.LA(1);

                         
                        int index205_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index205_3);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA205_5 = input.LA(1);

                         
                        int index205_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index205_5);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA205_8 = input.LA(1);

                         
                        int index205_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred39_PsiInternalXtend()) ) {s = 10;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index205_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 205, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_155s = "\1\7\2\uffff\1\11\7\uffff";
    static final String dfa_156s = "\1\122\2\uffff\1\120\7\uffff";
    static final String dfa_157s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\7\1\10\1\11\1\6\1\3";
    static final String dfa_158s = "\13\uffff}>";
    static final String[] dfa_159s = {
            "\1\6\1\uffff\1\3\11\uffff\1\5\72\uffff\1\1\1\2\1\4\1\7\1\10",
            "",
            "",
            "\1\11\106\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_155 = DFA.unpackEncodedStringToUnsignedChars(dfa_155s);
    static final char[] dfa_156 = DFA.unpackEncodedStringToUnsignedChars(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final short[][] dfa_159 = unpackEncodedStringArray(dfa_159s);

    class DFA208 extends DFA {

        public DFA208(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 208;
            this.eot = dfa_148;
            this.eof = dfa_148;
            this.min = dfa_155;
            this.max = dfa_156;
            this.accept = dfa_157;
            this.special = dfa_158;
            this.transition = dfa_159;
        }
        public String getDescription() {
            return "8267:2: (kw= '->' | kw= '..<' | (kw= '>' kw= '..' ) | kw= '..' | kw= '=>' | (kw= '>' ( ( ( ( '>' '>' ) )=> (kw= '>' kw= '>' ) ) | kw= '>' ) ) | (kw= '<' ( ( ( ( '<' '<' ) )=> (kw= '<' kw= '<' ) ) | kw= '<' | kw= '=>' ) ) | kw= '<>' | kw= '?:' )";
        }
    }

    class DFA224 extends DFA {

        public DFA224(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 224;
            this.eot = dfa_103;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "9179:5: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_17_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )? otherlv_22= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA224_1 = input.LA(1);

                         
                        int index224_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index224_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 224, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA223 extends DFA {

        public DFA223(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 223;
            this.eot = dfa_112;
            this.eof = dfa_112;
            this.min = dfa_113;
            this.max = dfa_114;
            this.accept = dfa_115;
            this.special = dfa_116;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "9201:6: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_memberCallArguments_18_0= ruleXShortClosure ) ) | ( ( (lv_memberCallArguments_19_0= ruleXExpression ) ) (otherlv_20= ',' ( (lv_memberCallArguments_21_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA223_0 = input.LA(1);

                         
                        int index223_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA223_0==KW_Extension) ) {s = 1;}

                        else if ( (LA223_0==RULE_ID) ) {s = 2;}

                        else if ( (LA223_0==KW_Create) ) {s = 3;}

                        else if ( (LA223_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA223_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA223_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA223_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA223_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA223_0==KW_EqualsSignGreaterThanSign) && (synpred49_PsiInternalXtend())) {s = 9;}

                        else if ( (LA223_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA223_0==KW_Class) ) {s = 11;}

                        else if ( (LA223_0==KW_Def) ) {s = 12;}

                        else if ( (LA223_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA223_0==KW_Enum) ) {s = 14;}

                        else if ( (LA223_0==KW_Extends) ) {s = 15;}

                        else if ( (LA223_0==KW_Final) ) {s = 16;}

                        else if ( (LA223_0==KW_Implements) ) {s = 17;}

                        else if ( (LA223_0==KW_Import) ) {s = 18;}

                        else if ( (LA223_0==KW_Interface) ) {s = 19;}

                        else if ( (LA223_0==KW_Override) ) {s = 20;}

                        else if ( (LA223_0==KW_Package) ) {s = 21;}

                        else if ( (LA223_0==KW_Public) ) {s = 22;}

                        else if ( (LA223_0==KW_Private) ) {s = 23;}

                        else if ( (LA223_0==KW_Protected) ) {s = 24;}

                        else if ( (LA223_0==KW_Static) ) {s = 25;}

                        else if ( (LA223_0==KW_Throws) ) {s = 26;}

                        else if ( (LA223_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA223_0==KW_Native) ) {s = 28;}

                        else if ( (LA223_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA223_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA223_0==KW_Transient) ) {s = 31;}

                        else if ( (LA223_0==KW_VerticalLine) && (synpred49_PsiInternalXtend())) {s = 32;}

                        else if ( (LA223_0==KW_LessThanSign||LA223_0==KW_LeftCurlyBracket||LA223_0==KW_New||LA223_0==KW_Try||LA223_0==KW_Switch||(LA223_0>=KW_NumberSign && LA223_0<=KW_LeftSquareBracket)||(LA223_0>=KW_PlusSign && LA223_0<=KW_HyphenMinus)||LA223_0==KW_ExclamationMark||LA223_0==KW_If||(LA223_0>=KW_For && LA223_0<=KW_Return)||(LA223_0>=RULE_STRING && LA223_0<=RULE_RICH_TEXT_START)||(LA223_0>=RULE_HEX && LA223_0<=RULE_DECIMAL)) ) {s = 33;}

                        else if ( (LA223_0==KW_RightParenthesis) ) {s = 60;}

                         
                        input.seek(index223_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA223_1 = input.LA(1);

                         
                        int index223_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA223_2 = input.LA(1);

                         
                        int index223_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA223_3 = input.LA(1);

                         
                        int index223_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA223_4 = input.LA(1);

                         
                        int index223_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA223_5 = input.LA(1);

                         
                        int index223_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA223_6 = input.LA(1);

                         
                        int index223_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA223_7 = input.LA(1);

                         
                        int index223_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA223_8 = input.LA(1);

                         
                        int index223_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA223_10 = input.LA(1);

                         
                        int index223_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA223_11 = input.LA(1);

                         
                        int index223_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA223_12 = input.LA(1);

                         
                        int index223_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA223_13 = input.LA(1);

                         
                        int index223_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA223_14 = input.LA(1);

                         
                        int index223_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA223_15 = input.LA(1);

                         
                        int index223_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA223_16 = input.LA(1);

                         
                        int index223_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA223_17 = input.LA(1);

                         
                        int index223_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA223_18 = input.LA(1);

                         
                        int index223_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA223_19 = input.LA(1);

                         
                        int index223_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA223_20 = input.LA(1);

                         
                        int index223_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA223_21 = input.LA(1);

                         
                        int index223_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA223_22 = input.LA(1);

                         
                        int index223_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA223_23 = input.LA(1);

                         
                        int index223_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA223_24 = input.LA(1);

                         
                        int index223_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA223_25 = input.LA(1);

                         
                        int index223_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA223_26 = input.LA(1);

                         
                        int index223_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA223_27 = input.LA(1);

                         
                        int index223_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA223_28 = input.LA(1);

                         
                        int index223_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA223_29 = input.LA(1);

                         
                        int index223_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA223_30 = input.LA(1);

                         
                        int index223_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA223_31 = input.LA(1);

                         
                        int index223_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index223_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 223, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA225 extends DFA {

        public DFA225(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 225;
            this.eot = dfa_103;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "9293:5: ( ( ( () '[' ) )=> (lv_memberCallArguments_23_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA225_1 = input.LA(1);

                         
                        int index225_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred50_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index225_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 225, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_160s = "\72\uffff";
    static final String dfa_161s = "\1\4\3\uffff\1\0\53\uffff\1\0\11\uffff";
    static final String dfa_162s = "\1\167\3\uffff\1\0\53\uffff\1\0\11\uffff";
    static final String dfa_163s = "\1\uffff\1\1\1\2\1\3\1\uffff\1\5\35\uffff\1\6\13\uffff\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\4\1\10\1\11";
    static final String dfa_164s = "\4\uffff\1\0\53\uffff\1\1\11\uffff}>";
    static final String[] dfa_165s = {
            "\1\5\1\uffff\2\5\2\uffff\2\5\1\2\1\uffff\3\5\1\66\3\uffff\2\5\1\1\1\uffff\12\5\1\4\1\5\2\uffff\3\5\1\uffff\4\5\2\uffff\1\65\2\uffff\1\3\11\uffff\2\43\37\uffff\1\57\1\uffff\1\60\1\61\1\62\1\5\4\43\1\63\1\64\2\uffff\1\5\3\43\4\uffff\3\43",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final char[] dfa_162 = DFA.unpackEncodedStringToUnsignedChars(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final short[][] dfa_165 = unpackEncodedStringArray(dfa_165s);

    class DFA227 extends DFA {

        public DFA227(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 227;
            this.eot = dfa_160;
            this.eof = dfa_160;
            this.min = dfa_161;
            this.max = dfa_162;
            this.accept = dfa_163;
            this.special = dfa_164;
            this.transition = dfa_165;
        }
        public String getDescription() {
            return "9329:2: (this_XConstructorCall_0= ruleXConstructorCall | this_XBlockExpression_1= ruleXBlockExpression | this_XSwitchExpression_2= ruleXSwitchExpression | ( ( ( () 'synchronized' '(' ) )=>this_XSynchronizedExpression_3= ruleXSynchronizedExpression ) | this_XFeatureCall_4= ruleXFeatureCall | this_XLiteral_5= ruleXLiteral | this_XIfExpression_6= ruleXIfExpression | ( ( ( () 'for' '(' ( ( ruleJvmFormalParameter ) ) ':' ) )=>this_XForLoopExpression_7= ruleXForLoopExpression ) | this_XBasicForLoopExpression_8= ruleXBasicForLoopExpression | this_XWhileExpression_9= ruleXWhileExpression | this_XDoWhileExpression_10= ruleXDoWhileExpression | this_XThrowExpression_11= ruleXThrowExpression | this_XReturnExpression_12= ruleXReturnExpression | this_XTryCatchFinallyExpression_13= ruleXTryCatchFinallyExpression | this_XParenthesizedExpression_14= ruleXParenthesizedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA227_4 = input.LA(1);

                         
                        int index227_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_PsiInternalXtend()) ) {s = 55;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index227_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA227_48 = input.LA(1);

                         
                        int index227_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_PsiInternalXtend()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index227_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 227, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_166s = "\77\uffff";
    static final String dfa_167s = "\1\4\10\0\1\uffff\26\0\37\uffff";
    static final String dfa_168s = "\1\167\10\0\1\uffff\26\0\37\uffff";
    static final String dfa_169s = "\11\uffff\1\1\26\uffff\1\1\1\2\35\uffff";
    static final String dfa_170s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\37\uffff}>";
    static final String[] dfa_171s = {
            "\1\25\1\uffff\1\13\1\41\2\uffff\1\17\1\21\1\41\1\uffff\1\23\1\16\1\4\1\10\1\uffff\1\11\1\uffff\1\1\1\32\1\41\1\uffff\1\26\1\27\1\30\1\12\1\31\1\15\1\20\1\33\1\34\1\35\1\36\1\37\2\41\1\14\1\24\1\3\1\uffff\1\5\1\6\1\7\1\22\2\uffff\1\41\1\uffff\1\40\1\41\11\uffff\3\41\22\uffff\2\41\4\uffff\1\41\5\uffff\1\41\1\uffff\12\41\2\uffff\1\2\3\41\4\uffff\3\41",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final char[] dfa_167 = DFA.unpackEncodedStringToUnsignedChars(dfa_167s);
    static final char[] dfa_168 = DFA.unpackEncodedStringToUnsignedChars(dfa_168s);
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final short[][] dfa_171 = unpackEncodedStringArray(dfa_171s);

    class DFA236 extends DFA {

        public DFA236(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 236;
            this.eot = dfa_166;
            this.eof = dfa_166;
            this.min = dfa_167;
            this.max = dfa_168;
            this.accept = dfa_169;
            this.special = dfa_170;
            this.transition = dfa_171;
        }
        public String getDescription() {
            return "9807:3: ( ( ( ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> ( ( ( (lv_declaredFormalParameters_2_0= ruleJvmFormalParameter ) ) (otherlv_3= ',' ( (lv_declaredFormalParameters_4_0= ruleJvmFormalParameter ) ) )* )? ( (lv_explicitSyntax_5_0= '|' ) ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA236_0 = input.LA(1);

                         
                        int index236_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA236_0==KW_Extension) ) {s = 1;}

                        else if ( (LA236_0==RULE_ID) ) {s = 2;}

                        else if ( (LA236_0==KW_Create) ) {s = 3;}

                        else if ( (LA236_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA236_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA236_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA236_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA236_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA236_0==KW_EqualsSignGreaterThanSign) && (synpred55_PsiInternalXtend())) {s = 9;}

                        else if ( (LA236_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA236_0==KW_Class) ) {s = 11;}

                        else if ( (LA236_0==KW_Def) ) {s = 12;}

                        else if ( (LA236_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA236_0==KW_Enum) ) {s = 14;}

                        else if ( (LA236_0==KW_Extends) ) {s = 15;}

                        else if ( (LA236_0==KW_Final) ) {s = 16;}

                        else if ( (LA236_0==KW_Implements) ) {s = 17;}

                        else if ( (LA236_0==KW_Import) ) {s = 18;}

                        else if ( (LA236_0==KW_Interface) ) {s = 19;}

                        else if ( (LA236_0==KW_Override) ) {s = 20;}

                        else if ( (LA236_0==KW_Package) ) {s = 21;}

                        else if ( (LA236_0==KW_Public) ) {s = 22;}

                        else if ( (LA236_0==KW_Private) ) {s = 23;}

                        else if ( (LA236_0==KW_Protected) ) {s = 24;}

                        else if ( (LA236_0==KW_Static) ) {s = 25;}

                        else if ( (LA236_0==KW_Throws) ) {s = 26;}

                        else if ( (LA236_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA236_0==KW_Native) ) {s = 28;}

                        else if ( (LA236_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA236_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA236_0==KW_Transient) ) {s = 31;}

                        else if ( (LA236_0==KW_VerticalLine) && (synpred55_PsiInternalXtend())) {s = 32;}

                        else if ( (LA236_0==KW_LessThanSign||LA236_0==KW_LeftCurlyBracket||LA236_0==KW_New||(LA236_0>=KW_Val && LA236_0<=KW_Var)||LA236_0==KW_Try||LA236_0==KW_Switch||(LA236_0>=KW_NumberSign && LA236_0<=KW_RightSquareBracket)||(LA236_0>=KW_PlusSign && LA236_0<=KW_HyphenMinus)||LA236_0==KW_ExclamationMark||LA236_0==KW_If||(LA236_0>=KW_For && LA236_0<=KW_Return)||(LA236_0>=RULE_STRING && LA236_0<=RULE_RICH_TEXT_START)||(LA236_0>=RULE_HEX && LA236_0<=RULE_DECIMAL)) ) {s = 33;}

                         
                        input.seek(index236_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA236_1 = input.LA(1);

                         
                        int index236_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA236_2 = input.LA(1);

                         
                        int index236_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA236_3 = input.LA(1);

                         
                        int index236_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA236_4 = input.LA(1);

                         
                        int index236_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA236_5 = input.LA(1);

                         
                        int index236_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA236_6 = input.LA(1);

                         
                        int index236_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA236_7 = input.LA(1);

                         
                        int index236_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA236_8 = input.LA(1);

                         
                        int index236_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA236_10 = input.LA(1);

                         
                        int index236_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA236_11 = input.LA(1);

                         
                        int index236_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA236_12 = input.LA(1);

                         
                        int index236_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA236_13 = input.LA(1);

                         
                        int index236_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA236_14 = input.LA(1);

                         
                        int index236_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA236_15 = input.LA(1);

                         
                        int index236_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA236_16 = input.LA(1);

                         
                        int index236_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA236_17 = input.LA(1);

                         
                        int index236_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA236_18 = input.LA(1);

                         
                        int index236_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA236_19 = input.LA(1);

                         
                        int index236_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA236_20 = input.LA(1);

                         
                        int index236_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA236_21 = input.LA(1);

                         
                        int index236_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA236_22 = input.LA(1);

                         
                        int index236_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA236_23 = input.LA(1);

                         
                        int index236_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA236_24 = input.LA(1);

                         
                        int index236_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA236_25 = input.LA(1);

                         
                        int index236_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA236_26 = input.LA(1);

                         
                        int index236_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA236_27 = input.LA(1);

                         
                        int index236_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA236_28 = input.LA(1);

                         
                        int index236_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA236_29 = input.LA(1);

                         
                        int index236_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA236_30 = input.LA(1);

                         
                        int index236_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA236_31 = input.LA(1);

                         
                        int index236_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred55_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index236_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 236, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA254 extends DFA {

        public DFA254(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 254;
            this.eot = dfa_103;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_111;
        }
        public String getDescription() {
            return "10842:3: ( ( ( ( '(' ) )=> (lv_explicitOperationCall_7_0= '(' ) ) ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )? otherlv_12= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA254_1 = input.LA(1);

                         
                        int index254_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index254_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 254, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA253 extends DFA {

        public DFA253(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 253;
            this.eot = dfa_112;
            this.eof = dfa_112;
            this.min = dfa_113;
            this.max = dfa_114;
            this.accept = dfa_115;
            this.special = dfa_116;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "10864:4: ( ( ( ( () ( ( ( ruleJvmFormalParameter ) ) ( ',' ( ( ruleJvmFormalParameter ) ) )* )? ( ( '|' ) ) ) )=> (lv_featureCallArguments_8_0= ruleXShortClosure ) ) | ( ( (lv_featureCallArguments_9_0= ruleXExpression ) ) (otherlv_10= ',' ( (lv_featureCallArguments_11_0= ruleXExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA253_0 = input.LA(1);

                         
                        int index253_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA253_0==KW_Extension) ) {s = 1;}

                        else if ( (LA253_0==RULE_ID) ) {s = 2;}

                        else if ( (LA253_0==KW_Create) ) {s = 3;}

                        else if ( (LA253_0==KW_Annotation) ) {s = 4;}

                        else if ( (LA253_0==KW_AFTER) ) {s = 5;}

                        else if ( (LA253_0==KW_BEFORE) ) {s = 6;}

                        else if ( (LA253_0==KW_SEPARATOR) ) {s = 7;}

                        else if ( (LA253_0==KW_LeftParenthesis) ) {s = 8;}

                        else if ( (LA253_0==KW_EqualsSignGreaterThanSign) && (synpred61_PsiInternalXtend())) {s = 9;}

                        else if ( (LA253_0==KW_Abstract) ) {s = 10;}

                        else if ( (LA253_0==KW_Class) ) {s = 11;}

                        else if ( (LA253_0==KW_Def) ) {s = 12;}

                        else if ( (LA253_0==KW_Dispatch) ) {s = 13;}

                        else if ( (LA253_0==KW_Enum) ) {s = 14;}

                        else if ( (LA253_0==KW_Extends) ) {s = 15;}

                        else if ( (LA253_0==KW_Final) ) {s = 16;}

                        else if ( (LA253_0==KW_Implements) ) {s = 17;}

                        else if ( (LA253_0==KW_Import) ) {s = 18;}

                        else if ( (LA253_0==KW_Interface) ) {s = 19;}

                        else if ( (LA253_0==KW_Override) ) {s = 20;}

                        else if ( (LA253_0==KW_Package) ) {s = 21;}

                        else if ( (LA253_0==KW_Public) ) {s = 22;}

                        else if ( (LA253_0==KW_Private) ) {s = 23;}

                        else if ( (LA253_0==KW_Protected) ) {s = 24;}

                        else if ( (LA253_0==KW_Static) ) {s = 25;}

                        else if ( (LA253_0==KW_Throws) ) {s = 26;}

                        else if ( (LA253_0==KW_Strictfp) ) {s = 27;}

                        else if ( (LA253_0==KW_Native) ) {s = 28;}

                        else if ( (LA253_0==KW_Volatile) ) {s = 29;}

                        else if ( (LA253_0==KW_Synchronized) ) {s = 30;}

                        else if ( (LA253_0==KW_Transient) ) {s = 31;}

                        else if ( (LA253_0==KW_VerticalLine) && (synpred61_PsiInternalXtend())) {s = 32;}

                        else if ( (LA253_0==KW_LessThanSign||LA253_0==KW_LeftCurlyBracket||LA253_0==KW_New||LA253_0==KW_Try||LA253_0==KW_Switch||(LA253_0>=KW_NumberSign && LA253_0<=KW_LeftSquareBracket)||(LA253_0>=KW_PlusSign && LA253_0<=KW_HyphenMinus)||LA253_0==KW_ExclamationMark||LA253_0==KW_If||(LA253_0>=KW_For && LA253_0<=KW_Return)||(LA253_0>=RULE_STRING && LA253_0<=RULE_RICH_TEXT_START)||(LA253_0>=RULE_HEX && LA253_0<=RULE_DECIMAL)) ) {s = 33;}

                        else if ( (LA253_0==KW_RightParenthesis) ) {s = 60;}

                         
                        input.seek(index253_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA253_1 = input.LA(1);

                         
                        int index253_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA253_2 = input.LA(1);

                         
                        int index253_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA253_3 = input.LA(1);

                         
                        int index253_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA253_4 = input.LA(1);

                         
                        int index253_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA253_5 = input.LA(1);

                         
                        int index253_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA253_6 = input.LA(1);

                         
                        int index253_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA253_7 = input.LA(1);

                         
                        int index253_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA253_8 = input.LA(1);

                         
                        int index253_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA253_10 = input.LA(1);

                         
                        int index253_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA253_11 = input.LA(1);

                         
                        int index253_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA253_12 = input.LA(1);

                         
                        int index253_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA253_13 = input.LA(1);

                         
                        int index253_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA253_14 = input.LA(1);

                         
                        int index253_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA253_15 = input.LA(1);

                         
                        int index253_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA253_16 = input.LA(1);

                         
                        int index253_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA253_17 = input.LA(1);

                         
                        int index253_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA253_18 = input.LA(1);

                         
                        int index253_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA253_19 = input.LA(1);

                         
                        int index253_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA253_20 = input.LA(1);

                         
                        int index253_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA253_21 = input.LA(1);

                         
                        int index253_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA253_22 = input.LA(1);

                         
                        int index253_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA253_23 = input.LA(1);

                         
                        int index253_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA253_24 = input.LA(1);

                         
                        int index253_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA253_25 = input.LA(1);

                         
                        int index253_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA253_26 = input.LA(1);

                         
                        int index253_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA253_27 = input.LA(1);

                         
                        int index253_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA253_28 = input.LA(1);

                         
                        int index253_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA253_29 = input.LA(1);

                         
                        int index253_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA253_30 = input.LA(1);

                         
                        int index253_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA253_31 = input.LA(1);

                         
                        int index253_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred61_PsiInternalXtend()) ) {s = 32;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index253_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 253, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA255 extends DFA {

        public DFA255(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 255;
            this.eot = dfa_103;
            this.eof = dfa_104;
            this.min = dfa_105;
            this.max = dfa_106;
            this.accept = dfa_107;
            this.special = dfa_108;
            this.transition = dfa_118;
        }
        public String getDescription() {
            return "10956:3: ( ( ( () '[' ) )=> (lv_featureCallArguments_13_0= ruleXClosure ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA255_1 = input.LA(1);

                         
                        int index255_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index255_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 255, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_172s = "\1\72\154\uffff";
    static final String dfa_173s = "\1\4\71\0\63\uffff";
    static final String dfa_174s = "\1\167\71\0\63\uffff";
    static final String dfa_175s = "\72\uffff\1\2\61\uffff\1\1";
    static final String dfa_176s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\63\uffff}>";
    static final String[] dfa_177s = {
            "\1\17\1\72\1\4\1\44\2\72\1\11\1\13\1\42\1\72\1\15\1\10\1\3\1\71\2\72\1\uffff\1\35\1\24\1\41\1\72\1\20\1\21\1\22\1\2\1\23\1\7\1\12\1\25\1\26\1\27\1\30\1\31\2\72\1\6\1\16\1\5\1\72\1\32\1\33\1\34\1\14\1\uffff\1\72\1\70\1\72\1\uffff\1\43\2\72\6\uffff\1\72\1\46\1\47\23\72\1\40\1\37\4\72\1\36\5\72\1\62\1\72\1\63\1\64\1\65\1\45\1\50\1\51\1\55\1\61\1\66\1\67\1\72\1\uffff\1\1\1\56\1\57\1\60\4\72\1\52\1\53\1\54",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_172 = DFA.unpackEncodedString(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final char[] dfa_174 = DFA.unpackEncodedStringToUnsignedChars(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final short[][] dfa_177 = unpackEncodedStringArray(dfa_177s);

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = dfa_103;
            this.eof = dfa_172;
            this.min = dfa_173;
            this.max = dfa_174;
            this.accept = dfa_175;
            this.special = dfa_176;
            this.transition = dfa_177;
        }
        public String getDescription() {
            return "11263:3: ( ( 'abstract' | 'annotation' | 'class' | 'create' | 'def' | 'dispatch' | 'enum' | 'extends' | 'final' | 'implements' | 'import' | 'interface' | 'override' | 'package' | 'public' | 'private' | 'protected' | 'static' | 'throws' | 'strictfp' | 'native' | 'volatile' | 'synchronized' | 'transient' | 'AFTER' | 'BEFORE' | 'SEPARATOR' | 'extension' | '!' | '-' | '+' | 'new' | '{' | 'switch' | '<' | 'super' | '#' | '[' | 'false' | 'true' | 'null' | 'typeof' | 'if' | 'for' | 'while' | 'do' | 'throw' | 'return' | 'try' | '(' | RULE_ID | RULE_HEX | RULE_INT | RULE_DECIMAL | RULE_STRING | RULE_RICH_TEXT | RULE_RICH_TEXT_START )=> (lv_expression_2_0= ruleXExpression ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA259_1 = input.LA(1);

                         
                        int index259_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA259_2 = input.LA(1);

                         
                        int index259_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA259_3 = input.LA(1);

                         
                        int index259_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA259_4 = input.LA(1);

                         
                        int index259_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA259_5 = input.LA(1);

                         
                        int index259_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA259_6 = input.LA(1);

                         
                        int index259_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA259_7 = input.LA(1);

                         
                        int index259_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA259_8 = input.LA(1);

                         
                        int index259_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA259_9 = input.LA(1);

                         
                        int index259_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA259_10 = input.LA(1);

                         
                        int index259_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA259_11 = input.LA(1);

                         
                        int index259_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA259_12 = input.LA(1);

                         
                        int index259_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA259_13 = input.LA(1);

                         
                        int index259_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA259_14 = input.LA(1);

                         
                        int index259_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA259_15 = input.LA(1);

                         
                        int index259_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA259_16 = input.LA(1);

                         
                        int index259_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA259_17 = input.LA(1);

                         
                        int index259_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA259_18 = input.LA(1);

                         
                        int index259_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA259_19 = input.LA(1);

                         
                        int index259_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA259_20 = input.LA(1);

                         
                        int index259_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA259_21 = input.LA(1);

                         
                        int index259_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA259_22 = input.LA(1);

                         
                        int index259_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA259_23 = input.LA(1);

                         
                        int index259_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA259_24 = input.LA(1);

                         
                        int index259_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA259_25 = input.LA(1);

                         
                        int index259_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA259_26 = input.LA(1);

                         
                        int index259_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA259_27 = input.LA(1);

                         
                        int index259_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA259_28 = input.LA(1);

                         
                        int index259_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA259_29 = input.LA(1);

                         
                        int index259_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA259_30 = input.LA(1);

                         
                        int index259_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA259_31 = input.LA(1);

                         
                        int index259_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA259_32 = input.LA(1);

                         
                        int index259_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA259_33 = input.LA(1);

                         
                        int index259_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA259_34 = input.LA(1);

                         
                        int index259_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA259_35 = input.LA(1);

                         
                        int index259_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA259_36 = input.LA(1);

                         
                        int index259_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA259_37 = input.LA(1);

                         
                        int index259_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA259_38 = input.LA(1);

                         
                        int index259_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA259_39 = input.LA(1);

                         
                        int index259_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA259_40 = input.LA(1);

                         
                        int index259_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA259_41 = input.LA(1);

                         
                        int index259_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA259_42 = input.LA(1);

                         
                        int index259_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA259_43 = input.LA(1);

                         
                        int index259_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA259_44 = input.LA(1);

                         
                        int index259_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA259_45 = input.LA(1);

                         
                        int index259_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA259_46 = input.LA(1);

                         
                        int index259_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA259_47 = input.LA(1);

                         
                        int index259_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA259_48 = input.LA(1);

                         
                        int index259_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA259_49 = input.LA(1);

                         
                        int index259_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA259_50 = input.LA(1);

                         
                        int index259_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA259_51 = input.LA(1);

                         
                        int index259_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA259_52 = input.LA(1);

                         
                        int index259_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA259_53 = input.LA(1);

                         
                        int index259_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA259_54 = input.LA(1);

                         
                        int index259_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA259_55 = input.LA(1);

                         
                        int index259_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_55);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA259_56 = input.LA(1);

                         
                        int index259_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_56);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA259_57 = input.LA(1);

                         
                        int index259_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred63_PsiInternalXtend()) ) {s = 108;}

                        else if ( (true) ) {s = 58;}

                         
                        input.seek(index259_57);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 259, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_178s = "\1\1\11\uffff";
    static final String dfa_179s = "\1\4\1\uffff\1\4\6\0\1\uffff";
    static final String dfa_180s = "\1\167\1\uffff\1\155\6\0\1\uffff";
    static final String dfa_181s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_182s = "\3\uffff\1\4\1\2\1\0\1\1\1\5\1\3\1\uffff}>";
    static final String[] dfa_183s = {
            "\24\1\1\2\36\1\6\uffff\73\1",
            "",
            "\1\1\1\uffff\2\1\2\uffff\2\1\2\uffff\2\1\1\4\4\uffff\2\1\2\uffff\14\1\2\uffff\2\1\1\5\1\uffff\1\6\1\7\1\10\1\1\46\uffff\1\1\16\uffff\1\1\10\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final char[] dfa_179 = DFA.unpackEncodedStringToUnsignedChars(dfa_179s);
    static final char[] dfa_180 = DFA.unpackEncodedStringToUnsignedChars(dfa_180s);
    static final short[] dfa_181 = DFA.unpackEncodedString(dfa_181s);
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final short[][] dfa_183 = unpackEncodedStringArray(dfa_183s);

    class DFA260 extends DFA {

        public DFA260(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 260;
            this.eot = dfa_85;
            this.eof = dfa_178;
            this.min = dfa_179;
            this.max = dfa_180;
            this.accept = dfa_181;
            this.special = dfa_182;
            this.transition = dfa_183;
        }
        public String getDescription() {
            return "()* loopback of 11451:3: ( ( ( '.' )=>kw= '.' ) ruleValidID )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA260_5 = input.LA(1);

                         
                        int index260_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA260_6 = input.LA(1);

                         
                        int index260_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA260_4 = input.LA(1);

                         
                        int index260_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA260_8 = input.LA(1);

                         
                        int index260_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA260_3 = input.LA(1);

                         
                        int index260_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA260_7 = input.LA(1);

                         
                        int index260_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index260_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 260, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_184s = "\161\uffff";
    static final String dfa_185s = "\1\2\160\uffff";
    static final String dfa_186s = "\1\4\1\0\157\uffff";
    static final String dfa_187s = "\1\167\1\0\157\uffff";
    static final String dfa_188s = "\2\uffff\1\2\155\uffff\1\1";
    static final String dfa_189s = "\1\uffff\1\0\157\uffff}>";
    static final String[] dfa_190s = {
            "\3\2\1\1\57\2\6\uffff\73\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_184 = DFA.unpackEncodedString(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final char[] dfa_187 = DFA.unpackEncodedStringToUnsignedChars(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final short[][] dfa_190 = unpackEncodedStringArray(dfa_190s);

    class DFA274 extends DFA {

        public DFA274(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 274;
            this.eot = dfa_184;
            this.eof = dfa_185;
            this.min = dfa_186;
            this.max = dfa_187;
            this.accept = dfa_188;
            this.special = dfa_189;
            this.transition = dfa_190;
        }
        public String getDescription() {
            return "11756:3: ( ( ( '<' )=>otherlv_1= '<' ) ( (lv_arguments_2_0= ruleJvmArgumentTypeReference ) ) (otherlv_3= ',' ( (lv_arguments_4_0= ruleJvmArgumentTypeReference ) ) )* otherlv_5= '>' ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA274_1 = input.LA(1);

                         
                        int index274_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred68_PsiInternalXtend()) ) {s = 112;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index274_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 274, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_191s = {
            "\24\1\1\2\36\1\6\uffff\73\1",
            "",
            "\1\1\1\uffff\2\1\2\uffff\2\1\2\uffff\2\1\1\4\4\uffff\2\1\2\uffff\14\1\2\uffff\2\1\1\5\1\uffff\1\6\1\7\1\10\1\1\65\uffff\1\1\10\uffff\1\3",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[][] dfa_191 = unpackEncodedStringArray(dfa_191s);

    class DFA273 extends DFA {

        public DFA273(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 273;
            this.eot = dfa_85;
            this.eof = dfa_178;
            this.min = dfa_179;
            this.max = dfa_180;
            this.accept = dfa_181;
            this.special = dfa_182;
            this.transition = dfa_191;
        }
        public String getDescription() {
            return "()* loopback of 11813:4: ( ( ( ( () '.' ) )=> ( () otherlv_7= '.' ) ) ( ( ruleValidID ) ) ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )? )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA273_5 = input.LA(1);

                         
                        int index273_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index273_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA273_6 = input.LA(1);

                         
                        int index273_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index273_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA273_4 = input.LA(1);

                         
                        int index273_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index273_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA273_8 = input.LA(1);

                         
                        int index273_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index273_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA273_3 = input.LA(1);

                         
                        int index273_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index273_3);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA273_7 = input.LA(1);

                         
                        int index273_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_PsiInternalXtend()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index273_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 273, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA272 extends DFA {

        public DFA272(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 272;
            this.eot = dfa_184;
            this.eof = dfa_185;
            this.min = dfa_186;
            this.max = dfa_187;
            this.accept = dfa_188;
            this.special = dfa_189;
            this.transition = dfa_190;
        }
        public String getDescription() {
            return "11855:5: ( ( ( '<' )=>otherlv_9= '<' ) ( (lv_arguments_10_0= ruleJvmArgumentTypeReference ) ) (otherlv_11= ',' ( (lv_arguments_12_0= ruleJvmArgumentTypeReference ) ) )* otherlv_13= '>' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA272_1 = input.LA(1);

                         
                        int index272_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred70_PsiInternalXtend()) ) {s = 112;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index272_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 272, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_192s = "\2\uffff\6\11\3\uffff\6\11";
    static final String dfa_193s = "\1\20\1\uffff\6\4\1\20\2\uffff\6\4";
    static final String dfa_194s = "\1\155\1\uffff\6\75\1\155\2\uffff\6\75";
    static final String dfa_195s = "\1\uffff\1\1\7\uffff\1\2\1\3\6\uffff";
    static final String[] dfa_196s = {
            "\1\4\14\uffff\1\1\13\uffff\1\3\1\uffff\1\5\1\6\1\7\77\uffff\1\2",
            "",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\1\15\30\uffff\1\14\1\uffff\1\16\1\17\1\20\47\uffff\1\12\27\uffff\1\13",
            "",
            "",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11",
            "\3\11\7\uffff\3\11\7\uffff\1\10\14\11\11\uffff\1\11\16\uffff\1\11"
    };
    static final short[] dfa_192 = DFA.unpackEncodedString(dfa_192s);
    static final char[] dfa_193 = DFA.unpackEncodedStringToUnsignedChars(dfa_193s);
    static final char[] dfa_194 = DFA.unpackEncodedStringToUnsignedChars(dfa_194s);
    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final short[][] dfa_196 = unpackEncodedStringArray(dfa_196s);

    class DFA284 extends DFA {

        public DFA284(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 284;
            this.eot = dfa_58;
            this.eof = dfa_192;
            this.min = dfa_193;
            this.max = dfa_194;
            this.accept = dfa_195;
            this.special = dfa_62;
            this.transition = dfa_196;
        }
        public String getDescription() {
            return "12329:3: ( ( ( (lv_static_1_0= 'static' ) ) ( (lv_extension_2_0= 'extension' ) )? ( ( ruleQualifiedNameInStaticImport ) ) ( ( (lv_wildcard_4_0= '*' ) ) | ( (lv_memberName_5_0= ruleValidID ) ) ) ) | ( ( ruleQualifiedName ) ) | ( (lv_importedNamespace_7_0= ruleQualifiedNameWithWildcard ) ) )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x00003A0000010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x2000401FFE01C072L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x2000401FFE01C052L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x2000001FFE01C052L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x2000001FFE01C050L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000001FFE000050L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000001C80L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000300L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000001C00L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000001800L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x00003A00000B0000L,0x0000200000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000001100L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x20003BFFFEABE050L,0x0000200000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000001FFE004010L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000001480L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000001400L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000001FFE008010L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x20003A0000012020L,0x0000200000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000002120L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x20003A0000010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000001FFE010010L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x20003A7FFE2BE050L,0x0000200000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x00003A7FFE2F0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000040100L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x00003A7FFE2B0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x20003A7FFE2BC050L,0x0000200000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000007FFE000010L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000000100022L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0xE0127B9FFEE3DCD0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x20003BFFFEABC050L,0x0000200000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x00003A0000110022L,0x0000200000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000001FFE200010L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000019FFE000010L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x00003BFFFE2B0290L,0x000020001BFFDFFEL});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x20003A7FFE2F0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x20003A7FFE2B0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000401022L,0x0001C00000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000001122L,0x0001C00000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000001FFE800010L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000020080L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000401000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x8000000000000002L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x00013A7FFE2B0010L,0x0000200000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000001000082L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000BA0000010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000282L,0x000000000000003EL});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000006000200000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000040020L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0004000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0004000000000000L,0x0000080000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x00007BFFFE6BCC50L,0x0000200000000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x00007B9FFE41CC50L,0x0000200000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000200002L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000006000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000001002L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x8000000000020082L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x8000000000020002L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0xE01A7BFFFEEFDCD0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0008000000000002L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0xE0127BFFFEEBDCD0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x00603E7FFE2B2110L,0x0000200000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0040040000000100L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000040000000100L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0xE2927BFFFEE3DCD0L,0x00FFE7FE82180000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0xE2927BFFFEE3DCD2L,0x00E7E7FE82180000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000380000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x1C00000000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0xE0127B9FFEE7DCD0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0xE0127B9FFEE3DCD0L,0x00E1E7FE82180001L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000001L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000102L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000000200L,0x0000000000000040L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000002L,0x0000000000001E00L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000282L,0x0000000000002040L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000080282L,0x000000000007C000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000080080L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x0000000000180000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000002L,0x0000000001E00000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x00003BFFFE2B0292L,0x000020001BFFDFFEL});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000001000002L,0x0000000060000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x00007B9FFE61CC50L,0x0000200000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x00007B9FFE61CCD0L,0x0000201000000000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x8000000001020002L,0x0000000060000000L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x8000000001000002L,0x0000000060000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0xE0127B9FFEE3FCD0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000002100L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0xE01A7BFFFEEBDCD0L,0x00E1E7FE82180001L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0008000000000100L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0xE0127BFFFEE3DCD0L,0x00E1E7FE82180001L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0xE0127BFFFEE3DCF2L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0xE0127BFFFEE3DCD2L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0xE0127BFFFEE3DCF0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000120L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0xE0127BFFFEE3DCD0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0xE0127B9FFEE3DCF0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0xE0127BFFFEE3FCD0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0xE0127BFFFEE3FCF0L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x8000000000040000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0xE0127B9FFEE3DCD2L,0x00E1E7FE82180000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x00C0000000000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000082L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000402L,0x0000001000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x00003A0020010000L,0x0000200000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x00003A0000210000L,0x0000200000000000L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x00003A0000010000L,0x0000200000200000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x00003A0000010002L,0x0000200000000000L});

}